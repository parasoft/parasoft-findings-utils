#autogenerated
#Tue May 16 13:48:06 CEST 2023
APSC_DV=DISA ASD STIG
APSC_DV.000070=APSC_DV.000070 The application must automatically terminate the non-privileged user session and log off non-privileged users after a 15 minute idle time period has elapsed.
APSC_DV.000070.RUIM=Ensure proper session expiration
APSC_DV.000070.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
APSC_DV.000070.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
APSC_DV.000080=APSC_DV.000080 The application must automatically terminate the admin user session and log off admin users after a 10 minute idle time period is exceeded.
APSC_DV.000080.RUIM=Ensure proper session expiration
APSC_DV.000080.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
APSC_DV.000080.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
APSC_DV.000160=APSC_DV.000160 The application must implement DoD-approved encryption to protect the confidentiality of remote access sessions.
APSC_DV.000160.ACMD=Avoid using custom MessageDigest implementations
APSC_DV.000160.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
APSC_DV.000160.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
APSC_DV.000160.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
APSC_DV.000160.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
APSC_DV.000160.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
APSC_DV.000160.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
APSC_DV.000160.AISSAJAVA.msg.1=The cryptographic class is insecure.
APSC_DV.000160.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
APSC_DV.000160.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
APSC_DV.000160.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
APSC_DV.000160.CKTS=Avoid using cryptographic keys which are too short.
APSC_DV.000160.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
APSC_DV.000160.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
APSC_DV.000160.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
APSC_DV.000160.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
APSC_DV.000160.ICA=Avoid using insecure algorithms for cryptography.
APSC_DV.000160.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
APSC_DV.000160.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
APSC_DV.000160.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
APSC_DV.000160.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
APSC_DV.000160.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
APSC_DV.000160.ICA.msg.2=The cryptography algorithm is used without padding.
APSC_DV.000160.MDSALT=Use hash functions with a salt
APSC_DV.000160.MDSALT.msg.1=A salt is not added to the digest
APSC_DV.000160.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
APSC_DV.000160.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
APSC_DV.000160.USC=Use the SSL-enabled version of classes when possible.
APSC_DV.000160.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
APSC_DV.000160.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
APSC_DV.000160.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
APSC_DV.000160.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
APSC_DV.000160.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
APSC_DV.000160.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
APSC_DV.000160.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
APSC_DV.000160.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
APSC_DV.000170=APSC_DV.000170 The application must implement cryptographic mechanisms to protect the integrity of remote access sessions.
APSC_DV.000170.ACMD=Avoid using custom MessageDigest implementations
APSC_DV.000170.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
APSC_DV.000170.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
APSC_DV.000170.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
APSC_DV.000170.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
APSC_DV.000170.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
APSC_DV.000170.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
APSC_DV.000170.AISSAJAVA.msg.1=The cryptographic class is insecure.
APSC_DV.000170.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
APSC_DV.000170.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
APSC_DV.000170.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
APSC_DV.000170.CKTS=Avoid using cryptographic keys which are too short.
APSC_DV.000170.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
APSC_DV.000170.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
APSC_DV.000170.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
APSC_DV.000170.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
APSC_DV.000170.ICA=Avoid using insecure algorithms for cryptography.
APSC_DV.000170.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
APSC_DV.000170.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
APSC_DV.000170.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
APSC_DV.000170.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
APSC_DV.000170.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
APSC_DV.000170.ICA.msg.2=The cryptography algorithm is used without padding.
APSC_DV.000170.MDSALT=Use hash functions with a salt
APSC_DV.000170.MDSALT.msg.1=A salt is not added to the digest
APSC_DV.000170.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
APSC_DV.000170.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
APSC_DV.000170.USC=Use the SSL-enabled version of classes when possible.
APSC_DV.000170.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
APSC_DV.000170.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
APSC_DV.000170.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
APSC_DV.000170.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
APSC_DV.000170.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
APSC_DV.000170.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
APSC_DV.000170.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
APSC_DV.000170.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
APSC_DV.000460=APSC_DV.000460 The application must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies.
APSC_DV.000460.PERMIT=Avoid EJB 3 methods without security annotations
APSC_DV.000460.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
APSC_DV.000480=APSC_DV.000480 The application must enforce approved authorizations for controlling the flow of information within the system based on organization-defined information flow control policies.
APSC_DV.000480.CAM=Keep all authentication methods centralized to enforce consistency
APSC_DV.000480.CAM.DANGEROUS_METHOD_LIST-description=Authentication method names (in regular expressions) [qualified name of declaring type\#method name]
APSC_DV.000480.CAM.DANGEROUS_METHOD_LIST-label=Authentication method names (in regular expressions)
APSC_DV.000480.CAM.ENCLOSING_METHOD_LIST-description=Centralized authentication method names (in regular expressions) [qualified name of declaring type\#method name]
APSC_DV.000480.CAM.ENCLOSING_METHOD_LIST-label=Centralized authentication method names (in regular expressions)
APSC_DV.000480.CAM.msg.1=''{0}()'' is not allowed to be invoked within ''{1}()'', it should only be invoked inside centralized authentication method declarations.
APSC_DV.000480.CAM.msg.2=''{0}()'' is not allowed to be invoked unless enclosed by centralized access control methods.
APSC_DV.000480.HV=Ensure the HostnameVerifier.verify() method validates the certificate
APSC_DV.000480.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
APSC_DV.000480.SSM=Ensure that an appropriate security manager is set
APSC_DV.000480.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
APSC_DV.000500=APSC_DV.000500 The application must prevent non-privileged users from executing privileged functions to include disabling, circumventing, or altering implemented security safeguards/countermeasures.
APSC_DV.000500.ACDP=Avoid using anonymous "privileged" classes when invoking "AccessController.doPrivileged()".
APSC_DV.000500.ACDP.msg.1=Anonymous subclass of ''{0}'' used in "AccessController.doPrivileged()" invocation.
APSC_DV.000500.PAF=Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' "final"
APSC_DV.000500.PAF.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
APSC_DV.000500.PAF.CHECK_PAE-label=Check subclasses of "java.security.PrivilegedActionException"
APSC_DV.000500.PAF.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
APSC_DV.000500.PAF.IGNORE_ENCLOSED_FINAL-label=Ignore subclasses which are enclosed by a "final" outer class
APSC_DV.000500.PAF.msg.1=Class ''{0}'' extends ''{1}'' and should be declared "final".
APSC_DV.000500.PAF.msg.2=Class ''{0}'' implements ''{1}'' and should be declared "final".
APSC_DV.000500.PCFM=Wrap "privileged" method invocations in "final" methods.
APSC_DV.000500.PCFM.CHECKED_METHODS-label=Check the following method invocations\:
APSC_DV.000500.PCFM.CHECKED_METHODS.SECURITY__BV__PCFM__CHECKED_METHODS__COLUMN1-label=Type (regular expression)
APSC_DV.000500.PCFM.CHECKED_METHODS.SECURITY__BV__PCFM__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
APSC_DV.000500.PCFM.msg.1=Method ''{0}'' calls ''{1}'' and should be declared "final".
APSC_DV.000500.PCL=Limit the number of lines in "privileged" code blocks.
APSC_DV.000500.PCL.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
APSC_DV.000500.PCL.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
APSC_DV.000500.PCL.NUMBER_LINES-label=Limit number of lines in "run()" method to
APSC_DV.000500.PCL.msg.1="run()" method of class ''{0}'' has greater than ''{1}'' lines.
APSC_DV.000500.PCPM=Wrap "privileged" method invocations in "private" methods.
APSC_DV.000500.PCPM.CHECKED_METHODS-label=Check the following method invocations\:
APSC_DV.000500.PCPM.CHECKED_METHODS.SECURITY__BV__PCPM__CHECKED_METHODS__COLUMN1-label=Type (regular expression)
APSC_DV.000500.PCPM.CHECKED_METHODS.SECURITY__BV__PCPM__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
APSC_DV.000500.PCPM.msg.1=Method ''{0}'' calls ''{1}'' and should be declared "private".
APSC_DV.000500.PDLC=Avoid using dynamically loaded classes in "privileged" code blocks.
APSC_DV.000500.PDLC.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
APSC_DV.000500.PDLC.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
APSC_DV.000500.PDLC.msg.1=Method ''{0}'' may dynamically load an untrusted class.
APSC_DV.000500.PPKG=Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package
APSC_DV.000500.PPKG.PERMISSION_TABLE-label=
APSC_DV.000500.PPKG.PERMISSION_TABLE.SECURITY_WSC_PPKG_PERMISSION_TABLE_COLUMN1-label=
APSC_DV.000500.PPKG.PERMISSION_TABLE.SECURITY_WSC_PPKG_PERMISSION_TABLE_COLUMN2-label=
APSC_DV.000500.PPKG.PERMISSION_TABLE.SECURITY_WSC_PPKG_PERMISSION_TABLE_COLUMN3-label=
APSC_DV.000500.PPKG.msg.1=Class name ''{0}'' does not match user-specified regular expression ''{1}''.
APSC_DV.000500.PRMF=Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations "final"
APSC_DV.000500.PRMF.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
APSC_DV.000500.PRMF.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
APSC_DV.000500.PRMF.IGNORE_FINAL_CLASS-label=Ignore "final" classes
APSC_DV.000500.PRMF.msg.1="run()" method of class ''{0}'' should be declared "final".
APSC_DV.000510=APSC_DV.000510 The application must execute without excessive account permissions.
APSC_DV.000510.ACDP=Avoid using anonymous "privileged" classes when invoking "AccessController.doPrivileged()".
APSC_DV.000510.ACDP.msg.1=Anonymous subclass of ''{0}'' used in "AccessController.doPrivileged()" invocation.
APSC_DV.000510.PAF=Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' "final"
APSC_DV.000510.PAF.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
APSC_DV.000510.PAF.CHECK_PAE-label=Check subclasses of "java.security.PrivilegedActionException"
APSC_DV.000510.PAF.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
APSC_DV.000510.PAF.IGNORE_ENCLOSED_FINAL-label=Ignore subclasses which are enclosed by a "final" outer class
APSC_DV.000510.PAF.msg.1=Class ''{0}'' extends ''{1}'' and should be declared "final".
APSC_DV.000510.PAF.msg.2=Class ''{0}'' implements ''{1}'' and should be declared "final".
APSC_DV.000510.PCFM=Wrap "privileged" method invocations in "final" methods.
APSC_DV.000510.PCFM.CHECKED_METHODS-label=Check the following method invocations\:
APSC_DV.000510.PCFM.CHECKED_METHODS.SECURITY__BV__PCFM__CHECKED_METHODS__COLUMN1-label=Type (regular expression)
APSC_DV.000510.PCFM.CHECKED_METHODS.SECURITY__BV__PCFM__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
APSC_DV.000510.PCFM.msg.1=Method ''{0}'' calls ''{1}'' and should be declared "final".
APSC_DV.000510.PCL=Limit the number of lines in "privileged" code blocks.
APSC_DV.000510.PCL.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
APSC_DV.000510.PCL.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
APSC_DV.000510.PCL.NUMBER_LINES-label=Limit number of lines in "run()" method to
APSC_DV.000510.PCL.msg.1="run()" method of class ''{0}'' has greater than ''{1}'' lines.
APSC_DV.000510.PCPM=Wrap "privileged" method invocations in "private" methods.
APSC_DV.000510.PCPM.CHECKED_METHODS-label=Check the following method invocations\:
APSC_DV.000510.PCPM.CHECKED_METHODS.SECURITY__BV__PCPM__CHECKED_METHODS__COLUMN1-label=Type (regular expression)
APSC_DV.000510.PCPM.CHECKED_METHODS.SECURITY__BV__PCPM__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
APSC_DV.000510.PCPM.msg.1=Method ''{0}'' calls ''{1}'' and should be declared "private".
APSC_DV.000510.PDLC=Avoid using dynamically loaded classes in "privileged" code blocks.
APSC_DV.000510.PDLC.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
APSC_DV.000510.PDLC.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
APSC_DV.000510.PDLC.msg.1=Method ''{0}'' may dynamically load an untrusted class.
APSC_DV.000510.PPKG=Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package
APSC_DV.000510.PPKG.PERMISSION_TABLE-label=
APSC_DV.000510.PPKG.PERMISSION_TABLE.SECURITY_WSC_PPKG_PERMISSION_TABLE_COLUMN1-label=
APSC_DV.000510.PPKG.PERMISSION_TABLE.SECURITY_WSC_PPKG_PERMISSION_TABLE_COLUMN2-label=
APSC_DV.000510.PPKG.PERMISSION_TABLE.SECURITY_WSC_PPKG_PERMISSION_TABLE_COLUMN3-label=
APSC_DV.000510.PPKG.msg.1=Class name ''{0}'' does not match user-specified regular expression ''{1}''.
APSC_DV.000510.PRMF=Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations "final"
APSC_DV.000510.PRMF.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
APSC_DV.000510.PRMF.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
APSC_DV.000510.PRMF.IGNORE_FINAL_CLASS-label=Ignore "final" classes
APSC_DV.000510.PRMF.msg.1="run()" method of class ''{0}'' should be declared "final".
APSC_DV.000650=APSC_DV.000650 The application must not write sensitive data into the application logs.
APSC_DV.000650.CONSEN=Do not log confidential or sensitive information
APSC_DV.000650.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
APSC_DV.000650.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
APSC_DV.000650.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
APSC_DV.000650.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
APSC_DV.000650.ENFL=Ensure all sensitive method invocations are logged
APSC_DV.000650.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
APSC_DV.000650.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
APSC_DV.000650.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
APSC_DV.000650.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
APSC_DV.000650.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
APSC_DV.000650.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
APSC_DV.000650.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
APSC_DV.000650.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
APSC_DV.000650.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
APSC_DV.000650.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
APSC_DV.000650.ENFL.tab.LOG_TAG-label=Loggers
APSC_DV.000650.ENFL.tab.POST_LOG_TAG-label=Next statement
APSC_DV.000650.ENFL.tab.PRE_LOG_TAG-label=Previous statement
APSC_DV.001290=APSC_DV.001290 The application must protect audit information from unauthorized modification.
APSC_DV.001290.DCEMSL=Avoid untrusted input when logging messages with Seam Logging API
APSC_DV.001290.DCEMSL.CLASS_FIELDS_ARE_SAFE-label=Consider class fields to be secure
APSC_DV.001290.DCEMSL.msg.1=The ''{0}'' method called on the object of the Log class takes a dangerous argument.
APSC_DV.001300=APSC_DV.001300 The application must protect audit information from unauthorized deletion.
APSC_DV.001300.DCEMSL=Avoid untrusted input when logging messages with Seam Logging API
APSC_DV.001300.DCEMSL.CLASS_FIELDS_ARE_SAFE-label=Consider class fields to be secure
APSC_DV.001300.DCEMSL.msg.1=The ''{0}'' method called on the object of the Log class takes a dangerous argument.
APSC_DV.001460=APSC_DV.001460 An application vulnerability assessment must be conducted.
APSC_DV.001460.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
APSC_DV.001460.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
APSC_DV.001460.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
APSC_DV.001460.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
APSC_DV.001460.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
APSC_DV.001460.AECB.CHECK_CATCH-label=Check "catch" block.
APSC_DV.001460.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
APSC_DV.001460.AECB.CHECK_FINALLY-label=Check "finally" block.
APSC_DV.001460.AECB.CHECK_TRY-label=Check "try" block.
APSC_DV.001460.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
APSC_DV.001460.AECB.msg.1="try" block has an empty body.
APSC_DV.001460.AECB.msg.2="catch" block has an empty body.
APSC_DV.001460.AECB.msg.3="finally" block has an empty body.
APSC_DV.001460.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
APSC_DV.001460.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
APSC_DV.001460.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
APSC_DV.001460.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
APSC_DV.001460.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
APSC_DV.001460.AISSAJAVA.msg.1=The cryptographic class is insecure.
APSC_DV.001460.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
APSC_DV.001460.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
APSC_DV.001460.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
APSC_DV.001460.AUXD=Avoid parsing untrusted data with XMLDecoder
APSC_DV.001460.AUXD.msg.1=The XMLDecoder class is used.
APSC_DV.001460.CDBV=Canonicalize data before validation.
APSC_DV.001460.CDBV.CANON_METHS-description=Canonicalization method names (in regular expressions) [qualified name of declaring type\#method name]
APSC_DV.001460.CDBV.CANON_METHS-label=Canonicalization method names (in regular expressions)
APSC_DV.001460.CDBV.CHECK_TYPES-description=Only check calls with the following argument types [regular expressions for fully qualified class name]
APSC_DV.001460.CDBV.CHECK_TYPES-label=Only check calls with the following argument types
APSC_DV.001460.CDBV.VALID_CLASSES-description=Only check calls within the following classes [regular expressions for fully qualified class name]
APSC_DV.001460.CDBV.VALID_CLASSES-label=Only check calls within the following classes
APSC_DV.001460.CDBV.VALID_METHS-description=Validation method names (in regular expressions) [qualified name of declaring type\#method name]
APSC_DV.001460.CDBV.VALID_METHS-label=Validation method names (in regular expressions)
APSC_DV.001460.CDBV.msg.1=The data in ''{0}'' may not have been canonicalized before being validated.
APSC_DV.001460.CDBV.msg.2=The return value of this call to ''{0}'' may not have been canonicalized before being validated.
APSC_DV.001460.CONSEN=Do not log confidential or sensitive information
APSC_DV.001460.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
APSC_DV.001460.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
APSC_DV.001460.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
APSC_DV.001460.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
APSC_DV.001460.DCSRFJAVA=Do not disable CSRF protection
APSC_DV.001460.DCSRFJAVA.msg.1=CSRF protection is disabled.
APSC_DV.001460.DMDS=Avoid using the DriverManagerDataSource class in production code
APSC_DV.001460.DMDS.msg.1=The DriverManagerDataSource class is not a pooled data source and should not be used in production code.
APSC_DV.001460.DNSL=Avoid DNS lookups for decision making
APSC_DV.001460.DNSL.msg.1=DNS lookup checked here.
APSC_DV.001460.DUID=Create a 'serialVersionUID' for all 'Serializable' classes.
APSC_DV.001460.DUID.CHECK_PRIVATE-label=Check if serialVersionUID is "private"
APSC_DV.001460.DUID.msg.1=No 'serialVersionUID' declared in class ''{0}''.
APSC_DV.001460.DUID.msg.2='serialVersionUID' must be declared "static final long", otherwise it will not be used.
APSC_DV.001460.DUID.msg.3='serialVersionUID' should be declared "private".
APSC_DV.001460.DXXE=Disable XML external entity injection.
APSC_DV.001460.DXXE.msg.1=XXE injection has not been disabled.
APSC_DV.001460.DXXE.msg.2=XXE injection has not been disabled. Ensure your parser version allows you to configure the required options.
APSC_DV.001460.ENFL=Ensure all sensitive method invocations are logged
APSC_DV.001460.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
APSC_DV.001460.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
APSC_DV.001460.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
APSC_DV.001460.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
APSC_DV.001460.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
APSC_DV.001460.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
APSC_DV.001460.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
APSC_DV.001460.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
APSC_DV.001460.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
APSC_DV.001460.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
APSC_DV.001460.ENFL.tab.LOG_TAG-label=Loggers
APSC_DV.001460.ENFL.tab.POST_LOG_TAG-label=Next statement
APSC_DV.001460.ENFL.tab.PRE_LOG_TAG-label=Previous statement
APSC_DV.001460.ENPP=Ensure arguments passed to certain methods come from predefined methods list.
APSC_DV.001460.ENPP.PAIRS_TABLE_HEADER-label=Methods and arguments configuration
APSC_DV.001460.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN1-label=Method to be checked (&lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,...)
APSC_DV.001460.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN2-label=Argument Index to Check (''0''-based)
APSC_DV.001460.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN3-label=Allowed method name (in Regular Expressions)
APSC_DV.001460.ENPP.msg.1=Argument number {0} passed to method ''{1}'' is not an allowed method call.
APSC_DV.001460.EWSSEC=Avoid debug information from Spring Security framework to logs
APSC_DV.001460.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
APSC_DV.001460.HCCK=Avoid using hard-coded cryptographic keys
APSC_DV.001460.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
APSC_DV.001460.HCCK.msg.1=Hard-coded cryptographic key here.
APSC_DV.001460.HCNA=Do not hard-code IP addresses and port numbers.
APSC_DV.001460.HCNA.IP-label=Do not hard-code IP addresses
APSC_DV.001460.HCNA.PORT-label=Do not hard-code port numbers
APSC_DV.001460.HCNA.msg.1=Hard-coded IP address ''{0}''.
APSC_DV.001460.HCNA.msg.2=Hard-coded port number ''{0}''.
APSC_DV.001460.HGRSI=Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class
APSC_DV.001460.HGRSI.msg.1=The 'getRequestedSessionId' method may return untrusted data
APSC_DV.001460.HTTPRHA=Do not rely on IP addresses obtained from HTTP request headers for authentication
APSC_DV.001460.HTTPRHA.msg.1=The IP address retrieved from the HTTP request header is used for authentication
APSC_DV.001460.HTTPRHA.msg.2=The IP address retrieved from the header using the 'getRemoteAddr()' method is used for authentication
APSC_DV.001460.HV=Ensure the HostnameVerifier.verify() method validates the certificate
APSC_DV.001460.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
APSC_DV.001460.ICA=Avoid using insecure algorithms for cryptography.
APSC_DV.001460.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
APSC_DV.001460.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
APSC_DV.001460.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
APSC_DV.001460.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
APSC_DV.001460.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
APSC_DV.001460.ICA.msg.2=The cryptography algorithm is used without padding.
APSC_DV.001460.ISL=Always call 'HttpSession.invalidate()' before 'LoginContext.login()'
APSC_DV.001460.ISL.msg.1=Login without session invalidation.
APSC_DV.001460.IVR=Avoid non-random "byte[]" when using IvParameterSpec.
APSC_DV.001460.IVR.msg.1=IvParameterSpec instantiated with non-random value ''{0}''.
APSC_DV.001460.JXCORS=Restrict cross-origin resource sharing to secure origins
APSC_DV.001460.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
APSC_DV.001460.LGE=Ensure all exceptions are either logged with a standard logger or rethrown
APSC_DV.001460.LGE.CHECK_EXCEPT_FULL_PASSED-label=Check if the exception passed to the logging method is complete
APSC_DV.001460.LGE.CHECK_EXCEPT_LOGGED-label=Check if the exception is passed into the logging method call
APSC_DV.001460.LGE.CHECK_EXCEPT_THROW-label=Check if the caught exception is passed to a new exception or rethrown
APSC_DV.001460.LGE.FLAG_LEVEL-label=Catch clause should contain\:
APSC_DV.001460.LGE.FLAG_LEVEL.0-label=Logging method.
APSC_DV.001460.LGE.FLAG_LEVEL.1-label=Logging method or "throw" exception statement.
APSC_DV.001460.LGE.FLAG_LEVEL.2-label=Logging method, comment, or "throw" exception statement.
APSC_DV.001460.LGE.IGNORE_LIST-label=Ignore exception variables matching the following regular expression(s)\:
APSC_DV.001460.LGE.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
APSC_DV.001460.LGE.LOG_METHOD_EXPRESSION-label=Logging method name in regular expression
APSC_DV.001460.LGE.msg.1=The exception is not logged in the "catch" clause.
APSC_DV.001460.LGE.msg.2=The exception is neither logged nor rethrown in the "catch" clause.
APSC_DV.001460.LGE.msg.3=The exception is neither logged nor rethrown in the "catch" clause. Add a comment to the clause if this is expected.
APSC_DV.001460.LGE.msg.4=The ''{0}'' exception is not passed to the logging method called in the "catch" clause.
APSC_DV.001460.LGE.msg.5=The information passed from the ''{0}'' exception to the logging method may be incomplete.
APSC_DV.001460.LGE.msg.6=The ''{0}'' exception is not rethrown in the "catch" block or passed to the new exception as an argument.
APSC_DV.001460.LGE.tab.IGNORE_LIST_TAB-label=Ignore List
APSC_DV.001460.LGE.tab.LOGGERS_TAB-label=Loggers
APSC_DV.001460.MASP=Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes
APSC_DV.001460.MASP.msg.1=Method is not "protected"\: ''{0}''
APSC_DV.001460.MCMDU=MessageDigest objects must process the data with the 'update' method
APSC_DV.001460.MCMDU.msg.1=The 'update' method is not called on the ''{0}'' variable after the message digest object is obtained
APSC_DV.001460.MDSALT=Use hash functions with a salt
APSC_DV.001460.MDSALT.msg.1=A salt is not added to the digest
APSC_DV.001460.NCE=Do not catch exception types which are too general or are unchecked exceptions.
APSC_DV.001460.NCE.GENERAL-label=Check for general exception types.
APSC_DV.001460.NCE.IGNORE_EXCEPTIONS-label=Ignore exceptions with names matching the following regular expression(s)\:
APSC_DV.001460.NCE.NUM_CHILDREN-label=Check for parent exceptions caught where number of child exceptions thrown is less than
APSC_DV.001460.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN1-label=
APSC_DV.001460.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN2-label=
APSC_DV.001460.NCE.UNCHECKED-label=Check for unchecked exception types.
APSC_DV.001460.NCE.msg.1="catch" statement directly catches the general exception type ''{0}''.
APSC_DV.001460.NCE.msg.2="catch" statement directly catches the unchecked exception type ''{0}''.
APSC_DV.001460.NCE.msg.3="catch" statement catches general parent exception type\: ''{0}''.
APSC_DV.001460.NCNPE=Do not catch 'NullPointerException'
APSC_DV.001460.NCNPE.msg.1=Avoid catching 'NullPointerException'
APSC_DV.001460.NTERR=Do not throw exception types which are too general or are unchecked exceptions.
APSC_DV.001460.NTERR.CHECKED_EXCEPTS-label=Exception types which should not be thrown (fully qualified names)
APSC_DV.001460.NTERR.msg.1=Avoid throwing ''{0}''.
APSC_DV.001460.NTX=Avoid declaring methods to throw general or unchecked Exception types
APSC_DV.001460.NTX.CHECKED_EXCEPTS-label=Exception types which should not be declared to be thrown (fully qualified names)
APSC_DV.001460.NTX.IGNORE_OVERRIDING-label=Ignore overriding methods.
APSC_DV.001460.NTX.IGNORE_PROPAGATED-label=Ignore methods which propagate exception types of called methods.
APSC_DV.001460.NTX.SKIP_JUNIT-label=Skip JUnit classes.
APSC_DV.001460.NTX.SUBCLASSES-label=Check for exceptions which are subclasses of 'Error' and 'RuntimeException'.
APSC_DV.001460.NTX.msg.1=Throwing explicit ''{0}'' object in ''{1}()''.
APSC_DV.001460.ONS=Ensure method arguments are serializable
APSC_DV.001460.ONS.CHECK_INTERFACES-label=Check implementations of interface method arguments (slow)
APSC_DV.001460.ONS.IGNORE_PARAM_COLLECTION-label=Ignore Collections or Maps with Serializable type arguments
APSC_DV.001460.ONS.IGNORE_TYPE_LIST-label=Ignore method arguments of the following types (specify as regular expression)\:
APSC_DV.001460.ONS.SERIAL_LIST-label=List of methods to be checked\: 
APSC_DV.001460.ONS.SERIAL_LIST.PB__API__ONS__SERIAL_LIST__COLUMN1-label=Type
APSC_DV.001460.ONS.SERIAL_LIST.PB__API__ONS__SERIAL_LIST__COLUMN2-label=Method
APSC_DV.001460.ONS.msg.1=This object of type ''{0}'' may not be serializable.
APSC_DV.001460.ONS.msg.2=This object of type ''{0}'' may not be completely serializable.
APSC_DV.001460.OROM=Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes.
APSC_DV.001460.OROM.CHECK_FOR_READ-label=Check that the 'readObject()' method is implemented in all serializable classes.
APSC_DV.001460.OROM.CHECK_FOR_WRITE-label=Check that the 'writeObject()' method is implemented in all serializable classes.
APSC_DV.001460.OROM.IGNORE_TYPES-label=Ignore types extending or implementing the following types (Specify fully qualified names)\:
APSC_DV.001460.OROM.MUST_BE_FINAL-label=Make sure the 'readObject()' method is 'final'.
APSC_DV.001460.OROM.msg.1=Serializable class ''{0}'' does not implement 'readObject()'.
APSC_DV.001460.OROM.msg.2=Serializable class ''{0}'' implements 'readObject()', but this method is not 'final'.
APSC_DV.001460.OROM.msg.3=Serializable class ''{0}'' does not implement 'writeObject()'.
APSC_DV.001460.PBFA=Ensure sufficient protection against multiple failed authentication attempts
APSC_DV.001460.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
APSC_DV.001460.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
APSC_DV.001460.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
APSC_DV.001460.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
APSC_DV.001460.PBRTE=Always specify absolute paths to execute commands
APSC_DV.001460.PBRTE.msg.1=The specified command is not an absolute path with separators
APSC_DV.001460.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
APSC_DV.001460.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
APSC_DV.001460.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
APSC_DV.001460.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
APSC_DV.001460.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
APSC_DV.001460.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
APSC_DV.001460.PLC=Avoid storing sensitive data in plaintext in a cookie
APSC_DV.001460.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
APSC_DV.001460.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
APSC_DV.001460.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
APSC_DV.001460.PLC.msg.1=Do not store important to safety data in cookie.
APSC_DV.001460.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
APSC_DV.001460.RRSC=Define a "readResolve" method for all instances of Serializable types.
APSC_DV.001460.RRSC.CHECK_PACKAGE_PRIVATE-label=a "package-private" constructor
APSC_DV.001460.RRSC.CHECK_PRIVATE-label=a "private" constructor
APSC_DV.001460.RRSC.CHECK_PROTECTED-label=a "protected" constructor
APSC_DV.001460.RRSC.CHECK_PUBLIC-label=a "public" constructor
APSC_DV.001460.RRSC.group.0-label=Check classes with\:
APSC_DV.001460.RRSC.msg.1=The class ''{0}'' implements ''Serializable'' but does not define a "readResolve()" method.
APSC_DV.001460.RRSC.msg.2=The "readResolve()" method of the class ''{0}'' may have a return value other than the Serializable instance.
APSC_DV.001460.RRSC.msg.3=The "readResolve()" method of the class ''{0}'' does not have the correct signature.
APSC_DV.001460.RUIM=Ensure proper session expiration
APSC_DV.001460.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
APSC_DV.001460.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
APSC_DV.001460.RWAF=Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method
APSC_DV.001460.RWAF.CHECK_READ-label=Check 'readObject' methods
APSC_DV.001460.RWAF.CHECK_WRITE-label=Check 'writeObject' methods
APSC_DV.001460.RWAF.MAX_LEVEL-label=Maximum level of checking allowed
APSC_DV.001460.RWAF.msg.1=The ''{0}'' field is not read by the ''readObject()'' method.
APSC_DV.001460.RWAF.msg.2=The ''{0}'' field is not written out by the ''writeObject()'' method.
APSC_DV.001460.SC=Disable LDAP deserialization
APSC_DV.001460.SC.msg.1=The SearchControls object allows deserialization
APSC_DV.001460.SCBNP=Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents
APSC_DV.001460.SCBNP.msg.1=Class has a non-serializable parent but implements Serializable without specifying readObject or WriteObject methods.
APSC_DV.001460.SCBNP.msg.2=Class has a non-serializable parent but implements Serializable without specifying readObject method.
APSC_DV.001460.SCBNP.msg.3=Class has a non-serializable parent but implements Serializable without specifying WriteObject method.
APSC_DV.001460.SIKG=Initialize KeyGenerator instances 
APSC_DV.001460.SIKG.msg.1=The ''{0}'' object of the KeyGenerator class is created but not initialized
APSC_DV.001460.SIO=Avoid calling print methods of 'System.err' or 'System.out'
APSC_DV.001460.SIO.METHOD_SKIP_LIST-label=Exclude methods
APSC_DV.001460.SIO.SCANNED_CLASS_TABLE-label=Include classes
APSC_DV.001460.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
APSC_DV.001460.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
APSC_DV.001460.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
APSC_DV.001460.SNSO=Do not store non-serializable objects as HttpSession attributes
APSC_DV.001460.SNSO.CHECK_ABSTRACT-label=Check abstract classes
APSC_DV.001460.SNSO.CHECK_COLLECTION-label=Check Collections
APSC_DV.001460.SNSO.CHECK_INTERFACE-label=Check interfaces
APSC_DV.001460.SNSO.CHECK_MAP-label=Check Maps
APSC_DV.001460.SNSO.IGNORE_NULL-label=Ignore "null" values
APSC_DV.001460.SNSO.msg.1=Argument ''{0}'' to method "setAttribute" is non-serializable.
APSC_DV.001460.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
APSC_DV.001460.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
APSC_DV.001460.SROS=Do not declare the 'readObject()' method as "synchronized"
APSC_DV.001460.SROS.msg.1=Method readObject()  is synchronized.
APSC_DV.001460.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
APSC_DV.001460.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
APSC_DV.001460.UOSC.msg.2=Make sure that the appropriate version of library is used.
APSC_DV.001460.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
APSC_DV.001460.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
APSC_DV.001460.USC=Use the SSL-enabled version of classes when possible.
APSC_DV.001460.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
APSC_DV.001460.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
APSC_DV.001460.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
APSC_DV.001460.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
APSC_DV.001460.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
APSC_DV.001460.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
APSC_DV.001460.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
APSC_DV.001460.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
APSC_DV.001460.VJFS=Always verify JarFile signatures
APSC_DV.001460.VJFS.msg.1=Consider using a JarFile constructor with verification enabled.
APSC_DV.001460.VOBD=Validate objects before deserialization
APSC_DV.001460.VOBD.msg.1=The object read from the ObjectInputStream is not validated before deserialization
APSC_DV.001460.VSI=Properly validate server identity
APSC_DV.001460.VSI.msg.1=SMTP SSL does not check server identity.
APSC_DV.001460.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
APSC_DV.001860=APSC_DV.001860 The application must use mechanisms meeting the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance for authentication to a cryptographic module.
APSC_DV.001860.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
APSC_DV.001860.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
APSC_DV.001860.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
APSC_DV.001860.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
APSC_DV.001860.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
APSC_DV.001860.AISSAJAVA.msg.1=The cryptographic class is insecure.
APSC_DV.001860.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
APSC_DV.001860.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
APSC_DV.001860.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
APSC_DV.001860.CKTS=Avoid using cryptographic keys which are too short.
APSC_DV.001860.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
APSC_DV.001860.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
APSC_DV.001860.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
APSC_DV.001860.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
APSC_DV.001860.ICA=Avoid using insecure algorithms for cryptography.
APSC_DV.001860.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
APSC_DV.001860.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
APSC_DV.001860.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
APSC_DV.001860.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
APSC_DV.001860.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
APSC_DV.001860.ICA.msg.2=The cryptography algorithm is used without padding.
APSC_DV.001860.MDSALT=Use hash functions with a salt
APSC_DV.001860.MDSALT.msg.1=A salt is not added to the digest
APSC_DV.001860.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
APSC_DV.001860.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
APSC_DV.001995=APSC_DV.001995 The application must not be vulnerable to race conditions.
APSC_DV.001995.DCL=Avoid unsafe implementations of the "double-checked locking" pattern.
APSC_DV.001995.DCL.msg.1=The "double-checked locking" pattern is used; this pattern can cause unexpected problems when compiler optimizations are performed.
APSC_DV.001995.TOCTOU=Avoid Time-of-check Time-of-use (TOCTOU) Race Condition
APSC_DV.001995.TOCTOU.BLOCKING_TABLE_HEADER-label=Blocking instructions
APSC_DV.001995.TOCTOU.BLOCKING_TABLE_HEADER.PB__CUB__TOCTOU__BLOCKING_TABLE_HEADER__COLUMN1-label=Blocking instruction
APSC_DV.001995.TOCTOU.MAX_INSTRUCTIONS_COUNT-label=Maximum number of method calls between the pairs of methods
APSC_DV.001995.TOCTOU.PAIRS_TABLE_HEADER-label=Pairs of methods
APSC_DV.001995.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN1-label=First instruction
APSC_DV.001995.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN2-label=Second instruction
APSC_DV.001995.TOCTOU.msg.1=This call is not preceeded by\: ''{0}'' within {1} method calls.
APSC_DV.001995.TOCTOU.msg.2=This call is not preceeded by\: ''{0}'' before calling blocking instruction\: ''{1}''.
APSC_DV.001995.TOCTOU.msg.3=This call is not preceeded by\: ''{0}'' within block scope.
APSC_DV.002010=APSC_DV.002010 The application must implement NSA-approved cryptography to protect classified information in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards.
APSC_DV.002010.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
APSC_DV.002010.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
APSC_DV.002010.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
APSC_DV.002010.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
APSC_DV.002010.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
APSC_DV.002010.AISSAJAVA.msg.1=The cryptographic class is insecure.
APSC_DV.002010.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
APSC_DV.002010.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
APSC_DV.002010.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
APSC_DV.002010.CKTS=Avoid using cryptographic keys which are too short.
APSC_DV.002010.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
APSC_DV.002010.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
APSC_DV.002010.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
APSC_DV.002010.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
APSC_DV.002010.ICA=Avoid using insecure algorithms for cryptography.
APSC_DV.002010.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
APSC_DV.002010.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
APSC_DV.002010.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
APSC_DV.002010.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
APSC_DV.002010.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
APSC_DV.002010.ICA.msg.2=The cryptography algorithm is used without padding.
APSC_DV.002210=APSC_DV.002210 The application must set the HTTPOnly flag on session cookies.
APSC_DV.002210.SCHTTP=Mark cookies as HttpOnly
APSC_DV.002210.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
APSC_DV.002210.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
APSC_DV.002220=APSC_DV.002220 The application must set the secure flag on session cookies.
APSC_DV.002220.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
APSC_DV.002220.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
APSC_DV.002220.UOSC.msg.2=Make sure that the appropriate version of library is used.
APSC_DV.002290=APSC_DV.002290 The application must use the Federal Information Processing Standard (FIPS) 140-2-validated cryptographic modules and random number generator if the application implements encryption, key exchange, digital signature, and hash functionality.
APSC_DV.002290.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
APSC_DV.002290.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
APSC_DV.002290.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
APSC_DV.002290.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
APSC_DV.002290.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
APSC_DV.002290.AISSAJAVA.msg.1=The cryptographic class is insecure.
APSC_DV.002290.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
APSC_DV.002290.MDSALT=Use hash functions with a salt
APSC_DV.002290.MDSALT.msg.1=A salt is not added to the digest
APSC_DV.002290.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
APSC_DV.002290.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
APSC_DV.002350=APSC_DV.002350 The application must use appropriate cryptography in order to protect stored DoD information when required by the information owner or DoD policy.
APSC_DV.002350.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
APSC_DV.002350.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
APSC_DV.002350.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
APSC_DV.002350.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
APSC_DV.002350.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
APSC_DV.002350.AISSAJAVA.msg.1=The cryptographic class is insecure.
APSC_DV.002350.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
APSC_DV.002350.IC=Do not use initialization circularities for fields
APSC_DV.002350.IC.msg.1=Initialization circularity is detected on this field. Trace of the cycle\: {0}.
APSC_DV.002440=APSC_DV.002440 The application must protect the confidentiality and integrity of transmitted information.
APSC_DV.002440.CONSEN=Do not log confidential or sensitive information
APSC_DV.002440.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
APSC_DV.002440.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
APSC_DV.002440.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
APSC_DV.002440.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
APSC_DV.002440.HCNA=Do not hard-code IP addresses and port numbers.
APSC_DV.002440.HCNA.IP-label=Do not hard-code IP addresses
APSC_DV.002440.HCNA.PORT-label=Do not hard-code port numbers
APSC_DV.002440.HCNA.msg.1=Hard-coded IP address ''{0}''.
APSC_DV.002440.HCNA.msg.2=Hard-coded port number ''{0}''.
APSC_DV.002440.PLC=Avoid storing sensitive data in plaintext in a cookie
APSC_DV.002440.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
APSC_DV.002440.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
APSC_DV.002440.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
APSC_DV.002440.PLC.msg.1=Do not store important to safety data in cookie.
APSC_DV.002440.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
APSC_DV.002500=APSC_DV.002500 The application must protect from Cross-Site Request Forgery (CSRF) vulnerabilities.
APSC_DV.002500.DCSRFJAVA=Do not disable CSRF protection
APSC_DV.002500.DCSRFJAVA.msg.1=CSRF protection is disabled.
APSC_DV.002570=APSC_DV.002570 The application must generate error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries.
APSC_DV.002570.CONSEN=Do not log confidential or sensitive information
APSC_DV.002570.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
APSC_DV.002570.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
APSC_DV.002570.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
APSC_DV.002570.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
APSC_DV.002590=APSC_DV.002590 The application must not be vulnerable to overflow attacks.
APSC_DV.002590.CLP=Do not cast primitive data types to lower precision
APSC_DV.002590.CLP.msg.1="{0}" type cast to lower precision "{1}" type.
APSC_DV.002590.ICO=Avoid calculations which result in overflow or NaN
APSC_DV.002590.ICO.msg.1=This calculation will not produce an accurate result because it will result in overflow.
APSC_DV.002590.ICO.msg.2=This calculation will throw 'java.lang.ArithmeticException'.
APSC_DV.002590.IOF=Use unsigned right shift instead of division when overflow is possible.
APSC_DV.002590.IOF.msg.1=This integer computation may cause overflow.
APSC_DV.003110=APSC_DV.003110 The application must not contain embedded authentication data.
APSC_DV.003110.HCCS=Avoid passing hardcoded usernames/passwords/URLs to database connection methods.
APSC_DV.003110.HCCS.CONNECT_METHS-description=Additional Database Connection Methods (in form of &lt;qualified name of declaring type&gt;\#&lt;method name&gt;)
APSC_DV.003110.HCCS.CONNECT_METHS-label=Additional Database Connection Methods
APSC_DV.003110.HCCS.msg.1=This call to ''{0}()'' may be dangerous because it passes in only hard-coded Strings.
APSC_DV.003110.HCCS.msg.2=This call to ''{0}()'' may be dangerous because it uses a hard-coded password.
APSC_DV.003215=APSC_DV.003215 The application development team must follow a set of coding standards.
APSC_DV.003215.APAREN=Use '()' to separate complex expressions
APSC_DV.003215.APAREN.msg.1=Missing '()' to separate complex expression.
APSC_DV.003215.ASPACE=Ensure proper spacing in array references
APSC_DV.003215.ASPACE.Number\ of\ Spaces-label=Number of spaces before open bracket
APSC_DV.003215.ASPACE.msg.1=Use correct spacing for array references.
APSC_DV.003215.ATS=Do not place empty whitespace at the end of a line
APSC_DV.003215.ATS.FLAG_EMPTY_LINE_WITH_SPACE-label=Flag empty line containing extra whitespaces
APSC_DV.003215.ATS.msg.1=Avoid trailing spaces.
APSC_DV.003215.BLBC=Put a blank line before each C-style comment
APSC_DV.003215.BLBC.msg.1=Blank line missing before this C-style comment.
APSC_DV.003215.BLCD=Enforce number of blank line(s) before type declarations
APSC_DV.003215.BLCD.BLANK_LINE-label=Number of blank lines
APSC_DV.003215.BLCD.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.BLCD.msg.1=Use {0} blank line before type declaration.
APSC_DV.003215.BLCD.msg.2=Use {0} blank lines before type declaration.
APSC_DV.003215.BLSIM=Enforce number of blank line(s) to separate "imports" from different packages
APSC_DV.003215.BLSIM.BLANK_LINE-label=Number of blank lines
APSC_DV.003215.BLSIM.IGNORE_SUBPACKAGE-label=Ignore adjacent imports if they are from subpackages of the same package
APSC_DV.003215.BLSIM.msg.1="import {0}" not separated by {1} blank line from previous "import" from a different package.
APSC_DV.003215.BLSIM.msg.2="import {0}" not separated by {1} blank lines from previous "import" from a different package.
APSC_DV.003215.CBRACE=Place a closing brace on its own line
APSC_DV.003215.CBRACE.IGNORE_BRACE_C_COMMENT-label=Ignore case "} /*"
APSC_DV.003215.CBRACE.IGNORE_BRACE_SEMI_COLON-label=Ignore case "} ;"
APSC_DV.003215.CBRACE.IGNORE_BRACE_S_COMMENT-label=Ignore case "} //"
APSC_DV.003215.CBRACE.IGNORE_CATCH-label=Ignore case "} catch {"
APSC_DV.003215.CBRACE.IGNORE_DO_WHILE-label=Ignore case "} while();"
APSC_DV.003215.CBRACE.IGNORE_ELSE-label=Ignore case "} else {"
APSC_DV.003215.CBRACE.IGNORE_FINALLY-label=Ignore case "} finally {"
APSC_DV.003215.CBRACE.IGNORE_TWO_BRACE-label=Ignore case "} }"
APSC_DV.003215.CBRACE.msg.1=Closing brace should be in a line of its own.
APSC_DV.003215.CMS=Place a single space character or no space character after type casting
APSC_DV.003215.CMS.CAST_SPACE-label=Check option
APSC_DV.003215.CMS.CAST_SPACE.0-label=one space
APSC_DV.003215.CMS.CAST_SPACE.1-label=no space
APSC_DV.003215.CMS.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.CMS.msg.1=There is not one single space after type cast.
APSC_DV.003215.CMS.msg.2=There is an extra space after type cast.
APSC_DV.003215.CMS.msg.3=There are extra spaces after type cast.
APSC_DV.003215.DOT=Do not leave spaces between qualified names and method invocations
APSC_DV.003215.DOT.msg.1=Avoid having space before or after the dot.
APSC_DV.003215.DUT=Use spaces instead of tabs (or tabs instead of spaces)
APSC_DV.003215.DUT.LINK_BOX-label=Link to value in the preferences page for "Tab size"
APSC_DV.003215.DUT.SPACES_OR_TABS-label=Choose to use tabs or spaces\:
APSC_DV.003215.DUT.SPACES_OR_TABS.0-label=Use spaces
APSC_DV.003215.DUT.SPACES_OR_TABS.1-label=Use tabs
APSC_DV.003215.DUT.SPACES_PER_TAB-label=Spaces per tab\:
APSC_DV.003215.DUT.msg.1='Tab' character found on column {0}.
APSC_DV.003215.DUT.msg.2=Set of {0} space characters used instead of a tab on column {1}.
APSC_DV.003215.DUT.msg.3=Space character used instead of a tab on column {0}.
APSC_DV.003215.FCB=Enforce the position of '{' brace
APSC_DV.003215.FCB.ANNOTATION_DECL-label=Annotation type declaration
APSC_DV.003215.FCB.ANNOTATION_DECL.0-label=Same line
APSC_DV.003215.FCB.ANNOTATION_DECL.1-label=Next line
APSC_DV.003215.FCB.ANNOTATION_DECL.2-label=Next line indented
APSC_DV.003215.FCB.ANNOTATION_DECL.3-label=Next line on wrap
APSC_DV.003215.FCB.ANNOTATION_DECL.4-label=Ignore
APSC_DV.003215.FCB.ANONY_DECL-label=Anonymous class declaration
APSC_DV.003215.FCB.ANONY_DECL.0-label=Same line
APSC_DV.003215.FCB.ANONY_DECL.1-label=Next line
APSC_DV.003215.FCB.ANONY_DECL.2-label=Next line indented
APSC_DV.003215.FCB.ANONY_DECL.3-label=Next line on wrap
APSC_DV.003215.FCB.ANONY_DECL.4-label=Ignore
APSC_DV.003215.FCB.ARRAY-label=Array initializer
APSC_DV.003215.FCB.ARRAY.0-label=Same line
APSC_DV.003215.FCB.ARRAY.1-label=Next line
APSC_DV.003215.FCB.ARRAY.2-label=Next line indented
APSC_DV.003215.FCB.ARRAY.3-label=Next line on wrap
APSC_DV.003215.FCB.ARRAY.4-label=Ignore
APSC_DV.003215.FCB.BLOCK-label=Block
APSC_DV.003215.FCB.BLOCK.0-label=Same line
APSC_DV.003215.FCB.BLOCK.1-label=Next line
APSC_DV.003215.FCB.BLOCK.2-label=Next line indented
APSC_DV.003215.FCB.BLOCK.3-label=Next line on wrap
APSC_DV.003215.FCB.BLOCK.4-label=Ignore
APSC_DV.003215.FCB.BLOCK_IN_CASE-label=Block in  "switch-case"
APSC_DV.003215.FCB.BLOCK_IN_CASE.0-label=Same line
APSC_DV.003215.FCB.BLOCK_IN_CASE.1-label=Next line
APSC_DV.003215.FCB.BLOCK_IN_CASE.2-label=Next line indented
APSC_DV.003215.FCB.BLOCK_IN_CASE.3-label=Next line on wrap
APSC_DV.003215.FCB.BLOCK_IN_CASE.4-label=Ignore
APSC_DV.003215.FCB.CATCH-label="catch" clause
APSC_DV.003215.FCB.CATCH.0-label=Same line
APSC_DV.003215.FCB.CATCH.1-label=Next line
APSC_DV.003215.FCB.CATCH.2-label=Next line indented
APSC_DV.003215.FCB.CATCH.3-label=Next line on wrap
APSC_DV.003215.FCB.CATCH.4-label=Ignore
APSC_DV.003215.FCB.CLASS_DECL-label=Class declaration
APSC_DV.003215.FCB.CLASS_DECL.0-label=Same line
APSC_DV.003215.FCB.CLASS_DECL.1-label=Next line
APSC_DV.003215.FCB.CLASS_DECL.2-label=Next line indented
APSC_DV.003215.FCB.CLASS_DECL.3-label=Next line on wrap
APSC_DV.003215.FCB.CLASS_DECL.4-label=Ignore
APSC_DV.003215.FCB.CONSTRUCTOR_DECL-label=Constructor declaration
APSC_DV.003215.FCB.CONSTRUCTOR_DECL.0-label=Same line
APSC_DV.003215.FCB.CONSTRUCTOR_DECL.1-label=Next line
APSC_DV.003215.FCB.CONSTRUCTOR_DECL.2-label=Next line indented
APSC_DV.003215.FCB.CONSTRUCTOR_DECL.3-label=Next line on wrap
APSC_DV.003215.FCB.CONSTRUCTOR_DECL.4-label=Ignore
APSC_DV.003215.FCB.DO-label="do-while" statement
APSC_DV.003215.FCB.DO.0-label=Same line
APSC_DV.003215.FCB.DO.1-label=Next line
APSC_DV.003215.FCB.DO.2-label=Next line indented
APSC_DV.003215.FCB.DO.3-label=Next line on wrap
APSC_DV.003215.FCB.DO.4-label=Ignore
APSC_DV.003215.FCB.ELSE-label="else" statement
APSC_DV.003215.FCB.ELSE.0-label=Same line
APSC_DV.003215.FCB.ELSE.1-label=Next line
APSC_DV.003215.FCB.ELSE.2-label=Next line indented
APSC_DV.003215.FCB.ELSE.3-label=Next line on wrap
APSC_DV.003215.FCB.ELSE.4-label=Ignore
APSC_DV.003215.FCB.ENUM_CONSTANT-label=Enum constant body 
APSC_DV.003215.FCB.ENUM_CONSTANT.0-label=Same line
APSC_DV.003215.FCB.ENUM_CONSTANT.1-label=Next line
APSC_DV.003215.FCB.ENUM_CONSTANT.2-label=Next line indented
APSC_DV.003215.FCB.ENUM_CONSTANT.3-label=Next line on wrap
APSC_DV.003215.FCB.ENUM_CONSTANT.4-label=Ignore
APSC_DV.003215.FCB.ENUM_DECL-label=Enum declaration
APSC_DV.003215.FCB.ENUM_DECL.0-label=Same line
APSC_DV.003215.FCB.ENUM_DECL.1-label=Next line
APSC_DV.003215.FCB.ENUM_DECL.2-label=Next line indented
APSC_DV.003215.FCB.ENUM_DECL.3-label=Next line on wrap
APSC_DV.003215.FCB.ENUM_DECL.4-label=Ignore
APSC_DV.003215.FCB.FINALLY-label="finally" block
APSC_DV.003215.FCB.FINALLY.0-label=Same line
APSC_DV.003215.FCB.FINALLY.1-label=Next line
APSC_DV.003215.FCB.FINALLY.2-label=Next line indented
APSC_DV.003215.FCB.FINALLY.3-label=Next line on wrap
APSC_DV.003215.FCB.FINALLY.4-label=Ignore
APSC_DV.003215.FCB.FOR-label="for" statement
APSC_DV.003215.FCB.FOR.0-label=Same line
APSC_DV.003215.FCB.FOR.1-label=Next line
APSC_DV.003215.FCB.FOR.2-label=Next line indented
APSC_DV.003215.FCB.FOR.3-label=Next line on wrap
APSC_DV.003215.FCB.FOR.4-label=Ignore
APSC_DV.003215.FCB.IF-label="if" statement
APSC_DV.003215.FCB.IF.0-label=Same line
APSC_DV.003215.FCB.IF.1-label=Next line
APSC_DV.003215.FCB.IF.2-label=Next line indented
APSC_DV.003215.FCB.IF.3-label=Next line on wrap
APSC_DV.003215.FCB.IF.4-label=Ignore
APSC_DV.003215.FCB.IGNORE_IF_COMMENT_ABOVE_BRACE-label=Braces preceded by comments are not considered a violation
APSC_DV.003215.FCB.IGNORE_IF_OPEN_AND_CLOSE_ON_SAME_LINE-label=Open and close braces on the same line are not considered a violation
APSC_DV.003215.FCB.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.FCB.METHOD_DECL-label=Method declaration
APSC_DV.003215.FCB.METHOD_DECL.0-label=Same line
APSC_DV.003215.FCB.METHOD_DECL.1-label=Next line
APSC_DV.003215.FCB.METHOD_DECL.2-label=Next line indented
APSC_DV.003215.FCB.METHOD_DECL.3-label=Next line on wrap
APSC_DV.003215.FCB.METHOD_DECL.4-label=Ignore
APSC_DV.003215.FCB.STATIC_INIT-label=Static initializer
APSC_DV.003215.FCB.STATIC_INIT.0-label=Same line
APSC_DV.003215.FCB.STATIC_INIT.1-label=Next line
APSC_DV.003215.FCB.STATIC_INIT.2-label=Next line indented
APSC_DV.003215.FCB.STATIC_INIT.3-label=Next line on wrap
APSC_DV.003215.FCB.STATIC_INIT.4-label=Ignore
APSC_DV.003215.FCB.SWITCH-label="switch" statement
APSC_DV.003215.FCB.SWITCH.0-label=Same line
APSC_DV.003215.FCB.SWITCH.1-label=Next line
APSC_DV.003215.FCB.SWITCH.2-label=Next line indented
APSC_DV.003215.FCB.SWITCH.3-label=Next line on wrap
APSC_DV.003215.FCB.SWITCH.4-label=Ignore
APSC_DV.003215.FCB.SYNC_STATEMENT-label="synchronized" statement
APSC_DV.003215.FCB.SYNC_STATEMENT.0-label=Same line
APSC_DV.003215.FCB.SYNC_STATEMENT.1-label=Next line
APSC_DV.003215.FCB.SYNC_STATEMENT.2-label=Next line indented
APSC_DV.003215.FCB.SYNC_STATEMENT.3-label=Next line on wrap
APSC_DV.003215.FCB.SYNC_STATEMENT.4-label=Ignore
APSC_DV.003215.FCB.TRY-label="try" statement
APSC_DV.003215.FCB.TRY.0-label=Same line
APSC_DV.003215.FCB.TRY.1-label=Next line
APSC_DV.003215.FCB.TRY.2-label=Next line indented
APSC_DV.003215.FCB.TRY.3-label=Next line on wrap
APSC_DV.003215.FCB.TRY.4-label=Ignore
APSC_DV.003215.FCB.WHILE-label="while" statement
APSC_DV.003215.FCB.WHILE.0-label=Same line
APSC_DV.003215.FCB.WHILE.1-label=Next line
APSC_DV.003215.FCB.WHILE.2-label=Next line indented
APSC_DV.003215.FCB.WHILE.3-label=Next line on wrap
APSC_DV.003215.FCB.WHILE.4-label=Ignore
APSC_DV.003215.FCB.msg.1=Opening brace '''{''' is not on the same line as the {0}.
APSC_DV.003215.FCB.msg.2=Opening brace '''{''' is not on the line following the {0} or is not indented exactly the same.
APSC_DV.003215.FCB.msg.3=Opening brace '''{''' is not on the line following the {0} or does not have exactly one extra level of indentation.
APSC_DV.003215.FCB.msg.4=Opening brace '''{''' does not follow coding convention.  It is not on the same line or the line following the {0} or does not have exactly one extra level of indentation.
APSC_DV.003215.FCN=Place the type that has the same name as the file as the first type.
APSC_DV.003215.FCN.msg.1=The type has the same name as the file should be the first type.
APSC_DV.003215.IAD=Declare arrays with '[]' brackets after the array type and before the variable name(s)
APSC_DV.003215.IAD.msg.1=Place the '[]' after the array type, not after the variable\: {0}.
APSC_DV.003215.IND=Enforce number of space(s) for indentation
APSC_DV.003215.IND.ADD_EXTRA_LEVEL-label=Require an additional level of indentation for each "(" encountered in a wrapped line continuation
APSC_DV.003215.IND.IGNORE_ARRAY_DECL-label=Ignore additional indentation caused by array declaration brackets.
APSC_DV.003215.IND.INDENT-label=Indentation size
APSC_DV.003215.IND.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.IND.SPLIT_INDENT-label=Additional levels of indentation for wrapped line continuations
APSC_DV.003215.IND.SPLIT_INDENT_ENFORCEMENT-label=Require additional level(s) of indentation for wrapped line continuations
APSC_DV.003215.IND.SPLIT_INDENT_EXCEPTION-label=Ignore parentheses for split line indentation
APSC_DV.003215.IND.msg.1=Indentation should be {0} spaces.
APSC_DV.003215.IND.msg.2=Keyword "if" should be placed on the same line as the preceding keyword "else".
APSC_DV.003215.IND.msg.3=Indentation should be {0} (or {1}) spaces.
APSC_DV.003215.LL=Limit the maximum length of a line
APSC_DV.003215.LL.IGNORE_IMPORTS_PACKAGES-label=Ignore import statements and package declarations
APSC_DV.003215.LL.IGNORE_TRAILING_COMMENT-label=Ignore trailing comments
APSC_DV.003215.LL.IGNORE_TRAILING_SPACE-label=Ignore trailing whitespaces
APSC_DV.003215.LL.LINK_TO_PREF-label=Link to value in the preferences page
APSC_DV.003215.LL.MAX_COMMENT_LEN-label=Maximum comment line width
APSC_DV.003215.LL.MAX_LEN-label=Maximum line width
APSC_DV.003215.LL.RECALCULATE_TABS-label=Tab size
APSC_DV.003215.LL.msg.1=Line is longer than {1} characters\: {0}.
APSC_DV.003215.LL.msg.2=Comment line is longer than {1} characters\: {0}.
APSC_DV.003215.MCH=Include a meaningful file header comment in every source file
APSC_DV.003215.MCH.FILE_HEADER_FORMAT-label=File header format
APSC_DV.003215.MCH.FILE_HEADER_LOCATION-label=File header location
APSC_DV.003215.MCH.FILE_HEADER_LOCATION.0-label=before package declaration (if any)
APSC_DV.003215.MCH.FILE_HEADER_LOCATION.1-label=after package declaration (if any)
APSC_DV.003215.MCH.FILE_HEADER_LOCATION_GROUP-label=
APSC_DV.003215.MCH.FILE_HEADER_TEMPLATE-label=
APSC_DV.003215.MCH.FILE_HEADER_TRIM_LINES-label=Trim header lines
APSC_DV.003215.MCH.FILE_HEADER_TYPES-label=Acceptable types of comments
APSC_DV.003215.MCH.FILE_HEADER_TYPE_CSTYLE-label=C-Style comments
APSC_DV.003215.MCH.FILE_HEADER_TYPE_JAVADOC-label=Javadoc comments
APSC_DV.003215.MCH.FILE_HEADER_TYPE_SINGLELINE-label=Single-line comments
APSC_DV.003215.MCH.MATCH_HEADER_CASE_SENSITIVE-label=Match case sensitive
APSC_DV.003215.MCH.MATCH_HEADER_WITH_TEMPLATE-label=Match the file header with the following template (defined in regular expressions)\:
APSC_DV.003215.MCH.msg.1=This source file does not include a file header comment.
APSC_DV.003215.MCH.msg.2=The file header comment does not match the specified comment template.
APSC_DV.003215.MCH.msg.3=The 'File header format' parameter is enabled, but the comment template is not defined.
APSC_DV.003215.MO=Enforce the order of annotations and modifiers
APSC_DV.003215.MO.ANNOTATION_ORDER-label=Order of Annotations
APSC_DV.003215.MO.ANNOTATION_ORDER.0-label=Put all annotations before all other modifiers.
APSC_DV.003215.MO.ANNOTATION_ORDER.1-label=Put all annotations after all other modifiers.
APSC_DV.003215.MO.MODIFIER_ORDER_LIST-label=Sort modifiers based on modifier types
APSC_DV.003215.MO.MODIFIER_ORDER_LIST.FORMAT__MO__MODIFIER_ORDER_LIST__COLUMN1-label=Modifier order
APSC_DV.003215.MO.msg.1=The ordering of the modifiers violates convention. They should be in order "{0}".
APSC_DV.003215.MSP=Place a single space character or no space character between a method name and the opening "(" parenthesis
APSC_DV.003215.MSP.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.MSP.METHOD_SPACE-label=Check option
APSC_DV.003215.MSP.METHOD_SPACE.0-label=one space
APSC_DV.003215.MSP.METHOD_SPACE.1-label=no space
APSC_DV.003215.MSP.msg.1=Method ''{0}'' does not have one space before the "(" parenthesis.
APSC_DV.003215.MSP.msg.2=Method ''{0}'' has an extra space before the "(" parenthesis.
APSC_DV.003215.MSP.msg.3=Method ''{0}'' has extra spaces before the "(" parenthesis.
APSC_DV.003215.NSAB=Do not place statements on the same line as the '{' opening brace
APSC_DV.003215.NSAB.IGNORE_ONE_LINE_BLOCK-label=Allow statements on the same line as the opening brace if the opening and closing braces appear on the same line.
APSC_DV.003215.NSAB.msg.1=Statement on the same line as the '{' opening brace.
APSC_DV.003215.OSPL=Write one statement per line
APSC_DV.003215.OSPL.msg.1=Multiple statements on one line.
APSC_DV.003215.SAC=Enforce number of space character(s) after every comma
APSC_DV.003215.SAC.NO_SPACE_BEFORE-label=Commas must not be preceded by a space.
APSC_DV.003215.SAC.SYMBOL_SPACE-label=Number of spaces
APSC_DV.003215.SAC.msg.1=Comma not followed by {0} space.
APSC_DV.003215.SAC.msg.2=Comma not followed by {0} spaces.
APSC_DV.003215.SAC.msg.3=Comma preceded by a space character.
APSC_DV.003215.SAOP=Enforce number of space character(s) on each side of an assignment operator
APSC_DV.003215.SAOP.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.SAOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
APSC_DV.003215.SAOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
APSC_DV.003215.SAOP.msg.1=There is not {1} space after ''{0}''.
APSC_DV.003215.SAOP.msg.2=There is not {1} spaces after ''{0}''.
APSC_DV.003215.SAP=Enforce number of space character(s) after the opening parenthesis "(" of a conditional statement
APSC_DV.003215.SAP.IGNORE_EMPTY_ITER-label=Ignore rule for the special case "for(;;)".
APSC_DV.003215.SAP.SYMBOL_SPACE-label=Number of spaces
APSC_DV.003215.SAP.msg.1=Parenthesis not followed by {0} space.
APSC_DV.003215.SAP.msg.2=Parenthesis not followed by {0} spaces.
APSC_DV.003215.SAS=Enforce number of space character(s) after every semicolon
APSC_DV.003215.SAS.IGNORE_EMPTY_ITER-label=Ignore rule for the special case "for(;;)".
APSC_DV.003215.SAS.SYMBOL_SPACE-label=Number of spaces
APSC_DV.003215.SAS.msg.1=Semicolon not followed by {0} space.
APSC_DV.003215.SAS.msg.2=Semicolon not followed by {0} spaces.
APSC_DV.003215.SAUOP=Enforce number of space character(s) between a prefixed unary operator and its operand
APSC_DV.003215.SAUOP.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.SAUOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
APSC_DV.003215.SAUOP.msg.1=There is not {0} space after unary operator ''{1}''.
APSC_DV.003215.SAUOP.msg.2=There is not {0} spaces after unary operator ''{1}''.
APSC_DV.003215.SBOP=Enforce number of space character(s) on each side of a bitwise operator
APSC_DV.003215.SBOP.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.SBOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
APSC_DV.003215.SBOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
APSC_DV.003215.SBOP.msg.1=There is not {1} space after ''{0}''.
APSC_DV.003215.SBOP.msg.2=There is not {1} spaces after ''{0}''.
APSC_DV.003215.SBUOP=Enforce number of space character(s) between a postfixed unary operator and its operand
APSC_DV.003215.SBUOP.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.SBUOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
APSC_DV.003215.SBUOP.msg.1=There is not {0} space before unary operator ''{1}''.
APSC_DV.003215.SBUOP.msg.2=There is not {0} spaces before unary operator ''{1}''.
APSC_DV.003215.SC=Enforce number of space character(s) between a conditional statement and the opening "(" parenthesis
APSC_DV.003215.SC.SPACE_BEFORE-label=Number of spaces
APSC_DV.003215.SC.msg.1=Conditional statement does not have {0} space after "{1}".
APSC_DV.003215.SC.msg.2=Conditional statement does not have {0} spaces after "{1}".
APSC_DV.003215.SCOP=Enforce number of space character(s) before and after the "?" conditional operator
APSC_DV.003215.SCOP.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.SCOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
APSC_DV.003215.SCOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
APSC_DV.003215.SCOP.msg.1=There is not {1} space after ''{0}''.
APSC_DV.003215.SCOP.msg.2=There is not {1} spaces after ''{0}''.
APSC_DV.003215.SLOP=Enforce number of space character(s) on each side of a logical operator
APSC_DV.003215.SLOP.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.SLOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
APSC_DV.003215.SLOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
APSC_DV.003215.SLOP.msg.1=There is not {1} space after ''{0}''.
APSC_DV.003215.SLOP.msg.2=There is not {1} spaces after ''{0}''.
APSC_DV.003215.SROP=Enforce number of space character(s) on each side of a relational operator
APSC_DV.003215.SROP.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.SROP.SYMBOL_SPACE_AFTER-label=Number of spaces after
APSC_DV.003215.SROP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
APSC_DV.003215.SROP.msg.1=There is not {1} space after ''{0}''.
APSC_DV.003215.SROP.msg.2=There is not {1} spaces after ''{0}''.
APSC_DV.003215.TC=Avoid using trailing comments.
APSC_DV.003215.TC.msg.1=Do not use trailing comments.
APSC_DV.003215.TCOMMA=Avoid or enforce the use of trailing commas in array initializers
APSC_DV.003215.TCOMMA.COMMA_OPTION-label=Enforce/Avoid trailing comma\:
APSC_DV.003215.TCOMMA.COMMA_OPTION.0-label=Enforce
APSC_DV.003215.TCOMMA.COMMA_OPTION.1-label=Avoid
APSC_DV.003215.TCOMMA.msg.1=Avoid trailing comma.
APSC_DV.003215.TCOMMA.msg.2=Missing trailing comma.
APSC_DV.003215.TE=Use the preferred formatting for conditional expressions
APSC_DV.003215.TE.FORMAT_ONE-label=expression1 ? expression2 \: expression3
APSC_DV.003215.TE.FORMAT_THREE-label=expression1<BR/>? expression2<BR/>\: expression3
APSC_DV.003215.TE.FORMAT_TWO-label=expression1 ? expression2<BR/>\: expression3
APSC_DV.003215.TE.PARENTHESIZE-label=The condition must be parenthesized
APSC_DV.003215.TE.group.0-label=Enforced formats for conditional expressions
APSC_DV.003215.TE.msg.1=Invalid conditional expression format.
APSC_DV.003215.TE.msg.2=The condition in this conditional expression is not parenthesized.
APSC_DV.003215.TNL=Make sure all files are terminated with a newline character.
APSC_DV.003215.TNL.msg.1=File should be terminated by a newline character.
APSC_DV.003215.U2BL=Enforce number of blank line(s) between major sections
APSC_DV.003215.U2BL.BLANK_TABLE_IN_CLASS2-label=Major sections in class declaration
APSC_DV.003215.U2BL.BLANK_TABLE_IN_CLASS2.FORMAT__U2BL__BLANK_TABLE_IN_CLASS__COLUMN1-label=Enforce section?
APSC_DV.003215.U2BL.BLANK_TABLE_IN_CLASS2.FORMAT__U2BL__BLANK_TABLE_IN_CLASS__COLUMN2-label=Section
APSC_DV.003215.U2BL.BLANK_TABLE_IN_CLASS2.FORMAT__U2BL__BLANK_TABLE_IN_CLASS__COLUMN3-label=Section ID
APSC_DV.003215.U2BL.BLANK_TABLE_IN_CLASS2.FORMAT__U2BL__BLANK_TABLE_IN_CLASS__COLUMN4-label=Number of blank lines
APSC_DV.003215.U2BL.BLANK_TABLE_IN_UNIT2-label=Major sections in compilation unit
APSC_DV.003215.U2BL.BLANK_TABLE_IN_UNIT2.FORMAT__U2BL__BLANK_TABLE_IN_UNIT__COLUMN1-label=Enforce section?
APSC_DV.003215.U2BL.BLANK_TABLE_IN_UNIT2.FORMAT__U2BL__BLANK_TABLE_IN_UNIT__COLUMN2-label=Section
APSC_DV.003215.U2BL.BLANK_TABLE_IN_UNIT2.FORMAT__U2BL__BLANK_TABLE_IN_UNIT__COLUMN3-label=Section ID
APSC_DV.003215.U2BL.BLANK_TABLE_IN_UNIT2.FORMAT__U2BL__BLANK_TABLE_IN_UNIT__COLUMN4-label=Number of blank lines
APSC_DV.003215.U2BL.CHECK_STATEMENTS-label=Check amount of blank lines between consecutive statements\:
APSC_DV.003215.U2BL.CHECK_STATEMENTS.FORMAT__U2BL__CHECK_STATEMENTS__COLUMN1-label=
APSC_DV.003215.U2BL.CHECK_STATEMENTS.FORMAT__U2BL__CHECK_STATEMENTS__COLUMN2-label=
APSC_DV.003215.U2BL.LINK_BOX-label=Link to value in the preferences page
APSC_DV.003215.U2BL.RECOGNIZE_NON_JAVADOC_COMMENTS-label=Recognize non javadoc comments
APSC_DV.003215.U2BL.msg.1=Use {0} blank line before the package statements.
APSC_DV.003215.U2BL.msg.10=Use {0} blank lines before every field declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.11=Use {0} blank line before every method declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.12=Use {0} blank lines before every method declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.13=Use {0} blank line before every member class (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.14=Use {0} blank lines before every member class (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.15=Use {0} blank line before every member interface (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.16=Use {0} blank lines before every member interface (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.17=Use {0} blank line before every declaration of the same kind (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.18=Use {0} blank lines before every declaration of the same kind (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.19=Use {0} blank line before every top-level enum declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.2=Use {0} blank lines before the package statements.
APSC_DV.003215.U2BL.msg.20=Use {0} blank lines before every top-level enum declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.21=Use {0} blank line before every top-level annotation declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.22=Use {0} blank lines before every top-level annotation declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.23=Use {0} blank line before every member enum declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.24=Use {0} blank lines before every member enum declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.25=Use {0} blank line before every member annotation declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.26=Use {0} blank lines before every member annotation declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.27=Use {0} blank line before every enum constant declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.28=Use {0} blank lines before every enum constant declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.29=Use {0} blank line before every annotation type member declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.3=Use {0} blank line before the import statements (or corresponding import comments).
APSC_DV.003215.U2BL.msg.30=Use {0} blank lines before every annotation type member declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.31=Use {0} blank line before each statement.
APSC_DV.003215.U2BL.msg.32=Use {0} blank lines before each statement.
APSC_DV.003215.U2BL.msg.4=Use {0} blank lines before the import statements (or corresponding import comments).
APSC_DV.003215.U2BL.msg.5=Use {0} blank line before every top-level class (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.6=Use {0} blank lines before every top-level class (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.7=Use {0} blank line before every top-level interface (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.8=Use {0} blank lines before every top-level interface (or corresponding Javadoc).
APSC_DV.003215.U2BL.msg.9=Use {0} blank line before every field declaration (or corresponding Javadoc).
APSC_DV.003215.U2BL.tab.BLINE_IN_CLASS-label=Blank lines in class declaration
APSC_DV.003215.U2BL.tab.BLINE_IN_UNIT-label=Blank lines in compilation unit
APSC_DV.003215.UP=Avoid unnecessary parentheses
APSC_DV.003215.UP.CHECK_SCOPE-label=Scope of checking\:
APSC_DV.003215.UP.CHECK_SCOPE.0-label=Only return statements
APSC_DV.003215.UP.CHECK_SCOPE.1-label=All statements
APSC_DV.003215.UP.INLINE_CONDITIONAL-label=Check inline conditional expressions
APSC_DV.003215.UP.NESTED_OPERATION-label=Check nested operations
APSC_DV.003215.UP.ORDER_OF_OPERATION-label=Check order of operation in expressions
APSC_DV.003215.UP.msg.1=Avoid unnecessary parentheses.
APSC_DV.003235=APSC_DV.003235 The application must not be subject to error handling vulnerabilities.
APSC_DV.003235.CRRV=Check the return value of methods which read or skip input
APSC_DV.003235.CRRV.CHECKED_METHOD_LIST-description=Methods to be checked\: (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
APSC_DV.003235.CRRV.CHECKED_METHOD_LIST-label=Methods to be checked\:
APSC_DV.003235.CRRV.msg.1=The return value of this call to ''{0}()'' is not checked.
BEAN=JavaBeans
BEAN.BLNC=Use appropriate signatures for listener method names in JavaBean classes
BEAN.BLNC.msg.1=Listener method name is not ''{0}''.
BEAN.NFM=Define get and set methods for each instance field
BEAN.NFM.IGNORE_LIST-label=Ignore fields with names\:
BEAN.NFM.msg.1=Missing ''{0}()'' method for field ''{1}''.
BEAN.NFM.msg.2=''{0}()'' is not a "public" instance method for field ''{1}''.
BEAN.NFM.msg.3=''{0}()'' return type is not as same as field ''{1}'' type.
BEAN.NFM.msg.4=''{0}()'' return type is not "void".
BEAN.NFM.msg.5=''{0}()'' parameter type is not as same as field ''{1}'' type.
BEAN.SERIALIZABLE=Ensure that JavaBean classes implement 'java.io.Serializable'
BEAN.SERIALIZABLE.msg.1=Bean class does not implement 'java.io.Serializable'\: ''{0}''
CDD=Code Duplication Detection
CDD.DFI=Avoid duplicated field initialization in constructors.
CDD.DFI.msg.1=Duplicated field initialization in constructors\: ''{0}''.
CDD.DFI.msg.2=[Line {0}] Duplicated field initialization in file ''{1}''
CDD.DUPI=Avoid duplicate import statements
CDD.DUPI.msg.1=Duplicate import statement ''{0}''.
CDD.DUPI.msg.2=[Line {0}] Duplicated import statement in file ''{1}''
CERT=SEI CERT Oracle Coding Standard for Java
CERT.DCL00=DCL00-J\: Prevent class initialization cycles
CERT.DCL00.ACD=Ensure that files do not contain cyclical dependencies
CERT.DCL00.ACD.MAX_DEPTH-label=Maximum Depth of Cyclical Dependencies to Detect\:
CERT.DCL00.ACD.msg.1=The file ''{0}'' contains a cyclical dependency in its imports \: {1}
CERT.DCL00.ACD.msg.2=in {0} {1}\:{2}-{3}\:{4}
CERT.DCL51=DCL51-J\: Do not shadow or obscure identifiers in subscopes
CERT.DCL51.HMF=Do not give method local variables and parameters the same name as class fields.
CERT.DCL51.HMF.CHECK_LOCAL-label=Check local variables
CERT.DCL51.HMF.CHECK_PARAM-label=Check parameters
CERT.DCL51.HMF.msg.1=Parameter ''{0}'' has the same name as a field.
CERT.DCL51.HMF.msg.2=Local variable ''{0}'' has the same name as a field.
CERT.DCL52=DCL52-J\: Do not declare more than one variable per declaration
CERT.DCL52.MVOS=Do not declare multiple variables in one statement
CERT.DCL52.MVOS.msg.1=Multiple variables are declared in a single declaration statement\: ''{0}''.
CERT.DCL53=DCL53-J\: Minimize the scope of variables
CERT.DCL53.LV=Initialize all local variables explicitly at the declaration statement
CERT.DCL53.LV.msg.1=Local variable not initialized\: {0}
CERT.DCL57=DCL57-J\: Avoid ambiguous overloading of variable arity methods
CERT.DCL57.OVAM=Avoid overloading varargs methods
CERT.DCL57.OVAM.CHECK_PARAMETERS-label=Ignore overloaded methods with dissimilar parameters
CERT.DCL57.OVAM.CHECK_RETURN-label=Ignore overloaded methods with dissimilar return types
CERT.DCL57.OVAM.msg.1=Varargs method ''{0}'' is overloaded.
CERT.DCL60=DCL60-J\: Avoid cyclic dependencies between packages
CERT.DCL60.ACD=Ensure that files do not contain cyclical dependencies
CERT.DCL60.ACD.MAX_DEPTH-label=Maximum Depth of Cyclical Dependencies to Detect\:
CERT.DCL60.ACD.msg.1=The file ''{0}'' contains a cyclical dependency in its imports \: {1}
CERT.DCL60.ACD.msg.2=in {0} {1}\:{2}-{3}\:{4}
CERT.ENV02=ENV02-J\: Do not trust the values of environment variables
CERT.ENV02.ENV=Do not use the non-portable 'System.getenv()' method.
CERT.ENV02.ENV.IGNORE_1_5-label=Ignore code which uses JDK 1.5 or later
CERT.ENV02.ENV.msg.1=Non-portable method ''System.getenv()'' called to get the environment variable ''{0}''.
CERT.ENV02.ENV.msg.2=Non-portable method 'System.getenv()' called.
CERT.ERR00=ERR00-J\: Do not suppress or ignore checked exceptions
CERT.ERR00.LGE=Ensure all exceptions are either logged with a standard logger or rethrown
CERT.ERR00.LGE.CHECK_EXCEPT_FULL_PASSED-label=Check if the exception passed to the logging method is complete
CERT.ERR00.LGE.CHECK_EXCEPT_LOGGED-label=Check if the exception is passed into the logging method call
CERT.ERR00.LGE.CHECK_EXCEPT_THROW-label=Check if the caught exception is passed to a new exception or rethrown
CERT.ERR00.LGE.FLAG_LEVEL-label=Catch clause should contain\:
CERT.ERR00.LGE.FLAG_LEVEL.0-label=Logging method.
CERT.ERR00.LGE.FLAG_LEVEL.1-label=Logging method or "throw" exception statement.
CERT.ERR00.LGE.FLAG_LEVEL.2-label=Logging method, comment, or "throw" exception statement.
CERT.ERR00.LGE.IGNORE_LIST-label=Ignore exception variables matching the following regular expression(s)\:
CERT.ERR00.LGE.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
CERT.ERR00.LGE.LOG_METHOD_EXPRESSION-label=Logging method name in regular expression
CERT.ERR00.LGE.msg.1=The exception is not logged in the "catch" clause.
CERT.ERR00.LGE.msg.2=The exception is neither logged nor rethrown in the "catch" clause.
CERT.ERR00.LGE.msg.3=The exception is neither logged nor rethrown in the "catch" clause. Add a comment to the clause if this is expected.
CERT.ERR00.LGE.msg.4=The ''{0}'' exception is not passed to the logging method called in the "catch" clause.
CERT.ERR00.LGE.msg.5=The information passed from the ''{0}'' exception to the logging method may be incomplete.
CERT.ERR00.LGE.msg.6=The ''{0}'' exception is not rethrown in the "catch" block or passed to the new exception as an argument.
CERT.ERR00.LGE.tab.IGNORE_LIST_TAB-label=Ignore List
CERT.ERR00.LGE.tab.LOGGERS_TAB-label=Loggers
CERT.ERR00.UCATCH=Use a caught exception in the "catch" block
CERT.ERR00.UCATCH.IGNORE_VARIABLES-label=Ignore exceptions with names matching the following regular expression(s)\:
CERT.ERR00.UCATCH.REGULAR_EXPRESSION-label=Comment to suppress the error(in regular expression)\:
CERT.ERR00.UCATCH.msg.1=Caught exception ''{0}'' is not used in "catch" block.
CERT.ERR01=ERR01-J\: Do not allow exceptions to expose sensitive data
CERT.ERR01.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
CERT.ERR01.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
CERT.ERR01.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
CERT.ERR01.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
CERT.ERR01.ACW=Avoid writing to Consoles
CERT.ERR01.ACW.msg.1=Method ''{0}'' writes to Console ''{1}''.
CERT.ERR01.ACW.msg.2=Method ''{0}'' writes to Console.
CERT.ERR01.CETS=Catch all exceptions which may be thrown within Servlet methods
CERT.ERR01.CETS.msg.1=The method ''{0}()'' is declared to throw the exception type ''{1}'', but this exception is not caught.
CERT.ERR04=ERR04-J\: Do not complete abruptly from finally block
CERT.ERR04.ARCF=Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block.
CERT.ERR04.ARCF.ALSO_CATCH-label=Only flag return statements when they are in try-catch blocks
CERT.ERR04.ARCF.msg.1=Avoid multiple 'return' if a 'return' is present inside finally block.
CERT.ERR04.ATSF=Do not exit "finally" blocks abruptly.
CERT.ERR04.ATSF.ALLOW_RETHROW-label=allow rethrowing of exceptions from within "finally" blocks
CERT.ERR04.ATSF.CHECK_BREAK-label="break" and "continue" statements
CERT.ERR04.ATSF.CHECK_METH_THROW-label=method calls which throw uncaught exceptions
CERT.ERR04.ATSF.CHECK_RETURN-label="return" statements
CERT.ERR04.ATSF.CHECK_THROW-label="throw" statements
CERT.ERR04.ATSF.group.0-label=What to Check
CERT.ERR04.ATSF.msg.1=The enclosing "finally" block should not be exited with a "{0}" statement.
CERT.ERR04.ATSF.msg.2=This method call may cause the enclosing "finally" block to be exited because it throws a checked exception.
CERT.ERR04.ATSF.msg.3=This constructor call may cause the enclosing "finally" block to be exited because it throws a checked exception.
CERT.ERR05=ERR05-J\: Do not let checked exceptions escape from a finally block
CERT.ERR05.ARCF=Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block.
CERT.ERR05.ARCF.ALSO_CATCH-label=Only flag return statements when they are in try-catch blocks
CERT.ERR05.ARCF.msg.1=Avoid multiple 'return' if a 'return' is present inside finally block.
CERT.ERR05.ATSF=Do not exit "finally" blocks abruptly.
CERT.ERR05.ATSF.ALLOW_RETHROW-label=allow rethrowing of exceptions from within "finally" blocks
CERT.ERR05.ATSF.CHECK_BREAK-label="break" and "continue" statements
CERT.ERR05.ATSF.CHECK_METH_THROW-label=method calls which throw uncaught exceptions
CERT.ERR05.ATSF.CHECK_RETURN-label="return" statements
CERT.ERR05.ATSF.CHECK_THROW-label="throw" statements
CERT.ERR05.ATSF.group.0-label=What to Check
CERT.ERR05.ATSF.msg.1=The enclosing "finally" block should not be exited with a "{0}" statement.
CERT.ERR05.ATSF.msg.2=This method call may cause the enclosing "finally" block to be exited because it throws a checked exception.
CERT.ERR05.ATSF.msg.3=This constructor call may cause the enclosing "finally" block to be exited because it throws a checked exception.
CERT.ERR07=ERR07-J\: Do not throw RuntimeExceptions, Exceptions or Throwable
CERT.ERR07.NTERR=Do not throw exception types which are too general or are unchecked exceptions.
CERT.ERR07.NTERR.CHECKED_EXCEPTS-label=Exception types which should not be thrown (fully qualified names)
CERT.ERR07.NTERR.msg.1=Avoid throwing ''{0}''.
CERT.ERR07.NTX=Avoid declaring methods to throw general or unchecked Exception types
CERT.ERR07.NTX.CHECKED_EXCEPTS-label=Exception types which should not be declared to be thrown (fully qualified names)
CERT.ERR07.NTX.IGNORE_OVERRIDING-label=Ignore overriding methods.
CERT.ERR07.NTX.IGNORE_PROPAGATED-label=Ignore methods which propagate exception types of called methods.
CERT.ERR07.NTX.SKIP_JUNIT-label=Skip JUnit classes.
CERT.ERR07.NTX.SUBCLASSES-label=Check for exceptions which are subclasses of 'Error' and 'RuntimeException'.
CERT.ERR07.NTX.msg.1=Throwing explicit ''{0}'' object in ''{1}()''.
CERT.ERR08=ERR08-J\: Do not catch NullPointerExceptions or any of its ancestors
CERT.ERR08.NCNPE=Do not catch 'NullPointerException'
CERT.ERR08.NCNPE.msg.1=Avoid catching 'NullPointerException'
CERT.ERR09=ERR09-J\: Do not allow untrusted code to terminate the JVM
CERT.ERR09.EXIT=Do not call methods which terminates Java Virtual Machine
CERT.ERR09.EXIT.IGNORE_IF_COMMENT-label=Ignore if the method call is followed by a comment on the same line
CERT.ERR09.EXIT.IGNORE_IF_COMMENT_ABOVE-label=Ignore if the line above the method call contains a comment
CERT.ERR09.EXIT.IGNORE_IN_MAIN-label=Ignore in the 'main()' method
CERT.ERR09.EXIT.msg.1='System.exit()' called.
CERT.ERR09.EXIT.msg.2='Runtime.exit()' called.
CERT.ERR09.EXIT.msg.3='Runtime.halt()' called.
CERT.ERR09.JVM=Do not stop the JVM in a web component.
CERT.ERR09.JVM.DEPTH-label=Maximum depth to look for "System.exit()" calls
CERT.ERR09.JVM.msg.1=Call to ''System.{0}()'' in a web component.
CERT.ERR09.JVM.msg.2=Method ''{0}'' indirectly calls "System.exit()" in a web component.
CERT.ERR51=ERR51-J\: Prefer user-defined exceptions over more general exception types
CERT.ERR51.NCE=Do not catch exception types which are too general or are unchecked exceptions.
CERT.ERR51.NCE.GENERAL-label=Check for general exception types.
CERT.ERR51.NCE.IGNORE_EXCEPTIONS-label=Ignore exceptions with names matching the following regular expression(s)\:
CERT.ERR51.NCE.NUM_CHILDREN-label=Check for parent exceptions caught where number of child exceptions thrown is less than
CERT.ERR51.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN1-label=
CERT.ERR51.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN2-label=
CERT.ERR51.NCE.UNCHECKED-label=Check for unchecked exception types.
CERT.ERR51.NCE.msg.1="catch" statement directly catches the general exception type ''{0}''.
CERT.ERR51.NCE.msg.2="catch" statement directly catches the unchecked exception type ''{0}''.
CERT.ERR51.NCE.msg.3="catch" statement catches general parent exception type\: ''{0}''.
CERT.ERR54=ERR54-J\: Use a try-with-resources statement to safely handle closeable resources
CERT.ERR54.CLFIN=Avoid using finally block for closing resource only
CERT.ERR54.CLFIN.msg.1=The resource is closed in a finally block instead of a try-with-resources statement.
CERT.EXP00=EXP00-J\: Do not ignore values returned by methods
CERT.EXP00.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
CERT.EXP00.AECB.CHECK_CATCH-label=Check "catch" block.
CERT.EXP00.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
CERT.EXP00.AECB.CHECK_FINALLY-label=Check "finally" block.
CERT.EXP00.AECB.CHECK_TRY-label=Check "try" block.
CERT.EXP00.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
CERT.EXP00.AECB.msg.1="try" block has an empty body.
CERT.EXP00.AECB.msg.2="catch" block has an empty body.
CERT.EXP00.AECB.msg.3="finally" block has an empty body.
CERT.EXP00.NASSIG=Ensure method and constructor return values are used
CERT.EXP00.NASSIG.CHECK_CONSTRUCTORS-label=Check constructor calls
CERT.EXP00.NASSIG.CHECK_IGNORE-label=Specify whether to check or ignore certain methods and constructors
CERT.EXP00.NASSIG.CHECK_IGNORE.0-label=Check the following methods and constructors\:
CERT.EXP00.NASSIG.CHECK_IGNORE.1-label=Ignore the following methods and constructors\:
CERT.EXP00.NASSIG.CHECK_METHODS-label=Check method calls
CERT.EXP00.NASSIG.CHECK_TABLE-label=Specify types and methods/constructors as a Glob expression (use * as wildcard)
CERT.EXP00.NASSIG.CHECK_TABLE.PB__USC__NASSIG__CHECK_TABLE__COLUMN1-label=Type
CERT.EXP00.NASSIG.CHECK_TABLE.PB__USC__NASSIG__CHECK_TABLE__COLUMN2-label=Method/Constructor
CERT.EXP00.NASSIG.IGNORE_NON_JDK-label=Ignore methods and constructors which are not defined in the "java" or "javax" packages.
CERT.EXP00.NASSIG.IGNORE_TABLE-label=Specify types and methods/constructors as a Glob expression (use * as wildcard)
CERT.EXP00.NASSIG.IGNORE_TABLE.PB__USC__NASSIG__IGNORE_TABLE__COLUMN1-label=Type
CERT.EXP00.NASSIG.IGNORE_TABLE.PB__USC__NASSIG__IGNORE_TABLE__COLUMN2-label=Method/Constructor
CERT.EXP00.NASSIG.ONLY_IMMUTABLE-label=Only check method calls on immutable types where all of the parameter types are immutable.
CERT.EXP00.NASSIG.ONLY_IMMUTABLE_NOT_UPDATE-label=Only check method calls which are used to update the state of immutable variables.
CERT.EXP00.NASSIG.msg.1=Return value from method ''{0}'' is not used.
CERT.EXP00.NASSIG.msg.2=Return value from method ''{0}'' is not used, immutable variable ''{1}'' has not been updated.
CERT.EXP00.NASSIG.msg.3=Return value from constructor ''{0}'' is not used.
CERT.EXP00.NASSIG.tab.CHECK_IGNORE_TAB-label=Check/Ignore
CERT.EXP00.NASSIG.tab.GENERAL_TAB-label=General
CERT.EXP01=EXP01-J\: Do not use a null in a case where an object is required
CERT.EXP01.NCMD=Ensure that dereferenced variables match variables which were previously checked for "null"
CERT.EXP01.NCMD.msg.1=The variable dereferenced here ("{0}") does not match the variable which was just checked for "null" ("{1}").
CERT.EXP02=EXP02-J\: Do not use the Object.equals() method to compare two arrays
CERT.EXP02.UEIC=Do not use '\=\=' or '\!\=' to compare objects
CERT.EXP02.UEIC.CHECK_ARRAYS-label=Check for calls to the 'equals()' method of class Object on arrays
CERT.EXP02.UEIC.CHECK_EQUALS_METHOD-label=Check comparisons in equals() methods
CERT.EXP02.UEIC.CHECK_STATICFINAL-label=Check comparisons to "static" "final" objects
CERT.EXP02.UEIC.IGNORE_TYPES-label=Allow "\=\=" and "\!\=" operators when compared object is type\:
CERT.EXP02.UEIC.SCOPE-label=Scope of checking\:
CERT.EXP02.UEIC.SCOPE.0-label=All objects
CERT.EXP02.UEIC.SCOPE.1-label=Only 'String' objects 
CERT.EXP02.UEIC.msg.1="\=\=" is used when comparing Objects. 'equals()' should be used instead.
CERT.EXP02.UEIC.msg.2="\!\=" is used when comparing Objects. 'equals()' should be used instead.
CERT.EXP02.UEIC.msg.3="\=\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
CERT.EXP02.UEIC.msg.4="\!\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
CERT.EXP02.UEIC.msg.5=The 'equals()' method of class 'Object' is used when comparing array Objects. 'java.util.Arrays.equals (Object[], Object[])' should be used instead.
CERT.EXP03=EXP03-J\: Do not use the equality operators when comparing boxed values
CERT.EXP03.UEIC=Do not use '\=\=' or '\!\=' to compare objects
CERT.EXP03.UEIC.CHECK_ARRAYS-label=Check for calls to the 'equals()' method of class Object on arrays
CERT.EXP03.UEIC.CHECK_EQUALS_METHOD-label=Check comparisons in equals() methods
CERT.EXP03.UEIC.CHECK_STATICFINAL-label=Check comparisons to "static" "final" objects
CERT.EXP03.UEIC.IGNORE_TYPES-label=Allow "\=\=" and "\!\=" operators when compared object is type\:
CERT.EXP03.UEIC.SCOPE-label=Scope of checking\:
CERT.EXP03.UEIC.SCOPE.0-label=All objects
CERT.EXP03.UEIC.SCOPE.1-label=Only 'String' objects 
CERT.EXP03.UEIC.msg.1="\=\=" is used when comparing Objects. 'equals()' should be used instead.
CERT.EXP03.UEIC.msg.2="\!\=" is used when comparing Objects. 'equals()' should be used instead.
CERT.EXP03.UEIC.msg.3="\=\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
CERT.EXP03.UEIC.msg.4="\!\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
CERT.EXP03.UEIC.msg.5=The 'equals()' method of class 'Object' is used when comparing array Objects. 'java.util.Arrays.equals (Object[], Object[])' should be used instead.
CERT.EXP05=EXP05-J\: Do not follow a write by a subsequent write or read of the same object within an expression
CERT.EXP05.CID=Avoid using increment or decrement operators in nested expressions.
CERT.EXP05.CID.msg.1=Increment operator is embedded in another expression.
CERT.EXP05.CID.msg.2=Decrement operator is embedded in another expression.
CERT.EXP50=EXP50-J\: Do not confuse abstract object equality with reference equality
CERT.EXP50.UEIC=Do not use '\=\=' or '\!\=' to compare objects
CERT.EXP50.UEIC.CHECK_ARRAYS-label=Check for calls to the 'equals()' method of class Object on arrays
CERT.EXP50.UEIC.CHECK_EQUALS_METHOD-label=Check comparisons in equals() methods
CERT.EXP50.UEIC.CHECK_STATICFINAL-label=Check comparisons to "static" "final" objects
CERT.EXP50.UEIC.IGNORE_TYPES-label=Allow "\=\=" and "\!\=" operators when compared object is type\:
CERT.EXP50.UEIC.SCOPE-label=Scope of checking\:
CERT.EXP50.UEIC.SCOPE.0-label=All objects
CERT.EXP50.UEIC.SCOPE.1-label=Only 'String' objects 
CERT.EXP50.UEIC.msg.1="\=\=" is used when comparing Objects. 'equals()' should be used instead.
CERT.EXP50.UEIC.msg.2="\!\=" is used when comparing Objects. 'equals()' should be used instead.
CERT.EXP50.UEIC.msg.3="\=\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
CERT.EXP50.UEIC.msg.4="\!\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
CERT.EXP50.UEIC.msg.5=The 'equals()' method of class 'Object' is used when comparing array Objects. 'java.util.Arrays.equals (Object[], Object[])' should be used instead.
CERT.EXP51=EXP51-J\: Do not perform assignments in conditional expressions
CERT.EXP51.ASI=Avoid assignment within a condition
CERT.EXP51.ASI.CHECK_BOOLEAN_ONLY-label=Flag assignments to "boolean" objects only
CERT.EXP51.ASI.msg.1=Assignment within an "if" condition.
CERT.EXP51.ASI.msg.2=Assignment within a loop condition.
CERT.EXP52=EXP52-J\: Use braces for the body of an if, for, or while statement
CERT.EXP52.BLK=Provide a '{}' block for conditional statements
CERT.EXP52.BLK.BLKDOWHL-label=Check "do-while" statements
CERT.EXP52.BLK.BLKELSE-label=Check "else" statements
CERT.EXP52.BLK.BLKFOR-label=Check "for" statements
CERT.EXP52.BLK.BLKIF-label=Check "if" statements
CERT.EXP52.BLK.BLKWHL-label=Check "while" statements
CERT.EXP52.BLK.msg.1="{0}" statement without a "'{' '}'" block.
CERT.EXP53=EXP53-J\: Use parentheses for precedence of operation
CERT.EXP53.APAREN=Use '()' to separate complex expressions
CERT.EXP53.APAREN.msg.1=Missing '()' to separate complex expression.
CERT.EXP55=EXP55-J\: Use the same type for the second and third operands in conditional expressions
CERT.EXP55.COMT=Avoid using the conditional operator with mismatched numeric types.
CERT.EXP55.COMT.msg.1=This conditional expression has operands of two different types\: "{0}" and "{1}".
CERT.FIO03=FIO03-J\: Remove temporary files before termination
CERT.FIO03.ATF=Avoid temporary files
CERT.FIO03.ATF.msg.1=A temporary file has been created
CERT.FIO04=FIO04-J\: Release resources when they are no longer needed
CERT.FIO04.CCR=Close all "java.io.Closeable" resources in a "finally" block.
CERT.FIO04.CCR.IGNORE_TYPES-label=Ignored types (Specify fully qualified names)
CERT.FIO04.CCR.msg.1=Resource ''{0}'' is opened but is not closed in a "finally" block.
CERT.FIO04.CIO=Close input and output resources in "finally" blocks
CERT.FIO04.CIO.IGNORE_TYPES-label=Ignored types (Specify fully qualified names)
CERT.FIO04.CIO.msg.1=Variable ''{0}'' is not closed within a "finally" block.
CERT.FIO07=FIO07.JDo not let external process block on IO buffers
CERT.FIO07.EXEC=Do not use "Runtime.exec()".
CERT.FIO07.EXEC.msg.1=Non-portable 'Runtime.exec()' used
CERT.FIO08=FIO08-J\: Distinguish between characters or bytes read from a stream and -1
CERT.FIO08.CRRV=Check the return value of methods which read or skip input
CERT.FIO08.CRRV.CHECKED_METHOD_LIST-description=Methods to be checked\: (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
CERT.FIO08.CRRV.CHECKED_METHOD_LIST-label=Methods to be checked\:
CERT.FIO08.CRRV.msg.1=The return value of this call to ''{0}()'' is not checked.
CERT.FIO12=FIO12-J\: Provide methods to read a write little-endian data
CERT.FIO12.PMRWLED=Provide methods to read and write little-endian data
CERT.FIO12.PMRWLED.msg.1=The ''{0}'' is insecure, because it cannot handle little-endian data.
CERT.FIO13=FIO13-J\: Do not log sensitive information outside a trusted boundary
CERT.FIO13.CONSEN=Do not log confidential or sensitive information
CERT.FIO13.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
CERT.FIO13.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
CERT.FIO13.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
CERT.FIO13.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
CERT.FIO13.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
CERT.FIO13.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
CERT.FIO13.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
CERT.FIO13.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
CERT.FIO13.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
CERT.FIO13.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
CERT.FIO14=FIO14-J\: Perform proper cleanup at program termination
CERT.FIO14.CCR=Close all "java.io.Closeable" resources in a "finally" block.
CERT.FIO14.CCR.IGNORE_TYPES-label=Ignored types (Specify fully qualified names)
CERT.FIO14.CCR.msg.1=Resource ''{0}'' is opened but is not closed in a "finally" block.
CERT.FIO14.CIO=Close input and output resources in "finally" blocks
CERT.FIO14.CIO.IGNORE_TYPES-label=Ignored types (Specify fully qualified names)
CERT.FIO14.CIO.msg.1=Variable ''{0}'' is not closed within a "finally" block.
CERT.FIO14.CRWD=Close resources as early as possible
CERT.FIO14.CRWD.msg.1=It may be possible to move this call to "close" earlier in the method.
CERT.FIO16=FIO16-J\: Canonicalize path names before validating them.
CERT.FIO16.CDBV=Canonicalize data before validation.
CERT.FIO16.CDBV.CANON_METHS-description=Canonicalization method names (in regular expressions) [qualified name of declaring type\#method name]
CERT.FIO16.CDBV.CANON_METHS-label=Canonicalization method names (in regular expressions)
CERT.FIO16.CDBV.CHECK_TYPES-description=Only check calls with the following argument types [regular expressions for fully qualified class name]
CERT.FIO16.CDBV.CHECK_TYPES-label=Only check calls with the following argument types
CERT.FIO16.CDBV.VALID_CLASSES-description=Only check calls within the following classes [regular expressions for fully qualified class name]
CERT.FIO16.CDBV.VALID_CLASSES-label=Only check calls within the following classes
CERT.FIO16.CDBV.VALID_METHS-description=Validation method names (in regular expressions) [qualified name of declaring type\#method name]
CERT.FIO16.CDBV.VALID_METHS-label=Validation method names (in regular expressions)
CERT.FIO16.CDBV.msg.1=The data in ''{0}'' may not have been canonicalized before being validated.
CERT.FIO16.CDBV.msg.2=The return value of this call to ''{0}'' may not have been canonicalized before being validated.
CERT.IDS06=IDS06-J\: Exclude unsanitized uer input from format strings
CERT.IDS06.VAFS=Ensure the correct number of arguments for varargs methods with format strings
CERT.IDS06.VAFS.msg.1=Number of arguments to method ''{0}'' does not match format string.
CERT.IDS07=IDS07-J\: Sanitize untrusted data passed to Runtime.exec() method
CERT.IDS07.EXEC=Do not use "Runtime.exec()".
CERT.IDS07.EXEC.msg.1=Non-portable 'Runtime.exec()' used
CERT.JNI00=JNI00-J\: Define wrappers around native methods
CERT.JNI00.NATIW=Use wrapper methods to secure native methods
CERT.JNI00.NATIW.msg.1={0} should only be accessed using a wrapper method.
CERT.LCK00=LCK00-J\: Use private final lock objects to synchronize classes that may interact with untrusted code
CERT.LCK00.SOPF=Do not synchronize on "public" fields since doing so may cause deadlocks
CERT.LCK00.SOPF.CHECK_ACCESSIBILITY-label=Check fields with the following accessibilities\:
CERT.LCK00.SOPF.CHECK_ACCESSIBILITY.0-label=Check "public" fields
CERT.LCK00.SOPF.CHECK_ACCESSIBILITY.1-label=Check non-"private" fields
CERT.LCK00.SOPF.msg.1=Synchronization on the "{0}" field "{1}".
CERT.LCK01=LCK01-J\: Do not synchronize on objects that may be reused
CERT.LCK01.SCS=Do not synchronize on constant Strings.
CERT.LCK01.SCS.msg.1=Synchronizing on a constant String can lead to deadlocks.
CERT.LCK02=LCK02-J\: Do not synchronize on the class object returned by getClass()
CERT.LCK02.SGC=Do not synchronize on the class object returned by the 'getClass' method
CERT.LCK02.SGC.msg.1=This 'synchronized' block synchronizes on the class object returned by the 'getClass()' method.
CERT.LCK04=LCK04-J\: Do not synchronize on a collection view if the backing collection is accessible
CERT.LCK04.SOBC=Do not synchronize on a collection view if the backing collection is accessible
CERT.LCK04.SOBC.msg.1=Do not synchronize on the collection view ''{0}''
CERT.LCK05=LCK05-J\: Synchronize access to static fields that can be modified by untrusted code
CERT.LCK05.IASF=Inspect accesses to "static" fields which may require synchronization
CERT.LCK05.IASF.CHECK_LOCALS-label=Check non-static instance fields
CERT.LCK05.IASF.msg.1=This code may not be thread-safe; setting and accessing the field ''{0}'' may require synchronization.
CERT.LCK07=LCK07-J\: Avoid deadlock by requesting and releasing locks in the same order
CERT.LCK07.LORD=Ensure that nested locks are ordered correctly
CERT.LCK07.LORD.msg.1=Lock ''{0}'' should not be wrapped by lock ''{1}''.
CERT.LCK08=LCK08-J\: Ensure acrively held locks are released on exceptional conditions
CERT.LCK08.RLF=Release Locks in a "finally" block.
CERT.LCK08.RLF.msg.1=Lock ''{0}'' not released from "finally" block.
CERT.LCK09=LCK09-J\: Do not perform operations that can block while holding a lock
CERT.LCK09.TSHL2=Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks.
CERT.LCK09.TSHL2.msg.1='Thread.sleep()' called from a "synchronized" block.  It may be better to use 'wait()' instead.
CERT.LCK09.TSHL2.msg.2='Thread.sleep()' called from a "synchronized" method.  It may be better to use 'wait()' instead.
CERT.LCK10=LCK10-J\: Use a correct form of the double-checked locking idiom
CERT.LCK10.DCL=Avoid unsafe implementations of the "double-checked locking" pattern.
CERT.LCK10.DCL.msg.1=The "double-checked locking" pattern is used; this pattern can cause unexpected problems when compiler optimizations are performed.
CERT.MET02=MET02-J\: Do not use deprecated or obsolete classes or methods
CERT.MET02.DPRAPI=Do not use deprecated APIs
CERT.MET02.DPRAPI.CHECK_SEE-label=Check for usage of deprecated APIs in Javadoc "@see" tags
CERT.MET02.DPRAPI.CLASS_LIST-label=Deprecated class/interface list
CERT.MET02.DPRAPI.FIELD_LIST-description=Deprecated field list (in form of &lt;fully qualified type name&gt;\#&lt;field name&gt;)
CERT.MET02.DPRAPI.FIELD_LIST-label=Deprecated field list
CERT.MET02.DPRAPI.IGNORE_NOT_LISTED-label=Ignore all types, methods, and fields not listed above
CERT.MET02.DPRAPI.IGNORE_USER_DEFINED-label=Ignore user-defined types, methods, and fields
CERT.MET02.DPRAPI.METHOD_LIST-description=Deprecated method list (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
CERT.MET02.DPRAPI.METHOD_LIST-label=Deprecated method list
CERT.MET02.DPRAPI.msg.1=Using deprecated {0}\: ''{1}''.
CERT.MET02.DPRAPI.tab.CLASS-label=Class/Interface
CERT.MET02.DPRAPI.tab.FIELD-label=Field
CERT.MET02.DPRAPI.tab.METHOD-label=Method
CERT.MET02.THRD=Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'.
CERT.MET02.THRD.msg.1=Unsafe method ''{0}'' was called.
CERT.MET02.THRD.msg.2=''{0}'' should not be used because it only exists for use with the deadlock-prone ''suspend()'' method.
CERT.MET02.THRD.msg.3=Deadlock-prone method ''{0}'' was called.
CERT.MET02.THRD.msg.4=Deprecated method ''{0}'' was called
CERT.MET04=MET04-J\: Do not increase the accessibility of overridden or hidden methods
CERT.MET04.OPM=Do not override an instance "private" method
CERT.MET04.OPM.msg.1=Private method ''{0}'' also declared in class ''{1}''.
CERT.MET06=MET06-J\: Do not invoke overridable methods in clone()
CERT.MET06.CLONE=Make your 'clone()' method "final" for security.
CERT.MET06.CLONE.msg.1='clone()' method is not "final".
CERT.MET07=MET07-J\: Never declare a class method that hides a method declared in a superclass or superinterfaces
CERT.MET07.AHSM=Do not hide inherited "static" member methods
CERT.MET07.AHSM.msg.1="static" method ''{0}()'' overrides "static" method in ancestor class ''{1}''.
CERT.MET09=MET09-J\: Classes that define equals() method must also define hashCode() method
CERT.MET09.OVERRIDE=Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa
CERT.MET09.OVERRIDE.CHECK_INHERITED-label=Include methods inherited from "abstract" superclasses in the checking.
CERT.MET09.OVERRIDE.CODSTA.OVERRIDE-label=Check that 'hashCode()' is overridden whenever 'equals()' is overridden.
CERT.MET09.OVERRIDE.CODSTA.OVERRIDE2-label=Check that 'equals()' is overridden whenever 'hashCode()' is overridden.
CERT.MET09.OVERRIDE.msg.1=Class overriding ''equals(Object)'' does not override ''hashCode()''\: {0}.
CERT.MET09.OVERRIDE.msg.2=Class inherits overridden version of ''equals(Object)'' but does not override ''hashCode()''\: {0}.
CERT.MET09.OVERRIDE.msg.3=Class overriding ''hashCode()'' does not override ''equals(Object)''\: {0}.
CERT.MET09.OVERRIDE.msg.4=Class inherits overridden version of ''hashCode()'' but does not override ''equals(Object)''\: {0}.
CERT.MET11=MET11-J\: Ensure that keys used in comparison operations are immutable
CERT.MET11.IKICO=Ensure that keys used in comparison operations are immutable
CERT.MET11.IKICO.msg.1=A mutable field "{1}" is used in the "{0}" method.
CERT.MET12=MET12-J\: Do not use finalizers
CERT.MET12.EF=Avoid empty "finalize()" methods.
CERT.MET12.EF.msg.1=Avoid empty 'finalize()' method
CERT.MET12.FCF=Call 'super.finalize()' from 'finalize()'.
CERT.MET12.FCF.msg.1=Missing call to ''super.finalize()'' in ''finalize()''.
CERT.MET12.FCSF=Avoid redundant 'finalize()' methods which only call the superclass' 'finalize()' method
CERT.MET12.FCSF.msg.1=This 'finalize()' method does nothing except call the superclass' 'finalize()' method.
CERT.MET12.FM=Do not use 'finalize()' methods to unregister listeners.
CERT.MET12.FM.msg.1=Attempting to remove listener in 'finalize()' method.
CERT.MET12.IFF=Call 'super.finalize()' in the "finally" block of 'finalize()' methods.
CERT.MET12.IFF.msg.1=Missing "finally" block that invokes 'super.finalize()'.
CERT.MET12.IFF.msg.2='finalize()' method's "finally" block does not call 'super.finalize()'.
CERT.MET12.MFP=Give "finalize()" methods "protected" access.
CERT.MET12.MFP.msg.1=This "finalize()" method has "public" access
CERT.MET12.MNDF=Do not define 'finalize()' method in bean classes.
CERT.MET12.MNDF.msg.1=Bean "class" should not define 'finalize()' method.
CERT.MET12.NCF=Do not call 'finalize()' explicitly.
CERT.MET12.NCF.msg.1='finalize()' called explicitly.
CERT.MET12.OF=Do not overload the 'finalize()' method
CERT.MET12.OF.msg.1=Avoid overloading 'finalize()' method.
CERT.MET50=MET50-J\: Avoid ambiguous or confusing uses of overloading
CERT.MET50.OVERLOAD=Use overloading judiciously.
CERT.MET50.OVERLOAD.CASTS-label=Flag overloaded methods where the same set of parameters can be passed to different overloadings using casts.
CERT.MET50.OVERLOAD.SAME_PARAMS-label=Flag overloaded methods if they have the same number and types of parameters.
CERT.MET50.OVERLOAD.WHAT_TO_CHECK-label=What to Flag
CERT.MET50.OVERLOAD.WHAT_TO_CHECK.0-label=Flag any overloaded methods with the same number of parameters.
CERT.MET50.OVERLOAD.WHAT_TO_CHECK.1-label=Flag only certain cases where two overloadings can be easily confused.
CERT.MET50.OVERLOAD.msg.1=Another overloaded method has the same number of parameters\: ''{0}''.
CERT.MET50.OVERLOAD.msg.2=Another overloaded method has the same number and types of parameters as ''{0}''.
CERT.MET50.OVERLOAD.msg.3=The overloaded method ''{0}'' may be easily confused with the overloading ''{1}''.
CERT.MET52=MET52-J\: Do not use the clone() method to copy untrusted method parameters
CERT.MET52.CIFC=Only "clone()" instances of "final" classes.
CERT.MET52.CIFC.msg.1=''{0}'' of type ''{1}'' is not final.
CERT.MET52.CIFC.msg.2=Array ''{0}'' contains type ''{1}'' which is not final.
CERT.MET53=MET53-J\: Ensure that the clone() method calls super.clone()
CERT.MET53.SCLONE=Call 'super.clone()' in all 'clone()' methods.
CERT.MET53.SCLONE.msg.1='clone()' method does not call 'super.clone()'
CERT.MSC00=MSC00-J\: Use SSLSocket rather than Socket for secure data exchange
CERT.MSC00.USC=Use the SSL-enabled version of classes when possible.
CERT.MSC00.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
CERT.MSC00.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
CERT.MSC00.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
CERT.MSC00.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
CERT.MSC00.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
CERT.MSC00.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
CERT.MSC00.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
CERT.MSC00.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
CERT.MSC01=MSC01-J\: Do not use an empty infinite loop
CERT.MSC01.EB=Avoid control statements with empty bodies
CERT.MSC01.EB.CHECK_TYPE_TABLE-label=Flag as empty body\:
CERT.MSC01.EB.CHECK_TYPE_TABLE.PB__TYPO__EB__CHECK_TYPE_TABLE__COLUMN1-label=Conditional statement type
CERT.MSC01.EB.CHECK_TYPE_TABLE.PB__TYPO__EB__CHECK_TYPE_TABLE__COLUMN2-label=empty statement
CERT.MSC01.EB.CHECK_TYPE_TABLE.PB__TYPO__EB__CHECK_TYPE_TABLE__COLUMN3-label=empty block
CERT.MSC01.EB.SAME_LINE_ONLY-label=Report only if the empty statement is on the same line as the control statement.
CERT.MSC01.EB.msg.1=''{0}'' statement with an empty body.
CERT.MSC02=MSC02-J\: Generate strong random numbers
CERT.MSC02.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
CERT.MSC02.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
CERT.MSC03=MSC03-J\: Never hard code sensitive information
CERT.MSC03.AHCA=Avoid hard-coding the arguments to certain methods
CERT.MSC03.AHCA.DANGEROUS_METHODS-label=Methods to Check
CERT.MSC03.AHCA.DANGEROUS_METHODS.SECURITY__WSC__AHCA__DANGEROUS_METHODS__COLUMN1-description=Specify &lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;,...)
CERT.MSC03.AHCA.DANGEROUS_METHODS.SECURITY__WSC__AHCA__DANGEROUS_METHODS__COLUMN1-label=Method
CERT.MSC03.AHCA.DANGEROUS_METHODS.SECURITY__WSC__AHCA__DANGEROUS_METHODS__COLUMN2-label=Argument Index to Check ("0"-based)
CERT.MSC03.AHCA.msg.1=Argument \# {0} to the method ''{1}()'' should not be hard-coded.
CERT.MSC03.HCCK=Avoid using hard-coded cryptographic keys
CERT.MSC03.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
CERT.MSC03.HCCK.msg.1=Hard-coded cryptographic key here.
CERT.MSC03.HCCS=Avoid passing hardcoded usernames/passwords/URLs to database connection methods.
CERT.MSC03.HCCS.CONNECT_METHS-description=Additional Database Connection Methods (in form of &lt;qualified name of declaring type&gt;\#&lt;method name&gt;)
CERT.MSC03.HCCS.CONNECT_METHS-label=Additional Database Connection Methods
CERT.MSC03.HCCS.msg.1=This call to ''{0}()'' may be dangerous because it passes in only hard-coded Strings.
CERT.MSC03.HCCS.msg.2=This call to ''{0}()'' may be dangerous because it uses a hard-coded password.
CERT.MSC07=MSC07-J\: Prevent multiple instantiations of singleton objects
CERT.MSC07.ILI=Make lazy initializations thread-safe
CERT.MSC07.ILI.msg.1=Lazy initialization is not thread-safe\: {0}.
CERT.MSC52=MSC52-J\: Finish every set of statements associated with a case label with a break statement
CERT.MSC52.SBC=Do not use a "switch" statement with a bad "case"
CERT.MSC52.SBC.IGNORE_EMPTY-label=Ignore "case" statements with empty bodies
CERT.MSC52.SBC.IGNORE_LAST_SWITCH_CASE-label=Ignore last "switch" case
CERT.MSC52.SBC.msg.1="{0}" is missing either "break", "return", or "/* falls through */".
CERT.MSC52.SBC.msg.2="default" case is missing either "break", "return", or "/* falls through */".
CERT.MSC57=MSC57-J\: Strive for logical completeness
CERT.MSC57.PDCL=Place "default" as the last case of the "switch" statement
CERT.MSC57.PDCL.msg.1="default" case is not the last case.
CERT.MSC57.PDS=Provide "default\:" for each "switch" statement
CERT.MSC57.PDS.msg.1="switch" is missing "default\:" label.
CERT.MSC60=MSC60-J\: Do not use assertions to verify the absence of runtime errors
CERT.MSC60.ASSERT=Do not use assertions in production code
CERT.MSC60.ASSERT.PUBLIC_METHOD_ONLY-label=Check only public methods
CERT.MSC60.ASSERT.msg.1='assert' statement should not be used in production code.
CERT.MSC61=MSC61-J\: Do not use insecure or weak cryptographic algorithms
CERT.MSC61.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
CERT.MSC61.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
CERT.MSC61.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
CERT.MSC61.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
CERT.MSC61.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
CERT.MSC61.AISSAJAVA.msg.1=The cryptographic class is insecure.
CERT.MSC61.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
CERT.MSC61.CKTS=Avoid using cryptographic keys which are too short.
CERT.MSC61.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
CERT.MSC61.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
CERT.MSC61.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
CERT.MSC61.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
CERT.MSC61.HCCK=Avoid using hard-coded cryptographic keys
CERT.MSC61.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
CERT.MSC61.HCCK.msg.1=Hard-coded cryptographic key here.
CERT.MSC61.ICA=Avoid using insecure algorithms for cryptography.
CERT.MSC61.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
CERT.MSC61.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
CERT.MSC61.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
CERT.MSC61.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
CERT.MSC61.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
CERT.MSC61.ICA.msg.2=The cryptography algorithm is used without padding.
CERT.NUM00=NUM00-J\: Detect or prevent integer overflow
CERT.NUM00.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
CERT.NUM00.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
CERT.NUM00.CACO=Avoid using compound assignment operators in cases which may cause overflow.
CERT.NUM00.CACO.msg.1=Compound assignment operators should not be used when the destination type is ''{0}''.
CERT.NUM00.CACO.msg.2=Compound assignment operators should not be used when the destination type is ''{0}'' and the operand type is ''{1}''.
CERT.NUM00.ICO=Avoid calculations which result in overflow or NaN
CERT.NUM00.ICO.msg.1=This calculation will not produce an accurate result because it will result in overflow.
CERT.NUM00.ICO.msg.2=This calculation will throw 'java.lang.ArithmeticException'.
CERT.NUM01=NUM01-J\: Do not perform bitwise and arithmetic operations on the same data
CERT.NUM01.NCBAV=Do not perform bitwise and arithmetic operations on the same data
CERT.NUM01.NCBAV.msg.1=The variable used in this statement is operated on using both bitwise and arithmetic operations.
CERT.NUM04=NUM04-J\: Do not use floating-point numbers if precise computation is required
CERT.NUM04.UBD=Do not use "float" and "double" if exact answers are required
CERT.NUM04.UBD.msg.1=''{0}'' used in a high-precision calculation or comparison is of type "double" or "float"
CERT.NUM07=NUM07-J\: Do not attempt comparisons with NaN
CERT.NUM07.NAN=Avoid comparisons to Double.NaN or Float.NaN.
CERT.NUM07.NAN.msg.1=Avoid comparison to ''{0}''.
CERT.NUM09=NUM09-J\: Do not use floating-point variables as loop counters
CERT.NUM09.FPLI=Do not use floating point variables as loop indices.
CERT.NUM09.FPLI.IGNORED_OPERATORS-label=Ignore variables which are compared using "&lt;" or "&gt;" in the conditional expression
CERT.NUM09.FPLI.msg.1=The floating point variable ''{0}'' should not be used as an index for this loop.
CERT.NUM10=NUM10-J\: Do not construct BigDecimal objects from floating-point literals
CERT.NUM10.BBDCC=Do not pass floating point values to the 'BigDecimal' constructor
CERT.NUM10.BBDCC.msg.1=The 'BigDecimal' constructor is called with a floating point value as an argument
CERT.NUM12=NUM12-J\: Ensure conversions of numeric types to narrower types do not result in lost or misinterpreted data
CERT.NUM12.CLP=Do not cast primitive data types to lower precision
CERT.NUM12.CLP.msg.1="{0}" type cast to lower precision "{1}" type.
CERT.NUM13=NUM13-J\: Avoid loss of precision when converting primitive integers to floating-point
CERT.NUM13.AIC=Avoid implicit casts from integer data types to floating point data types.
CERT.NUM13.AIC.msg.1=This expression will be implicitly cast from an "{0}" to a "{1}" because the called method requires a "{1}" argument.
CERT.NUM13.AIC.msg.2=This expression will be implicitly cast from a "{0}" to a "{1}" because the called method requires a "{1}" argument.
CERT.NUM13.AIC.msg.3=This expression will be implicitly cast from an "{0}" to a "{1}" because the expression is assigned to a "{1}" variable.
CERT.NUM13.AIC.msg.4=This expression will be implicitly cast from a "{0}" to a "{1}" because the expression is assigned to a "{1}" variable.
CERT.NUM50=NUM50-J\: Convert integers to floating point for floating-point operations
CERT.NUM50.IDCD=Do not assign the result of an integer division to a floating point variable
CERT.NUM50.IDCD.msg.1=Assigning the result of this integer division to a floating point variable will not increase the precision of the result.
CERT.NUM51=NUM51-J\: Do not assume that the remainder operator always returns a nonnegative result for integral operands
CERT.NUM51.NIA=Do not initialize array dimensions with negative numbers
CERT.NUM51.NIA.msg.1=Array dimension is negative \: {0}.
CERT.OBJ03=OBJ03-J\: Prevent heap pollution
CERT.OBJ03.AGBPT=Avoid conversions from parameterized types to raw types
CERT.OBJ03.AGBPT.msg.1=Do not assign an expression with a parameterized type to a variable with a non-parameterized type.
CERT.OBJ04=OBJ04-J\: Provide mutable classes with copy functionality to safely allow passing instances to untrusted code
CERT.OBJ04.CLONE=Make your 'clone()' method "final" for security.
CERT.OBJ04.CLONE.msg.1='clone()' method is not "final".
CERT.OBJ04.CPCL=Enforce returning a defensive copy in 'clone()' methods
CERT.OBJ04.CPCL.msg.1=Field ''{0}'' is not initialized as a defensive copy.
CERT.OBJ04.MPT=Do not pass user-given mutable objects directly to certain types
CERT.OBJ04.MPT.CHECKED_CONSTRUCTORS-label=Check for values passed to new instances of the following types\:
CERT.OBJ04.MPT.CHECK_ARRAYS-label=Check arrays
CERT.OBJ04.MPT.CHECK_MUTABLE_TYPES-label=Check mutable types
CERT.OBJ04.MPT.CHECK_PACKAGE-label=Check "package-private" methods
CERT.OBJ04.MPT.CHECK_PROTECTED-label=Check "protected" methods
CERT.OBJ04.MPT.CHECK_PUBLIC-label=Check "public" methods
CERT.OBJ04.MPT.group.0-label=Types to check
CERT.OBJ04.MPT.msg.1=New instance of type ''{0}'' is passed mutable parameter ''{1}'' directly.
CERT.OBJ04.MUCOP=Provide mutable classes with copy functionality
CERT.OBJ04.MUCOP.COPY_CONSTRUCTOR-label=Provide a copy constructor
CERT.OBJ04.MUCOP.PUBLIC_CLONE-label=Provide a public clone method(relevant for final classes)
CERT.OBJ04.MUCOP.STATIC_CREATION-label=Provide a static creation method
CERT.OBJ04.MUCOP.group.0-label=Select which options to require
CERT.OBJ04.MUCOP.msg.1={0} missing.
CERT.OBJ04.SMO=Do not store user-given mutable objects directly into variables
CERT.OBJ04.SMO.CHECK_ARRAYS-label=Check arrays
CERT.OBJ04.SMO.CHECK_MUTABLE_TYPES-label=Check mutable types
CERT.OBJ04.SMO.CHECK_PACKAGE-label=Check "package-private" methods
CERT.OBJ04.SMO.CHECK_PROTECTED-label=Check "protected" methods
CERT.OBJ04.SMO.CHECK_PUBLIC-label=Check "public" methods
CERT.OBJ04.SMO.group.0-label=Types to check
CERT.OBJ04.SMO.msg.1=This assignment may store the original parameter ''{0}'' rather than a copy of the parameter into the field ''{1}''.
CERT.OBJ04.SMO.msg.2=This assignment may store the original parameter ''{0}'' rather than a copy of the parameter into the variable ''{1}''.
CERT.OBJ05=OBJ05-J\: Defensively copy private mutable class members before returning their references
CERT.OBJ05.CPCL=Enforce returning a defensive copy in 'clone()' methods
CERT.OBJ05.CPCL.msg.1=Field ''{0}'' is not initialized as a defensive copy.
CERT.OBJ05.MPT=Do not pass user-given mutable objects directly to certain types
CERT.OBJ05.MPT.CHECKED_CONSTRUCTORS-label=Check for values passed to new instances of the following types\:
CERT.OBJ05.MPT.CHECK_ARRAYS-label=Check arrays
CERT.OBJ05.MPT.CHECK_MUTABLE_TYPES-label=Check mutable types
CERT.OBJ05.MPT.CHECK_PACKAGE-label=Check "package-private" methods
CERT.OBJ05.MPT.CHECK_PROTECTED-label=Check "protected" methods
CERT.OBJ05.MPT.CHECK_PUBLIC-label=Check "public" methods
CERT.OBJ05.MPT.group.0-label=Types to check
CERT.OBJ05.MPT.msg.1=New instance of type ''{0}'' is passed mutable parameter ''{1}'' directly.
CERT.OBJ05.MUCOP=Provide mutable classes with copy functionality
CERT.OBJ05.MUCOP.COPY_CONSTRUCTOR-label=Provide a copy constructor
CERT.OBJ05.MUCOP.PUBLIC_CLONE-label=Provide a public clone method(relevant for final classes)
CERT.OBJ05.MUCOP.STATIC_CREATION-label=Provide a static creation method
CERT.OBJ05.MUCOP.group.0-label=Select which options to require
CERT.OBJ05.MUCOP.msg.1={0} missing.
CERT.OBJ05.SMO=Do not store user-given mutable objects directly into variables
CERT.OBJ05.SMO.CHECK_ARRAYS-label=Check arrays
CERT.OBJ05.SMO.CHECK_MUTABLE_TYPES-label=Check mutable types
CERT.OBJ05.SMO.CHECK_PACKAGE-label=Check "package-private" methods
CERT.OBJ05.SMO.CHECK_PROTECTED-label=Check "protected" methods
CERT.OBJ05.SMO.CHECK_PUBLIC-label=Check "public" methods
CERT.OBJ05.SMO.group.0-label=Types to check
CERT.OBJ05.SMO.msg.1=This assignment may store the original parameter ''{0}'' rather than a copy of the parameter into the field ''{1}''.
CERT.OBJ05.SMO.msg.2=This assignment may store the original parameter ''{0}'' rather than a copy of the parameter into the variable ''{1}''.
CERT.OBJ06=OBJ06-J\: Defensively copy mutable inputs and mutable internal components
CERT.OBJ06.CPCL=Enforce returning a defensive copy in 'clone()' methods
CERT.OBJ06.CPCL.msg.1=Field ''{0}'' is not initialized as a defensive copy.
CERT.OBJ06.MPT=Do not pass user-given mutable objects directly to certain types
CERT.OBJ06.MPT.CHECKED_CONSTRUCTORS-label=Check for values passed to new instances of the following types\:
CERT.OBJ06.MPT.CHECK_ARRAYS-label=Check arrays
CERT.OBJ06.MPT.CHECK_MUTABLE_TYPES-label=Check mutable types
CERT.OBJ06.MPT.CHECK_PACKAGE-label=Check "package-private" methods
CERT.OBJ06.MPT.CHECK_PROTECTED-label=Check "protected" methods
CERT.OBJ06.MPT.CHECK_PUBLIC-label=Check "public" methods
CERT.OBJ06.MPT.group.0-label=Types to check
CERT.OBJ06.MPT.msg.1=New instance of type ''{0}'' is passed mutable parameter ''{1}'' directly.
CERT.OBJ06.MUCOP=Provide mutable classes with copy functionality
CERT.OBJ06.MUCOP.COPY_CONSTRUCTOR-label=Provide a copy constructor
CERT.OBJ06.MUCOP.PUBLIC_CLONE-label=Provide a public clone method(relevant for final classes)
CERT.OBJ06.MUCOP.STATIC_CREATION-label=Provide a static creation method
CERT.OBJ06.MUCOP.group.0-label=Select which options to require
CERT.OBJ06.MUCOP.msg.1={0} missing.
CERT.OBJ06.SMO=Do not store user-given mutable objects directly into variables
CERT.OBJ06.SMO.CHECK_ARRAYS-label=Check arrays
CERT.OBJ06.SMO.CHECK_MUTABLE_TYPES-label=Check mutable types
CERT.OBJ06.SMO.CHECK_PACKAGE-label=Check "package-private" methods
CERT.OBJ06.SMO.CHECK_PROTECTED-label=Check "protected" methods
CERT.OBJ06.SMO.CHECK_PUBLIC-label=Check "public" methods
CERT.OBJ06.SMO.group.0-label=Types to check
CERT.OBJ06.SMO.msg.1=This assignment may store the original parameter ''{0}'' rather than a copy of the parameter into the field ''{1}''.
CERT.OBJ06.SMO.msg.2=This assignment may store the original parameter ''{0}'' rather than a copy of the parameter into the variable ''{1}''.
CERT.OBJ07=OBJ07-J\: Sensitive classes must not let themselves be copied
CERT.OBJ07.MCNC=Make your classes noncloneable
CERT.OBJ07.MCNC.msg.1='clone()' method is missing
CERT.OBJ07.MCNC.msg.2='clone()' method is not "final"
CERT.OBJ07.MCNC.msg.3=java.lang.CloneNotSupportedException is not thrown
CERT.OBJ07.MCNC.msg.4='clone()' method has parameter
CERT.OBJ08=OBJ08-J\: Do not expose private members of an outer class from within a nested class
CERT.OBJ08.INNER=Make all member classes "private".
CERT.OBJ08.INNER.CHECK_INTERFACE-label=Check member interfaces
CERT.OBJ08.INNER.IGNORE_STATIC-label=Ignore "static" member classes
CERT.OBJ08.INNER.msg.1=Member class ''{0}'' is not "private".
CERT.OBJ09=OBJ09-J\: Compare classes and not class names
CERT.OBJ09.CMP=Do not compare Class objects by name.
CERT.OBJ09.CMP.msg.1=Class object comparison by name.
CERT.OBJ10=OBJ10-J\: Do not use public static nonfinal variables
CERT.OBJ10.RMO=Avoid referencing mutable fields
CERT.OBJ10.RMO.IGNORE_LIST-label=Ignore fields of the following classes\: (Glob expression)
CERT.OBJ10.RMO.PACKAGE_FIELD-label=package-private
CERT.OBJ10.RMO.PRIVATE_FIELD-label=private
CERT.OBJ10.RMO.PROTECTED_FIELD-label=protected
CERT.OBJ10.RMO.PUBLIC_FIELD-label=public
CERT.OBJ10.RMO.STATIC_FINAL_FIELD_ONLY-label=Check "static final" fields only
CERT.OBJ10.RMO.group.0-label=Check fields of accessibility
CERT.OBJ10.RMO.msg.1=''{0}'' is a mutable field.
CERT.OBJ10.SPFF=Inspect 'static' fields which may have intended to be declared 'static final'.
CERT.OBJ10.SPFF.PACKAGE_FIELD-label=package-private
CERT.OBJ10.SPFF.PRIMITIVE_CHECK-label=primitive type
CERT.OBJ10.SPFF.PRIMITIVE_WRAPPER_CHECK-label=primitive wrapper type
CERT.OBJ10.SPFF.PRIVATE_FIELD-label=private
CERT.OBJ10.SPFF.PROTECTED_FIELD-label=protected
CERT.OBJ10.SPFF.PUBLIC_FIELD-label=public
CERT.OBJ10.SPFF.STRING_CHECK-label=java.lang.String
CERT.OBJ10.SPFF.group.0-label=Check fields of type
CERT.OBJ10.SPFF.group.1-label=Check fields of accessibility
CERT.OBJ10.SPFF.msg.1=Field ''{0}'' may have been intended to be "static final".
CERT.OBJ11=OBJ11-J\: Be wary of letting constructors throw exceptions
CERT.OBJ11.EPNFC=Do not throw exceptions from constructors of "public" non-"final" classes.
CERT.OBJ11.EPNFC.msg.1=Constructor ''{0}'' throws ''{1}''.
CERT.OBJ13=OBJ13-J\: Ensure that references to mutable objects are not exposed
CERT.OBJ13.RMO=Avoid referencing mutable fields
CERT.OBJ13.RMO.IGNORE_LIST-label=Ignore fields of the following classes\: (Glob expression)
CERT.OBJ13.RMO.PACKAGE_FIELD-label=package-private
CERT.OBJ13.RMO.PRIVATE_FIELD-label=private
CERT.OBJ13.RMO.PROTECTED_FIELD-label=protected
CERT.OBJ13.RMO.PUBLIC_FIELD-label=public
CERT.OBJ13.RMO.STATIC_FINAL_FIELD_ONLY-label=Check "static final" fields only
CERT.OBJ13.RMO.group.0-label=Check fields of accessibility
CERT.OBJ13.RMO.msg.1=''{0}'' is a mutable field.
CERT.OBJ51=OBJ51-J\: Minimize the accessibility of classes and their members
CERT.OBJ51.DPAC=Declare "package-private" types as inaccessible as possible
CERT.OBJ51.DPAC.ALLOW_PRIVATE_INNER-label=Allow inner types to be declared "private"
CERT.OBJ51.DPAC.IGNORE_CLASSES-label=Ignore the classes that correspond to these qualified names
CERT.OBJ51.DPAC.IGNORE_PROTECTED_PP-label=Ignore "protected" types which can be made package-private
CERT.OBJ51.DPAC.msg.1=Class ''{0}'' should be declared {1}.
CERT.OBJ51.DPAC.msg.2=Interface ''{0}'' should be declared {1}.
CERT.OBJ51.DPAC.msg.3=Enum ''{0}'' should be declared {1}.
CERT.OBJ51.DPAC.msg.4=Annotation ''{0}'' should be declared {1}.
CERT.OBJ51.DPAF=Declare package-private fields as inaccessible as possible
CERT.OBJ51.DPAF.IGNORE_ABSTRACT-label=Ignore fields declared in "abstract" classes
CERT.OBJ51.DPAF.IGNORE_FINAL-label=Ignore "final" fields
CERT.OBJ51.DPAF.msg.1=Field ''{0}'' should be declared {1}.
CERT.OBJ51.DPAM=Declare package-private methods as inaccessible as possible
CERT.OBJ51.DPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
CERT.OBJ51.DPAM.CHECK_LOCAL-label=Check methods in local classes
CERT.OBJ51.DPAM.msg.1=Method ''{0}()'' should be declared {1}.
CERT.OBJ51.DPAM.msg.2=Constructor ''{0}()'' should be declared {1}.
CERT.OBJ51.DPPC=Declare "public/protected" types as inaccessible as possible
CERT.OBJ51.DPPC.ALLOW_PRIVATE_INNER-label=Allow inner types to be declared "private"
CERT.OBJ51.DPPC.IGNORE_CLASSES-label=Ignore the classes that correspond to these qualified names
CERT.OBJ51.DPPC.IGNORE_PROTECTED_PP-label=Ignore "protected" types which can be made package-private
CERT.OBJ51.DPPC.msg.1=Class ''{0}'' should be declared {1}.
CERT.OBJ51.DPPC.msg.2=Interface ''{0}'' should be declared {1}.
CERT.OBJ51.DPPC.msg.3=Enum ''{0}'' should be declared {1}.
CERT.OBJ51.DPPC.msg.4=Annotation ''{0}'' should be declared {1}.
CERT.OBJ51.DPPF=Declare "public/protected" fields as inaccessible as possible
CERT.OBJ51.DPPF.IGNORE_ABSTRACT-label=Ignore fields declared in "abstract" classes
CERT.OBJ51.DPPF.IGNORE_FINAL-label=Ignore "final" fields
CERT.OBJ51.DPPF.IGNORE_PROTECTED_PP-label=Ignore "protected" fields which can be made package-private
CERT.OBJ51.DPPF.IGNORE_TYPE_TABLE-label=Ignore the following classes\: (specify with Glob expressions)
CERT.OBJ51.DPPF.IGNORE_TYPE_TABLE.GLOBAL__DPPF__IGNORE_TYPE_TABLE__COLUMN1-label=Superclass
CERT.OBJ51.DPPF.IGNORE_TYPE_TABLE.GLOBAL__DPPF__IGNORE_TYPE_TABLE__COLUMN2-label=Class
CERT.OBJ51.DPPF.msg.1=Field ''{0}'' should be declared {1}.
CERT.OBJ51.DPPM=Declare "public/protected" methods as inaccessible as possible
CERT.OBJ51.DPPM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
CERT.OBJ51.DPPM.CHECK_LOCAL-label=Check methods in local classes
CERT.OBJ51.DPPM.IGNORE_OVERLOADED-label=Ignore "overloaded" methods
CERT.OBJ51.DPPM.IGNORE_PROTECTED_PP-label=Ignore "protected" methods which can be made package-private
CERT.OBJ51.DPPM.msg.1=Method ''{0}()'' should be declared {1}.
CERT.OBJ51.DPPM.msg.2=Constructor ''{0}()'' should be declared {1}.
CERT.SEC03=SEC03-J\: Do not load trusted classes after allowing untrusted code to load in arbitrary classes
CERT.SEC03.ACL=Do not access the class loader in a web component.
CERT.SEC03.ACL.DEPTH-label=Maximum depth to look for "getClassLoader()" calls
CERT.SEC03.ACL.msg.1=Call to ''{0}'' in a web component.
CERT.SEC03.ACL.msg.2=Method ''{0}'' indirectly calls "getClassLoader()" in a web component.
CERT.SEC04=SEC04-J\: Protect sensitive operations with security manager checks
CERT.SEC04.SCF=Enforce 'SecurityManager' checks before setting or getting fields
CERT.SEC04.SCF.CHECK_NON_FINAL_METHOD-label=Ensure methods containing 'SecurityManager' checks are declared "final"
CERT.SEC04.SCF.FINAL_CLASS-label=Check non-"final" classes only
CERT.SEC04.SCF.PARAM_LEVEL-label=Maximum depth to look for 'SecurityManager' check
CERT.SEC04.SCF.msg.1=Missing ''SecurityManager'' check before setting field in method ''{0}()''.
CERT.SEC04.SCF.msg.2=Missing ''SecurityManager'' check before getting field in method ''{0}()''.
CERT.SEC04.SCF.msg.3=Method ''{0}'' is not declared "final".
CERT.SEC05=SEC05-J\: Do not use reflection to increase accessibility of classes, methods or fields
CERT.SEC05.ARM=Avoid using reflection methods
CERT.SEC05.ARM.CHECKED_METHODS-label=Check the following methods\:
CERT.SEC05.ARM.CHECKED_METHODS.CODSTA__BP__ARM__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
CERT.SEC05.ARM.CHECKED_METHODS.CODSTA__BP__ARM__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
CERT.SEC05.ARM.msg.1=Reflection method ''{0}'' called.
CERT.SEC51=SEC51-J\: Minimize privileged code
CERT.SEC51.PCL=Limit the number of lines in "privileged" code blocks.
CERT.SEC51.PCL.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
CERT.SEC51.PCL.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
CERT.SEC51.PCL.NUMBER_LINES-label=Limit number of lines in "run()" method to
CERT.SEC51.PCL.msg.1="run()" method of class ''{0}'' has greater than ''{1}'' lines.
CERT.SER00=SER00-J\: Enable serialization compatibility during class evolution
CERT.SER00.DUID=Create a 'serialVersionUID' for all 'Serializable' classes.
CERT.SER00.DUID.CHECK_PRIVATE-label=Check if serialVersionUID is "private"
CERT.SER00.DUID.msg.1=No 'serialVersionUID' declared in class ''{0}''.
CERT.SER00.DUID.msg.2='serialVersionUID' must be declared "static final long", otherwise it will not be used.
CERT.SER00.DUID.msg.3='serialVersionUID' should be declared "private".
CERT.SER01=SER01-J\: Do not deviate from the proper signatures of serialization methods
CERT.SER01.ROWO=Ensure that the 'readObject()' and 'writeObject()' methods have the correct signature.
CERT.SER01.ROWO.msg.1=This ''readObject()'' method does not have the signature "private void readObject(ObjectInputStream) throws IOException, ClassNotFoundException"
CERT.SER01.ROWO.msg.2=This ''writeObject()'' method does not have the signature "private void writeObject(ObjectOutputStream) throws IOException"
CERT.SER03=SER03-J\: Do not serialize unencrypted, sensitive data
CERT.SER03.SIF=Inspect instance fields of serializable objects to make sure they will not expose sensitive information
CERT.SER03.SIF.IGNORE_FINAL-label=Ignore "final" fields
CERT.SER03.SIF.msg.1=Inspect field ''{0}'' to ensure it will not expose sensitive data.
CERT.SER04=SER04-J\: Do not allow serialization and deserialization to bypass the security manager
CERT.SER04.SCSER=Enforce 'SecurityManager' checks in methods of 'Serializable' classes
CERT.SER04.SCSER.PARAM_LEVEL-label=Maximum depth to look for 'SecurityManager' check
CERT.SER04.SCSER.SUPER_CLASS_CHECK-label=Check indirect 'SecurityManager' checks in super constructor(s)
CERT.SER04.SCSER.msg.1=Missing 'SecurityManager' check in readObject() method.
CERT.SER04.SCSER.msg.2=Missing 'SecurityManager' check in readObjectNoData() method.
CERT.SER04.SCSER.msg.3=Missing 'SecurityManager' check in writeObject() method.
CERT.SER04.SCSER.msg.4=Missing 'SecurityManager' check in constructor.
CERT.SER07=SER07-J\: Do not use the default serialized form for classes with implementation-defined invariants
CERT.SER07.RRSC=Define a "readResolve" method for all instances of Serializable types.
CERT.SER07.RRSC.CHECK_PACKAGE_PRIVATE-label=a "package-private" constructor
CERT.SER07.RRSC.CHECK_PRIVATE-label=a "private" constructor
CERT.SER07.RRSC.CHECK_PROTECTED-label=a "protected" constructor
CERT.SER07.RRSC.CHECK_PUBLIC-label=a "public" constructor
CERT.SER07.RRSC.group.0-label=Check classes with\:
CERT.SER07.RRSC.msg.1=The class ''{0}'' implements ''Serializable'' but does not define a "readResolve()" method.
CERT.SER07.RRSC.msg.2=The "readResolve()" method of the class ''{0}'' may have a return value other than the Serializable instance.
CERT.SER07.RRSC.msg.3=The "readResolve()" method of the class ''{0}'' does not have the correct signature.
CERT.SER11=SER11-J\: Prevent overwriting of externalizable objects
CERT.SER11.IRX=Avoid re-initializing fields in the 'readExternal()' method of 'Externalizable' classes
CERT.SER11.IRX.msg.1=Fields are re-initialized in 'readExternal()'.
CERT.SER12=SER12-J\: Prevent deserialization of untrusted data
CERT.SER12.VOBD=Validate objects before deserialization
CERT.SER12.VOBD.msg.1=The object read from the ObjectInputStream is not validated before deserialization
CERT.STR00=STR00-J\: Don't form strings containing partial characters from variable-width encodings
CERT.STR00.COS=Do not use String concatenation in an Internationalized environment.
CERT.STR00.COS.msg.1=Concatenating strings.
CERT.STR01=STR01-J\: Do not assume that a Java char fully represents a Unicode code point
CERT.STR01.NCUCP=Do not assume that a Java char fully represents a Unicode code point
CERT.STR01.NCUCP.METHODS_TABLE_HEADER-label=Methods to be checked
CERT.STR01.NCUCP.METHODS_TABLE_HEADER.PB__CUB__NCUCP__METHODS_TABLE_HEADER__COLUMN1-label=Incorrect method (qualified name)
CERT.STR01.NCUCP.METHODS_TABLE_HEADER.PB__CUB__NCUCP__METHODS_TABLE_HEADER__COLUMN2-label=Correct method (qualified name)
CERT.STR01.NCUCP.msg.1=The ''{0}'' method does not support all Unicode characters and should be replaced with ''{1}''
CERT.STR02=STR02-J\: Specify an appropriate locale when comparing locale-dependent data
CERT.STR02.CCL=Use the optional java.util.Locale parameter
CERT.STR02.CCL.CANDIDATES_TABLE-label=List of methods with optional java.util.Locale parameter
CERT.STR02.CCL.CANDIDATES_TABLE.INTER__CCL__CANDIDATES_TABLE__COLUMN1-label=Type
CERT.STR02.CCL.CANDIDATES_TABLE.INTER__CCL__CANDIDATES_TABLE__COLUMN2-label=Method
CERT.STR02.CCL.msg.1=The ''{0}'' method is called without the java.util.Locale parameter
CERT.STR02.CTLC=Do not call 'Character.toLowerCase(char)' or 'Character.toUpperCase(char)' in an internationalized environment.
CERT.STR02.CTLC.msg.1=Called 'Character.toLowerCase(char)'
CERT.STR02.CTLC.msg.2=Called 'Character.toUpperCase(char)'
CERT.THI00=THI00-J\: Do not invoke Thread\:\:run()
CERT.THI00.IRUN=Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'.
CERT.THI00.IRUN.CHECK_RUNNABLE-label=Check classes implementing 'java.lang.Runnable'
CERT.THI00.IRUN.msg.1=''{0}'', which extends 'java.lang.Thread', calls method 'run()'.
CERT.THI00.IRUN.msg.2=''{0}'', which implements 'java.lang.Runnable' calls method 'run()'.
CERT.THI01=THI01-J\: Do not invode ThreadGroup methods
CERT.THI01.AUTG=Do not use variables of the unsafe type 'java.lang.ThreadGroup'
CERT.THI01.AUTG.msg.1=Use of the unsafe type ''java.lang.ThreadGroup'' \: {0}.
CERT.THI02=THI02-J\: Notify all waiting threads rather than a single thread
CERT.THI02.ANF=Do not use 'notify()'; use 'notifyAll()' instead so that all waiting threads will be notified.
CERT.THI02.ANF.msg.1='notify()' is called in the method\: 'notifyThread'
CERT.THI03=THI03-J\: Always invoke wait() and await() methods inside a loop
CERT.THI03.UWIL=Call 'wait()' and 'await()' only inside a loop that tests the liveness condition
CERT.THI03.UWIL.msg.1=Called ''{0}'' without an enclosing loop to test the liveness condition.
CERT.THI05=THI05-J\: Do not use Thread\:\:stop() to terminate threads.
CERT.THI05.THRD=Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'.
CERT.THI05.THRD.msg.1=Unsafe method ''{0}'' was called.
CERT.THI05.THRD.msg.2=''{0}'' should not be used because it only exists for use with the deadlock-prone ''suspend()'' method.
CERT.THI05.THRD.msg.3=Deadlock-prone method ''{0}'' was called.
CERT.THI05.THRD.msg.4=Deprecated method ''{0}'' was called
CERT.TPS00=TPS00-J\: Use thread pools to enable graceful degradation of service during traffic bursts
CERT.TPS00.ISTART=Do not call the 'start()' method directly on Thread class instances 
CERT.TPS00.ISTART.CHECK_ONLY_IN_LOOPS-label=Ignore method calls outside of loops
CERT.TPS00.ISTART.msg.1=A call to the Thread.start() method.
CERT.TSM00=TSM00-J\: Do not override thread-safe methods with methods that are not thread-safe
CERT.TSM00.OSNS=Avoid overriding synchronized methods with non-synchronized methods.
CERT.TSM00.OSNS.IGNORE_CALL_OVERRIDDEN-label=Ignore methods which call the method they override
CERT.TSM00.OSNS.msg.1=Non-synchronized method ''{0}'' overrides a synchronized method.
CERT.TSM01=TSM01-J\: Do not let the this reference escape during object construction
CERT.TSM01.CTRE=Do not let "this" reference escape during construction.
CERT.TSM01.CTRE.msg.1=Method invocation ''{0}'' publishes an inner class in constructor ''{1}''.
CERT.TSM02=TSM02-J\: Do not use background threads during class initialization
CERT.TSM02.CSTART=Do not call the "start" method of threads from inside a constructor.
CERT.TSM02.CSTART.CHECK_TYPES-label=Check the following constructors\:
CERT.TSM02.CSTART.CHECK_TYPES.0-label=Check only classes extending Thread
CERT.TSM02.CSTART.CHECK_TYPES.1-label=Check all classes
CERT.TSM02.CSTART.msg.1="start" method called from inside constructor ''{0}''.
CERT.VNA00=VNA00-J\: Ensure visibility when accessing shared primitive variables
CERT.VNA00.LORD=Ensure that nested locks are ordered correctly
CERT.VNA00.LORD.msg.1=Lock ''{0}'' should not be wrapped by lock ''{1}''.
CERT.VNA00.MRAV=Access related Atomic variables in a synchronized block.
CERT.VNA00.MRAV.msg.1=Atomic variables\: ''{0}'' are not accessed in a synchronized block.
CERT.VNA02=VNA02-J\: Ensure that compound operations on shared variables are atomic
CERT.VNA02.MRAV=Access related Atomic variables in a synchronized block.
CERT.VNA02.MRAV.msg.1=Atomic variables\: ''{0}'' are not accessed in a synchronized block.
CERT.VNA02.SSUG=Make the get method for a field synchronized if the set method is synchronized
CERT.VNA02.SSUG.msg.1=There is a synchronized set method for the field ''{0}'', so this get method should also be synchronized.
CERT.VNA03=VNA03-J\: Do not assume that a group of calls to independently atomic methods is atomic
CERT.VNA03.MRAV=Access related Atomic variables in a synchronized block.
CERT.VNA03.MRAV.msg.1=Atomic variables\: ''{0}'' are not accessed in a synchronized block.
CERT.VNA03.SSUG=Make the get method for a field synchronized if the set method is synchronized
CERT.VNA03.SSUG.msg.1=There is a synchronized set method for the field ''{0}'', so this get method should also be synchronized.
CODSTA=Coding Conventions
CODSTA.BP=Bad Practice
CODSTA.BP.ABCL=Avoid "break" and/or "continue" with labels
CODSTA.BP.ABCL.FLAG_BREAK-label=Flag "break" with label.
CODSTA.BP.ABCL.FLAG_CONTINUE-label=Flag "continue" with label.
CODSTA.BP.ABCL.FLAG_SWITCH_B-label=Flag "break" in switch cases.
CODSTA.BP.ABCL.FLAG_SWITCH_C-label=Flag "continue" in switch cases.
CODSTA.BP.ABCL.msg.1=Avoid "break" with label\: ''{0}''.
CODSTA.BP.ABCL.msg.2=Avoid "continue" with label\: ''{0}''.
CODSTA.BP.AMRO=Avoid declaring methods that return 'Object'
CODSTA.BP.AMRO.IGNORE_OVERRIDING-label=Ignore overriding methods
CODSTA.BP.AMRO.IGNORE_RETURN_OBJECT-label=Ignore methods which only return 'Object' types
CODSTA.BP.AMRO.IGNORE_STUBS-label=Ignore method stubs
CODSTA.BP.AMRO.msg.1=Method ''{0}'' returns Object.
CODSTA.BP.ARM=Avoid using reflection methods
CODSTA.BP.ARM.CHECKED_METHODS-label=Check the following methods\:
CODSTA.BP.ARM.CHECKED_METHODS.CODSTA__BP__ARM__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
CODSTA.BP.ARM.CHECKED_METHODS.CODSTA__BP__ARM__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
CODSTA.BP.ARM.msg.1=Reflection method ''{0}'' called.
CODSTA.BP.ARN=Avoid returning "null" for arrays and certain types.
CODSTA.BP.ARN.CHECK_ARRAY-label=Check arrays
CODSTA.BP.ARN.CHECK_TYPE-label=Check specific types
CODSTA.BP.ARN.CHECK_TYPE_LIST-label=Specify types as fully qualified name
CODSTA.BP.ARN.REG_EXP-label=Ignore methods with "@return" tags matching the following regular expression\:
CODSTA.BP.ARN.REG_EXP.CODSTA__BP__ARN__REQ__COLUMN1-label=
CODSTA.BP.ARN.REG_EXP.CODSTA__BP__ARN__REQ__COLUMN2-label=
CODSTA.BP.ARN.msg.1=Returning "null" from a method with an array return type.
CODSTA.BP.ARN.msg.2=Returning "null" from a method with ''{0}'' return type.'.
CODSTA.BP.AUML=Avoid using multiple loggers, use logging levels instead
CODSTA.BP.AUML.TYPES_TO_CHECK-label=Logger Types to Check (Specify Fully Qualified Names)\:
CODSTA.BP.AUML.msg.1=Class ''{0}'' defines multiple loggers\: ''{1}''.
CODSTA.BP.AWRT=Avoid using wildcards in method return types.
CODSTA.BP.AWRT.msg.1=Return type of method ''{0}'' has a wildcard.
CODSTA.BP.BLK=Provide a '{}' block for conditional statements
CODSTA.BP.BLK.BLKDOWHL-label=Check "do-while" statements
CODSTA.BP.BLK.BLKELSE-label=Check "else" statements
CODSTA.BP.BLK.BLKFOR-label=Check "for" statements
CODSTA.BP.BLK.BLKIF-label=Check "if" statements
CODSTA.BP.BLK.BLKWHL-label=Check "while" statements
CODSTA.BP.BLK.msg.1="{0}" statement without a "'{' '}'" block.
CODSTA.BP.CMUTA=Avoid 'public' or 'protected' constructors for immutable classes
CODSTA.BP.CMUTA.msg.1=''{0}'' constructor declared.
CODSTA.BP.CONTINUE=Do not use "break" and/or "continue" statements
CODSTA.BP.CONTINUE.FLAG_BREAK-label=Flag "break" statements.
CODSTA.BP.CONTINUE.FLAG_CONTINUE-label=Flag "continue" statements.
CODSTA.BP.CONTINUE.msg.1=Avoid using "break" statement.
CODSTA.BP.CONTINUE.msg.2=Avoid using "continue" statement.
CODSTA.BP.CS=Place constants on the appropriate side of comparisons
CODSTA.BP.CS.IGNORE_NULL-label=Allow the constant "null" on either side of a comparison.
CODSTA.BP.CS.SIDE-label=Placement of constants\:
CODSTA.BP.CS.SIDE.0-label=Left-hand side
CODSTA.BP.CS.SIDE.1-label=Right-hand side
CODSTA.BP.CS.msg.1=Constants should be placed on the left side of comparisons.
CODSTA.BP.CS.msg.2=Constants should be placed on the right side of comparisons.
CODSTA.BP.DLSF=Declare loggers as "static final" fields
CODSTA.BP.DLSF.TYPES_TO_CHECK-label=Logger Types to Check (Specify Fully Qualified Names)\:
CODSTA.BP.DLSF.msg.1=The logger ''{0}'' is not "static".
CODSTA.BP.DLSF.msg.2=The logger ''{0}'' is not "final".
CODSTA.BP.DLSF.msg.3=The logger ''{0}'' is not "static final".
CODSTA.BP.DLSF.msg.4=The logger ''{0}'' is a local variable; loggers should be fields.
CODSTA.BP.EXIT=Do not call methods which terminates Java Virtual Machine
CODSTA.BP.EXIT.IGNORE_IF_COMMENT-label=Ignore if the method call is followed by a comment on the same line
CODSTA.BP.EXIT.IGNORE_IF_COMMENT_ABOVE-label=Ignore if the line above the method call contains a comment
CODSTA.BP.EXIT.IGNORE_IN_MAIN-label=Ignore in the 'main()' method
CODSTA.BP.EXIT.msg.1='System.exit()' called.
CODSTA.BP.EXIT.msg.2='Runtime.exit()' called.
CODSTA.BP.EXIT.msg.3='Runtime.halt()' called.
CODSTA.BP.FPF=Declare all formal parameters as "final"
CODSTA.BP.FPF.IGNORE_CATCH-label=Ignore parameters which are declared in a "catch" block.
CODSTA.BP.FPF.msg.1=Formal parameter ''{0}'' is not declared as final.
CODSTA.BP.FQNIC=Reference interface constants with their declaring interface names
CODSTA.BP.FQNIC.msg.1=Interface constant ''{0}'' is not referenced with its declaring interface name ''{1}''.
CODSTA.BP.HTV=Avoid using 'Hashtable' and 'Vector'
CODSTA.BP.HTV.CHECK_HASHTABLE-label=Check Hashtable
CODSTA.BP.HTV.CHECK_VECTOR-label=Check Vector
CODSTA.BP.HTV.msg.1=''{0}'' created here.
CODSTA.BP.IMPTD=Avoid or enforce usage of '*' form of import statements
CODSTA.BP.IMPTD.CHECK_SCOPE-label=Rule option\:
CODSTA.BP.IMPTD.CHECK_SCOPE.0-label=Do not use wild card when importing class.
CODSTA.BP.IMPTD.CHECK_SCOPE.1-label=Only use wild card when importing class.
CODSTA.BP.IMPTD.CHECK_SCOPE.2-label=Use customized setting
CODSTA.BP.IMPTD.SINGLE_TYPE_THRESHOLD-label=Use single type import when number of used types of same package less than 
CODSTA.BP.IMPTD.SINGLE_TYPE_THRESHOLD.CODSTA__BP__IMPTD__SINGLE_TYPE_THRESHOLD__COLUMN1-label=
CODSTA.BP.IMPTD.SINGLE_TYPE_THRESHOLD.CODSTA__BP__IMPTD__SINGLE_TYPE_THRESHOLD__COLUMN2-label=
CODSTA.BP.IMPTD.WILD_CARD_THRESHOLD-label=Use wild card import when number of imported types of same package greater than
CODSTA.BP.IMPTD.WILD_CARD_THRESHOLD.CODSTA__BP__IMPTD__WILD_CARD_THRESHOLD__COLUMN1-label=
CODSTA.BP.IMPTD.WILD_CARD_THRESHOLD.CODSTA__BP__IMPTD__WILD_CARD_THRESHOLD__COLUMN2-label=
CODSTA.BP.IMPTD.msg.1="import" with star "*", Single-type imports should be used instead.
CODSTA.BP.IMPTD.msg.2=Single-type import is used, it should be replaced by wildcard "*" import.
CODSTA.BP.IMPTD.msg.3=Less than {1} actually used from this wildcard import\: {0}, use single type imports instead.
CODSTA.BP.IMPTD.msg.4=More than {1} used from the same package\: {0}, combine into a wildcard import instead.
CODSTA.BP.NRVA=Avoid passing non-reifiable types to varargs methods.
CODSTA.BP.NRVA.msg.1=Argument to varargs method ''{0}'' is non-reifiable.
CODSTA.BP.NTX=Avoid declaring methods to throw general or unchecked Exception types
CODSTA.BP.NTX.CHECKED_EXCEPTS-label=Exception types which should not be declared to be thrown (fully qualified names)
CODSTA.BP.NTX.IGNORE_OVERRIDING-label=Ignore overriding methods.
CODSTA.BP.NTX.IGNORE_PROPAGATED-label=Ignore methods which propagate exception types of called methods.
CODSTA.BP.NTX.SKIP_JUNIT-label=Skip JUnit classes.
CODSTA.BP.NTX.SUBCLASSES-label=Check for exceptions which are subclasses of 'Error' and 'RuntimeException'.
CODSTA.BP.NTX.msg.1=Throwing explicit ''{0}'' object in ''{1}()''.
CODSTA.BP.OCMA=Ensure overloaded constructors and methods share the same accessibility
CODSTA.BP.OCMA.CHECK_CONSTRUCTORS-label=Check constructors
CODSTA.BP.OCMA.CHECK_METHODS-label=Check methods
CODSTA.BP.OCMA.msg.1=Overloaded constructors\: ''{0}'' have different accessibilities.
CODSTA.BP.OCMA.msg.2=Overloaded methods\: ''{0}'' have different accessibilities.
CODSTA.EPC=Error-Prone Coding
CODSTA.EPC.AGBPT=Avoid conversions from parameterized types to raw types
CODSTA.EPC.AGBPT.msg.1=Do not assign an expression with a parameterized type to a variable with a non-parameterized type.
CODSTA.EPC.COMT=Avoid using the conditional operator with mismatched numeric types.
CODSTA.EPC.COMT.msg.1=This conditional expression has operands of two different types\: "{0}" and "{1}".
CODSTA.EPC.IBS=Use "int" instead of "byte" or "short" and "double" instead of "float" for variable declarations.
CODSTA.EPC.IBS.IGNORE_ARRAYS-label=Ignore variables of array types
CODSTA.EPC.IBS.msg.1=Consider using the type "{0}" instead of "{1}" for this variable declaration.
CODSTA.EPC.IBS.msg.2=Consider using the type "{0}" instead of "{1}" for this parameter declaration.
CODSTA.EPC.IBS.msg.3=Consider using the type "{0}" instead of "{1}" for this field declaration.
CODSTA.EPC.MSF=Do not use too many non-"final" "static" fields
CODSTA.EPC.MSF.IGNORE_TYPES-label=Ignore the following types and their subtypes\: (Specify fully qualified names)
CODSTA.EPC.MSF.MAX_NON_FINAL_STATIC_FIELD-label=Maximum non-"final" "static" fields
CODSTA.EPC.MSF.msg.1=More than {0} "static" fields\: {1}.
CODSTA.EPC.MSF.msg.2=More than {0} "static" field\: {1}.
CODSTA.EPC.NCAC=Do not call an "abstract" method from a constructor in an "abstract" class
CODSTA.EPC.NCAC.msg.1=Called "abstract" method from constructor\: ''{0}''.
CODSTA.EPC.NCBAV=Do not perform bitwise and arithmetic operations on the same data
CODSTA.EPC.NCBAV.msg.1=The variable used in this statement is operated on using both bitwise and arithmetic operations.
CODSTA.EPC.NCE=Do not catch exception types which are too general or are unchecked exceptions.
CODSTA.EPC.NCE.GENERAL-label=Check for general exception types.
CODSTA.EPC.NCE.IGNORE_EXCEPTIONS-label=Ignore exceptions with names matching the following regular expression(s)\:
CODSTA.EPC.NCE.NUM_CHILDREN-label=Check for parent exceptions caught where number of child exceptions thrown is less than
CODSTA.EPC.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN1-label=
CODSTA.EPC.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN2-label=
CODSTA.EPC.NCE.UNCHECKED-label=Check for unchecked exception types.
CODSTA.EPC.NCE.msg.1="catch" statement directly catches the general exception type ''{0}''.
CODSTA.EPC.NCE.msg.2="catch" statement directly catches the unchecked exception type ''{0}''.
CODSTA.EPC.NCE.msg.3="catch" statement catches general parent exception type\: ''{0}''.
CODSTA.EPC.OVERLOAD=Use overloading judiciously.
CODSTA.EPC.OVERLOAD.CASTS-label=Flag overloaded methods where the same set of parameters can be passed to different overloadings using casts.
CODSTA.EPC.OVERLOAD.SAME_PARAMS-label=Flag overloaded methods if they have the same number and types of parameters.
CODSTA.EPC.OVERLOAD.WHAT_TO_CHECK-label=What to Flag
CODSTA.EPC.OVERLOAD.WHAT_TO_CHECK.0-label=Flag any overloaded methods with the same number of parameters.
CODSTA.EPC.OVERLOAD.WHAT_TO_CHECK.1-label=Flag only certain cases where two overloadings can be easily confused.
CODSTA.EPC.OVERLOAD.msg.1=Another overloaded method has the same number of parameters\: ''{0}''.
CODSTA.EPC.OVERLOAD.msg.2=Another overloaded method has the same number and types of parameters as ''{0}''.
CODSTA.EPC.OVERLOAD.msg.3=The overloaded method ''{0}'' may be easily confused with the overloading ''{1}''.
CODSTA.EPC.SCLONE=Call 'super.clone()' in all 'clone()' methods.
CODSTA.EPC.SCLONE.msg.1='clone()' method does not call 'super.clone()'
CODSTA.EPC.STA=Avoid using the same generic type variable for multiple method arguments.
CODSTA.EPC.STA.msg.1=Type argument ''{0}'' used multiple types in method ''{1}''.
CODSTA.EPC.WSIM=Do not write to static fields from non-static methods
CODSTA.EPC.WSIM.WHAT_TO_CHECK-label=Check for write accesses
CODSTA.EPC.WSIM.WHAT_TO_CHECK.0-label=Only to static fields that are declared in the same class
CODSTA.EPC.WSIM.WHAT_TO_CHECK.1-label=To any static fields
CODSTA.EPC.WSIM.msg.1=The static field ''{0}'' is written to from the instance method ''{1}''.
CODSTA.OIM=Overriding and Implementing Methods
CODSTA.OIM.OTOSM=Override 'toString()'.
CODSTA.OIM.OTOSM.CHECK_STUB-label=Flag classes which only provide a stub implementation of the 'toString()' method
CODSTA.OIM.OTOSM.WHAT_TO_FLAG-label=Classes to Flag\:
CODSTA.OIM.OTOSM.WHAT_TO_FLAG.0-label=Flag all classes which do not override the 'toString()' method
CODSTA.OIM.OTOSM.WHAT_TO_FLAG.1-label=Flag only classes for which the 'toString()' method is used
CODSTA.OIM.OTOSM.msg.1=Class ''{0}'' does not override ''toString()''.
CODSTA.OIM.OTOSM.msg.2=Class ''{0}'' overrides ''toString()'' with a stub implementation.
CODSTA.OIM.OVERRIDE=Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa
CODSTA.OIM.OVERRIDE.CHECK_INHERITED-label=Include methods inherited from "abstract" superclasses in the checking.
CODSTA.OIM.OVERRIDE.CODSTA.OVERRIDE-label=Check that 'hashCode()' is overridden whenever 'equals()' is overridden.
CODSTA.OIM.OVERRIDE.CODSTA.OVERRIDE2-label=Check that 'equals()' is overridden whenever 'hashCode()' is overridden.
CODSTA.OIM.OVERRIDE.msg.1=Class overriding ''equals(Object)'' does not override ''hashCode()''\: {0}.
CODSTA.OIM.OVERRIDE.msg.2=Class inherits overridden version of ''equals(Object)'' but does not override ''hashCode()''\: {0}.
CODSTA.OIM.OVERRIDE.msg.3=Class overriding ''hashCode()'' does not override ''equals(Object)''\: {0}.
CODSTA.OIM.OVERRIDE.msg.4=Class inherits overridden version of ''hashCode()'' but does not override ''equals(Object)''\: {0}.
CODSTA.OIM.OVOTS=Do not override 'toString()' in enum types.
CODSTA.OIM.OVOTS.msg.1=''toString()'' overridden in the enum type ''{0}''.
CODSTA.ORG=Organization
CODSTA.ORG.ASSERT=Do not use assertions in production code
CODSTA.ORG.ASSERT.PUBLIC_METHOD_ONLY-label=Check only public methods
CODSTA.ORG.ASSERT.msg.1='assert' statement should not be used in production code.
CODSTA.ORG.DINT=Do not make method calls to internal classes from non-internal classes.
CODSTA.ORG.DINT.CHECK_CSTYLE_COMMENTS-label=Check C-style comments
CODSTA.ORG.DINT.CHECK_JAVADOC_TAGS-label=Check Javadoc tags
CODSTA.ORG.DINT.CHECK_SINGLE_LINE_COMMENTS-label=Check single-line comments 
CODSTA.ORG.DINT.COMMENTS_GROUP-label=Marking internal classes in comments
CODSTA.ORG.DINT.INTERNAL_CLASS_ANNOTATIONS-label=Annotations to mark internal classes
CODSTA.ORG.DINT.INTERNAL_CLASS_ANNOTATIONS.CODSTA_ORG_DINT_INTERNAL_CLASS_ANNOTATIONS_COLUMN-label=Fully-qualified Name of Annotation
CODSTA.ORG.DINT.INTERNAL_COMMENT-label=String to mark internal classes in comments
CODSTA.ORG.DINT.INTERNAL_JAVADOC_TAG-label=Custom tag to mark internal classes in Javadoc
CODSTA.ORG.DINT.INTERNAL_PACKAGES-label=Internal packages (in regular expressions)
CODSTA.ORG.DINT.INTERNAL_PACKAGES.CODSTA_ORG_DINT_INTERNAL_PACKAGES_COLUMN1-label=
CODSTA.ORG.DINT.JAVADOC_TAGS_GROUP-label=Marking internal classes in JavaDoc
CODSTA.ORG.DINT.NO_CHECK_PACKAGES-label=Packages that should not be checked (in regular expressions)
CODSTA.ORG.DINT.NO_CHECK_PACKAGES.CODSTA_ORG_DINT_NO_CHECK_PACKAGES_COLUMN1-label=
CODSTA.ORG.DINT.msg.1=Method call ''{0}'' can not be completed, class ''{1}'' is an internal class.
CODSTA.ORG.DINT.msg.2=Can not declare variable ''{0}'' as class ''{1}'', it is an internal class.
CODSTA.ORG.DINT.msg.3=Can not reference class ''{0}'', it is an internal class.
CODSTA.ORG.DINT.msg.4=The ''{0}'' class extends or implements the following class or interface which is internal \: ''{1}''
CODSTA.ORG.FO=Order class elements appropriately
CODSTA.ORG.FO.ACCESSIBILITY_TAB-label=
CODSTA.ORG.FO.ACCESSIBILITY_TAB.CODSTA__ORG__FO__ACCESSIBILITY_TAB__COLUMN1-label=order
CODSTA.ORG.FO.FINAL_NON_FINAL_TAB-label=
CODSTA.ORG.FO.FINAL_NON_FINAL_TAB.CODSTA__ORG__FO__FINAL_NON_FINAL_TAB__COLUMN1-label=order
CODSTA.ORG.FO.IGNORE_MAIN-label=Ignore 'main' method.
CODSTA.ORG.FO.LINK_TO_PREF-label=Refer to sorting order preference in preferences page
CODSTA.ORG.FO.MEMBER_TYPE_TAB-label=
CODSTA.ORG.FO.MEMBER_TYPE_TAB.CODSTA__ORG__FO__MEMBER_TYPE_TAB__COLUMN1-label=check
CODSTA.ORG.FO.MEMBER_TYPE_TAB.CODSTA__ORG__FO__MEMBER_TYPE_TAB__COLUMN2-label=order
CODSTA.ORG.FO.MORE_THAN_ONE-label=Flag multiple errors if there is more than one violation.
CODSTA.ORG.FO.PRIORITY_TAB-label=
CODSTA.ORG.FO.PRIORITY_TAB.CODSTA__ORG__FO__PRIORITY_TAB__COLUMN1-label=ignore
CODSTA.ORG.FO.PRIORITY_TAB.CODSTA__ORG__FO__PRIORITY_TAB__COLUMN2-label=order
CODSTA.ORG.FO.msg.1=Elements in ''{0}'' not ordered appropriately{1}\: {2} at line {3} should be placed before {4} at line {5}.
CODSTA.ORG.FO.msg.2=Elements in ''{0}'' not ordered appropriately{1}\: {2} ''{3}'' at line {4} should be placed before {5} at line {6}.
CODSTA.ORG.FO.msg.3=Elements in ''{0}'' not ordered appropriately{1}\: {2} at line {3} should be placed before {4} ''{5}'' at line {6}.
CODSTA.ORG.FO.msg.4=Elements in ''{0}'' not ordered appropriately{1}\: {2} ''{3}'' at line {4} should be placed before {5} ''{6}'' at line {7}.
CODSTA.ORG.FO.tab.ACCESSIBILITY_TAB-label=Accessibility sorting order
CODSTA.ORG.FO.tab.FINAL_NON_FINAL_TAB-label=Final/Non-final sorting order
CODSTA.ORG.FO.tab.MEMBER_TYPE_TAB-label=Member type sorting order
CODSTA.ORG.FO.tab.PRIORITY_TAB-label=Sorting priority
CODSTA.ORG.IMP=Avoid importing specific classes or packages
CODSTA.ORG.IMP.TABLE_HEADER-label=List of import restrictions\:
CODSTA.ORG.IMP.TABLE_HEADER.CODSTA__ORG__IMP__TABLE_HEADER__COLUMN1-label=Allow
CODSTA.ORG.IMP.TABLE_HEADER.CODSTA__ORG__IMP__TABLE_HEADER__COLUMN2-label=Package
CODSTA.ORG.IMP.TABLE_HEADER.CODSTA__ORG__IMP__TABLE_HEADER__COLUMN3-label=Import declaration fully qualified name (RegExp)
CODSTA.ORG.IMP.msg.1=Disallowed import ''{0}''.
CODSTA.ORG.OGM=Organize methods by name
CODSTA.ORG.OGM.msg.1=Same-named members ''{0}()'' are not grouped together.
CODSTA.ORG.ORCU=Order compilation unit elements appropriately
CODSTA.ORG.ORCU.msg.1=The file header should be placed before the "package" statement.
CODSTA.ORG.ORCU.msg.2=The "package" statement should be placed after the file header.
CODSTA.ORG.ORCU.msg.3=The "import" statements should be placed after the file header.
CODSTA.ORG.ORCU.msg.4=A "public" type should be placed before a non-"public" type\: {0}.
CODSTA.ORG.ORCU.msg.5=A "public" type should be placed before a non-"public" type\: {0}.
CODSTA.ORG.ORCU.msg.6=Non-"public" types should be placed at the end of the source file.
CODSTA.ORG.ORFIM=Place 'finalize()' methods between "public" and "protected" methods
CODSTA.ORG.ORFIM.msg.1="finalize()" method should be placed before "protected" methods.
CODSTA.ORG.ORIMP=Present "import" statements in alphabetical order
CODSTA.ORG.ORIMP.LOWER_CASE_FIRST-label=Lower case letters should come before upper case letters
CODSTA.ORG.ORIMP.msg.1="import" not presented in alphabetical order\: {0}.
CODSTA.ORG.ORIMP.msg.2="import" not presented in sorting order from eclipse preference settings\: {0}.
CODSTA.ORG.PML=Place the 'main()' method last
CODSTA.ORG.PML.msg.1='main()' is not the last method defined.
CODSTA.ORG.TODOJAVA=Ensure that comments do not contain task tags.
CODSTA.ORG.TODOJAVA.TABLE_HEADER-label=List of task tags\:
CODSTA.ORG.TODOJAVA.TABLE_HEADER.CODSTA__ORG__TODOJAVA__TABLE_HEADER__COLUMN1-label=Is reg expr
CODSTA.ORG.TODOJAVA.TABLE_HEADER.CODSTA__ORG__TODOJAVA__TABLE_HEADER__COLUMN2-label=Value
CODSTA.ORG.TODOJAVA.msg.1=The code contains a "{0}" comment\: "{1}".
CODSTA.ORG.TODOJAVA.msg.2=The code contains a comment matching "{0}" (regular expression)\: "{1}".
CODSTA.POD=Poor Object Oriented Design
CODSTA.POD.ACIAP=Avoid constant interface anti-pattern
CODSTA.POD.ACIAP.msg.1=Interface ''{0}'' contains only fields.
CODSTA.POD.ASM=Avoid "static" methods when the declaring class is a parameter type.
CODSTA.POD.ASM.msg.1=The method ''{0}'' need not be declared "static" because it has a parameter of type ''{1}''.
CODSTA.POD.AUVT=Use less specific types to accomplish loose coupling
CODSTA.POD.AUVT.CHECK_CAUGHT_EXCEPTIONS-label=caught exceptions
CODSTA.POD.AUVT.CHECK_EXTRA_CLASS-label=Extra classes/interfaces to be promoted to\:
CODSTA.POD.AUVT.CHECK_FIELDS-label=private fields
CODSTA.POD.AUVT.CHECK_IMPLEMENT_INTERFACE-label=Only check types which implement interfaces
CODSTA.POD.AUVT.CHECK_INPUTSTREAM-label=java.io.InputStream
CODSTA.POD.AUVT.CHECK_LIST-label=java.util.List
CODSTA.POD.AUVT.CHECK_LOCAL_VARIABLES-label=local variables
CODSTA.POD.AUVT.CHECK_MAP-label=java.util.Map
CODSTA.POD.AUVT.CHECK_OUTPUTSTREAM-label=java.io.OutputStream
CODSTA.POD.AUVT.CHECK_PARAMETERS-label=parameters
CODSTA.POD.AUVT.CHECK_READER-label=java.io.Reader
CODSTA.POD.AUVT.CHECK_SET-label=java.util.Set
CODSTA.POD.AUVT.CHECK_TYPES-label=Types to check\:
CODSTA.POD.AUVT.CHECK_TYPES.0-label=Consider all types
CODSTA.POD.AUVT.CHECK_TYPES.1-label=Limit analysis to\:
CODSTA.POD.AUVT.CHECK_WRITER-label=java.io.Writer
CODSTA.POD.AUVT.IGNORE_CLASS_LIST-label=Classes/interfaces to ignore\:
CODSTA.POD.AUVT.group.0-label=Variables to check\:
CODSTA.POD.AUVT.msg.1=''{0}'' is declared as ''{1}'' but should be declared as one of the following types\: {2}.
CODSTA.POD.AUVT.tab.BASIC_TAB-label=Basic settings
CODSTA.POD.AUVT.tab.EXCLUDED_TAB-label=Excluded types
CODSTA.POD.AUVT.tab.TYPES_TAB-label=Types
CODSTA.POD.CHAIN=Use chain constructors in classes with multiple constructors.
CODSTA.POD.CHAIN.IGNORE_TYPES-label=Ignore subtypes of the following types (Specify fully qualified type names)\:
CODSTA.POD.CHAIN.msg.1={0} has multiple constructors and should use chain constructors.
CODSTA.POD.CIOC=Avoid chains of "instanceof" comparisons.
CODSTA.POD.CIOC.COMMON_SUPERCLASS-label=Only flag a violation when the types in the comparisons have a common supertype
CODSTA.POD.CIOC.MAX_INSTANCE_OF-label=Maximum number of "instanceof" comparisons allowed in an "if-else if-...-else" statement
CODSTA.POD.CIOC.msg.1=This "if" statement uses a chain of "instanceof" comparisons to determine which action to take.
CODSTA.POD.IASM=Do not access static members indirectly
CODSTA.POD.IASM.msg.1=Indirect access to static member ''{0}'' of the type ''{1}''.
CODSTA.POD.ISACF=Do not define constants in interfaces.
CODSTA.POD.ISACF.msg.1=Constant declared in an "interface"\: ''{0}''.
CODSTA.POD.SMC=Avoid "switch" statements with too many or too few "case" statements
CODSTA.POD.SMC.MAX_CASES-label=Maximum "switch" cases
CODSTA.POD.SMC.MIN_CASES-label=Minimum "switch" cases
CODSTA.POD.SMC.msg.1="switch" statement with too few cases\: {0}.
CODSTA.POD.SMC.msg.2="switch" statement with too many cases\: {0}.
CODSTA.POD.UET=Use "enum" types instead of a series of "static final" constants.
CODSTA.POD.UET.CONSECUTIVE_CONSTS-label=Minimum Number of Consecutive Constants to be Flagged
CODSTA.POD.UET.msg.1=The constant ''{0}'' and the {1} constants that follow can possibly be refactored into an "enum" type.
CODSTA.POD.UPT=Enforce or avoid the use of parameterized types
CODSTA.POD.UPT.CHECKED_LIST-label=Additional types to check\: (specify fully qualified name)
CODSTA.POD.UPT.CHECK_COLLECTIONS-label=Check Collections
CODSTA.POD.UPT.CHECK_FIELDS-label=Check fields
CODSTA.POD.UPT.CHECK_ITERATORS-label=Check Iterators
CODSTA.POD.UPT.CHECK_LOCAL_VARIABLES-label=Check local variables
CODSTA.POD.UPT.CHECK_MAPS-label=Check Maps
CODSTA.POD.UPT.CHECK_METHOD_RETURN_TYPES-label=Check method return types
CODSTA.POD.UPT.CHECK_PARAMETERS-label=Check parameters
CODSTA.POD.UPT.ENFORCE_AVOID-label=Enforce or avoid?
CODSTA.POD.UPT.ENFORCE_AVOID.0-label=Enforce
CODSTA.POD.UPT.ENFORCE_AVOID.1-label=Avoid
CODSTA.POD.UPT.group.0-label=Types to check
CODSTA.POD.UPT.group.1-label=Locations to check
CODSTA.POD.UPT.msg.1=Consider changing the raw type ''{0}'' to a parameterized type.
CODSTA.POD.UPT.msg.2=Consider changing the parameterized type ''{0}'' to the raw type ''{1}''.
CODSTA.READ=Readability
CODSTA.READ.ABUB=Do not rely on automatic boxing and unboxing of primitive types.
CODSTA.READ.ABUB.msg.1=The primitive type ''{0}'' will require automatic boxing here.
CODSTA.READ.ABUB.msg.2=The non-primitive type ''{0}'' will require automatic unboxing here.
CODSTA.READ.ABUB.msg.3=The primitive type ''{0}'' may be assigned null here.
CODSTA.READ.ACCS=Do not use complicated conditional expressions in control structures
CODSTA.READ.ACCS.CHECK_DO-label=Check "do" statements
CODSTA.READ.ACCS.CHECK_FOR-label=Check "for" statements
CODSTA.READ.ACCS.CHECK_IF-label=Check "if" statements
CODSTA.READ.ACCS.CHECK_WHILE-label=Check "while" statements
CODSTA.READ.ACCS.NUM_INPUT-label=Maximum number of operators
CODSTA.READ.ACCS.msg.1=More than {0} conditional expressions in "{1}" statement.
CODSTA.READ.AEFS=Avoid or enforce usage of enhanced "for" loops.
CODSTA.READ.AEFS.AVOID_OR_ENFORCE-label=Avoid or enforce usage of enhanced "for" loops
CODSTA.READ.AEFS.AVOID_OR_ENFORCE.0-label=Avoid enhanced "for" loops
CODSTA.READ.AEFS.AVOID_OR_ENFORCE.1-label=Enforce enhanced "for" loops
CODSTA.READ.AEFS.CHECK_ARRAY-label=Check array loops
CODSTA.READ.AEFS.CHECK_COLLECTION-label=Check Collection loops
CODSTA.READ.AEFS.CHECK_ITERATOR-label=Check Iterator loops
CODSTA.READ.AEFS.CHECK_RAW-label=Check loops over raw types
CODSTA.READ.AEFS.msg.1=Enhanced "for" loop used.
CODSTA.READ.AEFS.msg.2=This loop may be converted to an enhanced "for" loop.
CODSTA.READ.AFD=Access and set fields directly in the declaring type instead of using getter and setter methods.
CODSTA.READ.AFD.msg.1=Access the field ''{0}'' directly instead of using the method ''{1}''.
CODSTA.READ.AFD.msg.2=Set the field ''{0}'' directly instead of using the method ''{1}''.
CODSTA.READ.AFQN=Do not use fully qualified type names.
CODSTA.READ.AFQN.IGNORE_JAVADOC-label=Ignore qualified names in Javadoc
CODSTA.READ.AFQN.msg.1=The fully qualified type name ''{0}'' is used here.
CODSTA.READ.AIC=Avoid anonymous inner classes
CODSTA.READ.AIC.IGNORE_METHODS-label=Ignore classes containing the following methods\:
CODSTA.READ.AIC.IGNORE_METHODS_LIST-label=Input method definition
CODSTA.READ.AIC.IGNORE_NUM-label=Ignore classes with number of methods less than
CODSTA.READ.AIC.IGNORE_NUM.CODSTA__READ__AIC__IGNORE_NUM__COLUMN1-label=
CODSTA.READ.AIC.IGNORE_NUM.CODSTA__READ__AIC__IGNORE_NUM__COLUMN2-label=
CODSTA.READ.AIC.msg.1=Anonymous class\: ''{0}''.
CODSTA.READ.ANL=Avoid using negative logic in if-else statement
CODSTA.READ.ANL.IGNORE_SPECIAL_CASES-label=Ignore special cases (see rule description for definition)
CODSTA.READ.ANL.msg.1=Negative logic is used in if-else logic, revising the logic is suggested.
CODSTA.READ.ASIS=Avoid static import statements
CODSTA.READ.ASIS.ALLOWED_CLASSES-label=Classes/interfaces to allow static imports from (Specify fully qualified names using regular expressions)\:
CODSTA.READ.ASIS.CHECK_EXPLICIT-label=Check explicit static imports
CODSTA.READ.ASIS.CHECK_EXPLICIT_NUM-label=Only check imports from the same type if there are more than
CODSTA.READ.ASIS.CHECK_EXPLICIT_NUM.CODSTA__READ__ASIS__CHECK_EXPLICIT_NUM__COLUMN1-label=
CODSTA.READ.ASIS.CHECK_EXPLICIT_NUM.CODSTA__READ__ASIS__CHECK_EXPLICIT_NUM__COLUMN2-label=
CODSTA.READ.ASIS.CHECK_WILDCARD-label=Check wildcard static imports
CODSTA.READ.ASIS.msg.1=This static import should be eliminated.
CODSTA.READ.ASIS.msg.2=Multiple static imports from type ''{0}''.
CODSTA.READ.AUTS=Avoid unnecessary calls to 'toString()'.
CODSTA.READ.AUTS.msg.1=Unnecessary call to "toString()".
CODSTA.READ.CCB=Comment the ends of control structures.
CODSTA.READ.CCB.DO_COMMENT-label=Comment for end of "do" statement
CODSTA.READ.CCB.DO_COMMENT.CODSTA__READ__CCB__DO_COMMENT__COLUMN1-label=
CODSTA.READ.CCB.DO_COMMENT.CODSTA__READ__CCB__DO_COMMENT__COLUMN2-label=
CODSTA.READ.CCB.ELSE_COMMENT-label=Comment for end of "else" block
CODSTA.READ.CCB.ELSE_COMMENT.CODSTA__READ__CCB__ELSE_COMMENT__COLUMN1-label=
CODSTA.READ.CCB.ELSE_COMMENT.CODSTA__READ__CCB__ELSE_COMMENT__COLUMN2-label=
CODSTA.READ.CCB.FOR_COMMENT-label=Comment for end of "for" block
CODSTA.READ.CCB.FOR_COMMENT.CODSTA__READ__CCB__FOR_COMMENT__COLUMN1-label=
CODSTA.READ.CCB.FOR_COMMENT.CODSTA__READ__CCB__FOR_COMMENT__COLUMN2-label=
CODSTA.READ.CCB.IF_COMMENT-label=Comment for end of "if" block
CODSTA.READ.CCB.IF_COMMENT.CODSTA__READ__CCB__IF_COMMENT__COLUMN1-label=
CODSTA.READ.CCB.IF_COMMENT.CODSTA__READ__CCB__IF_COMMENT__COLUMN2-label=
CODSTA.READ.CCB.SWITCH_COMMENT-label=Comment for end of "switch" block
CODSTA.READ.CCB.SWITCH_COMMENT.CODSTA__READ__CCB__SWITCH_COMMENT__COLUMN1-label=
CODSTA.READ.CCB.SWITCH_COMMENT.CODSTA__READ__CCB__SWITCH_COMMENT__COLUMN2-label=
CODSTA.READ.CCB.WHILE_COMMENT-label=Comment for end of "while" block
CODSTA.READ.CCB.WHILE_COMMENT.CODSTA__READ__CCB__WHILE_COMMENT__COLUMN1-label=
CODSTA.READ.CCB.WHILE_COMMENT.CODSTA__READ__CCB__WHILE_COMMENT__COLUMN2-label=
CODSTA.READ.CCB.group.0-label=End-of-Line Comments (in Regular Expressions)
CODSTA.READ.CCB.msg.1=This close brace does not have an end-of-line comment to indicate which statement it goes with.
CODSTA.READ.CCB.msg.2=This end-of-line comment does not match the user-specified regular expression ''{0}''.
CODSTA.READ.CCB.msg.3=This semicolon does not have an end-of-line comment to indicate which "do" statement it goes with.
CODSTA.READ.CEB=Comment empty blocks.
CODSTA.READ.CEB.IGNORE_IMPLEMENTING-label=Ignore the bodies of implementations of interface methods
CODSTA.READ.CEB.IGNORE_NON_PRIVATE_CONST-label=Ignore the bodies of non-"public" constructors
CODSTA.READ.CEB.IGNORE_OVERRIDING-label=Ignore the bodies of overriding methods
CODSTA.READ.CEB.msg.1=This block should contain a comment explaining why it is empty.
CODSTA.READ.CID=Avoid using increment or decrement operators in nested expressions.
CODSTA.READ.CID.msg.1=Increment operator is embedded in another expression.
CODSTA.READ.CID.msg.2=Decrement operator is embedded in another expression.
CODSTA.READ.CLV=Comment local variables.
CODSTA.READ.CLV.EXCLUDED_NAMES-label=Excluded Variable Names (Specify using a regular expression)
CODSTA.READ.CLV.EXCLUDED_NAMES.CODSTA__READ__CLV__EXCLUDED_NAMES__COLUMN1-label=
CODSTA.READ.CLV.EXCLUDED_NAMES.CODSTA__READ__CLV__EXCLUDED_NAMES__COLUMN2-label=
CODSTA.READ.CLV.EXCLUDED_TYPES-label=Excluded Variable Types (Specify fully qualified names)
CODSTA.READ.CLV.POSITION-label=Comment Positioning
CODSTA.READ.CLV.POSITION.0-label=Before declaration
CODSTA.READ.CLV.POSITION.1-label=After declaration
CODSTA.READ.CLV.msg.1=The declaration of the local variable ''{0}'' is not followed by a comment.
CODSTA.READ.CLV.msg.2=The declaration of the local variable ''{0}'' is not preceded by a comment.
CODSTA.READ.CTA=Always call 'Collection.toArray()' with an empty constant array argument.
CODSTA.READ.CTA.IGNORE_NEW_ARRAY-label=Ignore new empty array creation
CODSTA.READ.CTA.msg.1=Use empty array constant for "{0}.toArray()" call.
CODSTA.READ.CX=Enforce or avoid usage of conditional operators
CODSTA.READ.CX.CHECK_ASSIGNMENT-label=Use conditional operator instead of 'if (cond) a \= b; else a \= c;'
CODSTA.READ.CX.CHECK_RETURN-label=Use conditional operator instead of 'if (cond) return a; else return b;'
CODSTA.READ.CX.SCOPE-label=Option\:
CODSTA.READ.CX.SCOPE.0-label=Enforce usage of conditional operators
CODSTA.READ.CX.SCOPE.1-label=Avoid usage of conditional operators
CODSTA.READ.CX.msg.1="if-else" statement could be simplied by using the conditional operator (? \:).
CODSTA.READ.CX.msg.2=Conditional operator (? \:) is used.
CODSTA.READ.DUN=Do not use too many negation operators '\!' in a single method
CODSTA.READ.DUN.MAX_NEGATION_OP-label=Maximum negation operator in method
CODSTA.READ.DUN.msg.1=Method ''{0}()'' uses the negation operator too frequently\: {1}.
CODSTA.READ.DVCU=Declare variables as close as possible to where they are used
CODSTA.READ.DVCU.msg.1=Variable ''{0}'' is not declared in this "{1}" block.
CODSTA.READ.DVCU.msg.2=Variable ''{0}'' is not declared in the initializer of this "for" statement.
CODSTA.READ.DVCU.msg.3=Variable ''{0}'' is not used until later.
CODSTA.READ.ECSC=Explicitly call one of the superclass' constructors from all constructors
CODSTA.READ.ECSC.IGNORE_ONLY_NO_ARG-label=ignore superclasses with only a no argument constructor
CODSTA.READ.ECSC.msg.1=This constructor for the class "{0}" does not explicitly call a constructor of the superclass.
CODSTA.READ.FF=Declare "private" constant fields "final".
CODSTA.READ.FF.IGNORE_MUTABLE-label=Ignore fields with mutable types
CODSTA.READ.FF.msg.1=Constant value should be declared "final"\: {0}.
CODSTA.READ.FLV=Declare constant local variables "final".
CODSTA.READ.FLV.IGNORE_MUTABLE-label=Ignore mutable types
CODSTA.READ.FLV.TYPES_TO_CHECK-label=Types of variables to check
CODSTA.READ.FLV.TYPES_TO_CHECK.0-label=Primitive types only
CODSTA.READ.FLV.TYPES_TO_CHECK.1-label=All types
CODSTA.READ.FLV.msg.1=Local constant not declared "final"\: {0}.
CODSTA.READ.HBE=Avoid using Hexadecimal binary exponents
CODSTA.READ.HBE.msg.1=Hexadecimal binary exponent\: ''{0}''.
CODSTA.READ.LONG=Avoid having a lower-case "l" or the number "1" at the end of a "long" integer constant
CODSTA.READ.LONG.FLAG_END_IN_1-label=Flag constants which end in the number "1" where a "long" integer is expected
CODSTA.READ.LONG.FLAG_LOWER_CASE-label=Flag "long" integer constants which end in a lower case ''l''
CODSTA.READ.LONG.msg.1=Lowercase ''l'' in a "long" constant\: {0}.
CODSTA.READ.LONG.msg.2="Long" constant ends in the number "1"\: {0}.
CODSTA.READ.MTBS=Minimize "try" block size
CODSTA.READ.MTBS.IGNORE_COND-label=Ignore "try" blocks with exceptions thrown inside conditionals
CODSTA.READ.MTBS.IGNORE_LOOP-label=Ignore "try" blocks with exceptions thrown inside loop bodies
CODSTA.READ.MTBS.MIN_STATEMENTS-label=Ignore "try" blocks with number of statements less than
CODSTA.READ.MTBS.MIN_STATEMENTS.CODSTA__READ__MTBS__MIN_STATEMENTS__COLUMN1-label=
CODSTA.READ.MTBS.MIN_STATEMENTS.CODSTA__READ__MTBS__MIN_STATEMENTS__COLUMN2-label=
CODSTA.READ.MTBS.PERCENT_THROW-label=Flag "try" blocks where percent of statements throwing exceptions is less than
CODSTA.READ.MTBS.msg.1="try" block contains excess code which does not throw exceptions.
CODSTA.READ.MVOS=Do not declare multiple variables in one statement
CODSTA.READ.MVOS.msg.1=Multiple variables are declared in a single declaration statement\: ''{0}''.
CODSTA.READ.NEA=Avoid nested assignments or assignments embedded in other expressions
CODSTA.READ.NEA.CHECK_EMBEDDED-label=Check assignments embedded in other expression statements
CODSTA.READ.NEA.CHECK_NESTED-label=Check nested assignments
CODSTA.READ.NEA.CHECK_NON_SIMPLE-label=Check assignments embedded in non-simple statements
CODSTA.READ.NEA.msg.1=Avoid nested assignment.
CODSTA.READ.NEA.msg.2=Avoid assignment embedded in other expression statements.
CODSTA.READ.NEA.msg.3=Avoid assignment embedded in non-simple statements.
CODSTA.READ.NMUC=Declare never-modified collections as "unmodifiable" for clarity.
CODSTA.READ.NMUC.msg.1=Collection ''{0}'' is never modified after initialization, declare as "unmodifiable".
CODSTA.READ.PCIF=Declare "for" loops with an initializer, conditional, and updater statements
CODSTA.READ.PCIF.CHECK_CONDITIONAL-label=Check conditional
CODSTA.READ.PCIF.CHECK_INITIALIZER-label=Check initializer
CODSTA.READ.PCIF.CHECK_UPDATER-label=Check updater
CODSTA.READ.PCIF.IGNORE_ENUMERATION-label=Ignore "for" loops with 'Enumeration' or 'Iterator' method "has..." as condition.
CODSTA.READ.PCIF.IGNORE_INFINITE_LOOP-label=Ignore infinite "for" loops in form of 'for (;;)'
CODSTA.READ.PCIF.msg.1=Missing conditional expression in "for" loop.
CODSTA.READ.PCIF.msg.2=Missing updater expression in "for" loop.
CODSTA.READ.PCIF.msg.3=Missing initializer expression in "for" loop.
CODSTA.READ.PDBB=Put declarations only at the beginning of blocks
CODSTA.READ.PDBB.msg.1=Variable ''{0}'' is not declared at the beginning of the block.
CODSTA.READ.PFL=Enforce use of "for" or "while" loops
CODSTA.READ.PFL.CHECK_FOR_WHILE-label=What to enforce
CODSTA.READ.PFL.CHECK_FOR_WHILE.0-label=Enforce "for" loops
CODSTA.READ.PFL.CHECK_FOR_WHILE.1-label=Enforce "while" loops
CODSTA.READ.PFL.IGNORE_ITERATOR-label=Ignore "while" loops with an 'Iterator.hasNext()' condition
CODSTA.READ.PFL.IGNORE_UPDATER-label=Ignore "for" loops with an updater
CODSTA.READ.PFL.msg.1=Consider using a "for" loop here.
CODSTA.READ.PFL.msg.2=Consider using a "while" loop here.
CODSTA.READ.SIE=Use 'isEmpty()' for Collections and Maps instead of comparing 'size()' to 0
CODSTA.READ.SIE.msg.1=Consider using ''{0}.isEmpty()'' here.
CODSTA.READ.SIE.msg.2=Consider using ''\!{0}.isEmpty()'' here.
CODSTA.READ.UATS=Avoid or enforce the use of "this" and "super" expressions
CODSTA.READ.UATS.CHECK_SUPER-label=Usage of "super"
CODSTA.READ.UATS.CHECK_THIS-label=Usage of "this"
CODSTA.READ.UATS.ENFORCE_OR_AVOID-label=Avoid or Enforce
CODSTA.READ.UATS.ENFORCE_OR_AVOID.0-label=Avoid
CODSTA.READ.UATS.ENFORCE_OR_AVOID.1-label=Enforce
CODSTA.READ.UATS.group.0-label=What to Check
CODSTA.READ.UATS.group.1-label=Rule
CODSTA.READ.UATS.msg.1=Avoid using unnecessary "{0}" expressions.
CODSTA.READ.UATS.msg.2="{0}" expression is needed.
CODSTA.READ.UBL=Avoid create integer values from binary notation using Integer.parseInt() methods
CODSTA.READ.UBL.CHECK_ONLY_LITERALS-label=Show errors only when first parameter in methods Integer.parseInt() is string literals
CODSTA.READ.UBL.msg.1=Use binary literals instead of assignment ''{0}''.
CODSTA.READ.UBL.msg.2=Change ''{0}'' statement to binary literals if it is possible.
CODSTA.READ.ULIT=Use underscore characters (_) in numerical literal
CODSTA.READ.ULIT.CHECK_ONLY_INITIALIZE-label=Check only initialized variables
CODSTA.READ.ULIT.DENSITY-label=Density
CODSTA.READ.ULIT.MINIMAL_VALUE-label=Minimal value
CODSTA.READ.ULIT.msg.1=Missing underscore characters (_) in ''{0}'' numeric literal.
CODSTA.READ.ULIT.msg.2=Wrong placed underscore characters (_) in ''{0}'' numeric literal.
CODSTA.READ.ULIT.msg.3=Avoid use underscore characters (_) for numeric literal with value less than ''{0}''.
CODSTA.READ.USN=Avoid literal constants
CODSTA.READ.USN.IGNORE_ANNOTATION-label=Ignore literal constants in annotations
CODSTA.READ.USN.IGNORE_CASE-label=Ignore literal constants in "switch" cases
CODSTA.READ.USN.IGNORE_FINAL-label=Ignore non-"static" "final" variables
CODSTA.READ.USN.IGNORE_METHODS-description=Ignore literal constants in the following types and/or methods (in form of &lt;regular expression for fully qualified type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
CODSTA.READ.USN.IGNORE_METHODS-label=Ignore literal constants in the following types and/or methods\:
CODSTA.READ.USN.PASSED_TO_METHODS-label=Ignore literal constants passed to the following methods\:
CODSTA.READ.USN.PASSED_TO_METHODS.CODSTA__READ__USN__PASSED_TO_METHODS__COLUMN1-label=Type (in regular expression)
CODSTA.READ.USN.PASSED_TO_METHODS.CODSTA__READ__USN__PASSED_TO_METHODS__COLUMN2-label=Method (in regular expression)
CODSTA.READ.USN.REGULAR_EXPRESSION-label=Literal constants allowed (in regular expression)\:
CODSTA.READ.USN.msg.1=Literal constant is used\: {0}.
CODSTA.READ.USN.tab.BASIC_TAB-label=Basic Settings
CODSTA.READ.USN.tab.IGNORED_PARAMS-label=Ignored Arguments
CODSTA.READ.USN.tab.IGNORED_TAB-label=Ignored Types/Methods
CODSTA.READ.VDT=Do not declare multiple variables of different types in one statement
CODSTA.READ.VDT.msg.1=Multiple variables of different types are declared in one statement\: ''{0}''.
CODSTA.READ.VIFS=Limit the number of initialization and update statements in "for" loops
CODSTA.READ.VIFS.NUM_EXPRS-label=Maximum number of expressions to allow in the initialization and update\:
CODSTA.READ.VIFS.msg.1=More than {0} initialization statements in this "for" loop.
CODSTA.READ.VIFS.msg.2=More than {0} update statements in this "for" loop.
CWE=Common Weakness Enumeration 4.10
CWE.1004=CWE-1004\: Sensitive Cookie Without 'HttpOnly' Flag
CWE.1004.SCHTTP=Mark cookies as HttpOnly
CWE.1004.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
CWE.1004.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
CWE.103=CWE-103\: Struts\: Incomplete validate() Method Definition
CWE.103.CSVFV=Always call 'super.validate()' from validation methods in 'ActionForm' classes.
CWE.103.CSVFV.msg.1=This validation method does not call 'super.validate()'.
CWE.104=CWE-104\: Struts\: Form Bean Does Not Extend Validation Class
CWE.104.AEAF=Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'.
CWE.104.AEAF.msg.1=Consider extending 'DynaValidatorForm' or 'DynaValidatorActionForm'
CWE.104.AEAF.msg.2=Consider extending 'ValidatorForm' or 'ValidatorActionForm'
CWE.1046=CWE-1046\: Creation of Immutable Text Using String Concatenation
CWE.1046.USB=Use 'StringBuffer' instead of 'String' when concatenating strings.
CWE.1046.USB.WHAT_TO_CHECK-label=What to Flag
CWE.1046.USB.WHAT_TO_CHECK.0-label=Only cases where the same String may be appended to more than once
CWE.1046.USB.WHAT_TO_CHECK.1-label=Any case where a String is appended to
CWE.1046.USB.msg.1=String concatenation is performed here on the String "{0}".
CWE.1046.USB.msg.2=''{0}'' appends a String concatenation.
CWE.1046.USB.msg.3=''{0}'' initialized to a String concatenation.
CWE.1051=CWE-1051\: Initialization with Hard-Coded Network Resource Configuration Data
CWE.1051.HCNA=Do not hard-code IP addresses and port numbers.
CWE.1051.HCNA.IP-label=Do not hard-code IP addresses
CWE.1051.HCNA.PORT-label=Do not hard-code port numbers
CWE.1051.HCNA.msg.1=Hard-coded IP address ''{0}''.
CWE.1051.HCNA.msg.2=Hard-coded port number ''{0}''.
CWE.1066=CWE-1066\: Missing Serialization Control Element
CWE.1066.OROM=Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes.
CWE.1066.OROM.CHECK_FOR_READ-label=Check that the 'readObject()' method is implemented in all serializable classes.
CWE.1066.OROM.CHECK_FOR_WRITE-label=Check that the 'writeObject()' method is implemented in all serializable classes.
CWE.1066.OROM.IGNORE_TYPES-label=Ignore types extending or implementing the following types (Specify fully qualified names)\:
CWE.1066.OROM.MUST_BE_FINAL-label=Make sure the 'readObject()' method is 'final'.
CWE.1066.OROM.msg.1=Serializable class ''{0}'' does not implement 'readObject()'.
CWE.1066.OROM.msg.2=Serializable class ''{0}'' implements 'readObject()', but this method is not 'final'.
CWE.1066.OROM.msg.3=Serializable class ''{0}'' does not implement 'writeObject()'.
CWE.1069=CWE-1069\: Empty Exception Block
CWE.1069.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
CWE.1069.AECB.CHECK_CATCH-label=Check "catch" block.
CWE.1069.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
CWE.1069.AECB.CHECK_FINALLY-label=Check "finally" block.
CWE.1069.AECB.CHECK_TRY-label=Check "try" block.
CWE.1069.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
CWE.1069.AECB.msg.1="try" block has an empty body.
CWE.1069.AECB.msg.2="catch" block has an empty body.
CWE.1069.AECB.msg.3="finally" block has an empty body.
CWE.1075=CWE-1075\: Unconditional Control Flow Transfer outside of Switch Block
CWE.1075.ABCL=Avoid "break" and/or "continue" with labels
CWE.1075.ABCL.FLAG_BREAK-label=Flag "break" with label.
CWE.1075.ABCL.FLAG_CONTINUE-label=Flag "continue" with label.
CWE.1075.ABCL.FLAG_SWITCH_B-label=Flag "break" in switch cases.
CWE.1075.ABCL.FLAG_SWITCH_C-label=Flag "continue" in switch cases.
CWE.1075.ABCL.msg.1=Avoid "break" with label\: ''{0}''.
CWE.1075.ABCL.msg.2=Avoid "continue" with label\: ''{0}''.
CWE.1077=CWE-1077\: Floating Point Comparison with Incorrect Operator
CWE.1077.DCF=Do not compare floating point types
CWE.1077.DCF.IGNORE_INFINITY-label=Ignore floating point comparisons to "infinity".
CWE.1077.DCF.msg.1=Floating point comparisons for equality can produce unexpected results.
CWE.1102=CWE-1102\: Reliance on Machine-Dependent Data Representation
CWE.1102.DNHCP=Do not hard code an absolute pathname when calling a constructor from the 'File' class
CWE.1102.DNHCP.msg.1=Hard coded pathname passed to a 'File' constructor.
CWE.1106=CWE-1106\: Insufficient Use of Symbolic Constants
CWE.1106.USN=Avoid literal constants
CWE.1106.USN.IGNORE_ANNOTATION-label=Ignore literal constants in annotations
CWE.1106.USN.IGNORE_CASE-label=Ignore literal constants in "switch" cases
CWE.1106.USN.IGNORE_FINAL-label=Ignore non-"static" "final" variables
CWE.1106.USN.IGNORE_METHODS-description=Ignore literal constants in the following types and/or methods (in form of &lt;regular expression for fully qualified type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
CWE.1106.USN.IGNORE_METHODS-label=Ignore literal constants in the following types and/or methods\:
CWE.1106.USN.PASSED_TO_METHODS-label=Ignore literal constants passed to the following methods\:
CWE.1106.USN.PASSED_TO_METHODS.CODSTA__READ__USN__PASSED_TO_METHODS__COLUMN1-label=Type (in regular expression)
CWE.1106.USN.PASSED_TO_METHODS.CODSTA__READ__USN__PASSED_TO_METHODS__COLUMN2-label=Method (in regular expression)
CWE.1106.USN.REGULAR_EXPRESSION-label=Literal constants allowed (in regular expression)\:
CWE.1106.USN.msg.1=Literal constant is used\: {0}.
CWE.1106.USN.tab.BASIC_TAB-label=Basic Settings
CWE.1106.USN.tab.IGNORED_PARAMS-label=Ignored Arguments
CWE.1106.USN.tab.IGNORED_TAB-label=Ignored Types/Methods
CWE.111=CWE-111\: Direct Use of Unsafe JNI
CWE.111.NATIW=Use wrapper methods to secure native methods
CWE.111.NATIW.msg.1={0} should only be accessed using a wrapper method.
CWE.111.NATV=Do not use user-defined "native" methods.
CWE.111.NATV.msg.1=User-defined "native" method\: {0}.
CWE.1115=CWE-1115\: Source Code Element without Standard Prologue
CWE.1115.MCH=Include a meaningful file header comment in every source file
CWE.1115.MCH.FILE_HEADER_FORMAT-label=File header format
CWE.1115.MCH.FILE_HEADER_LOCATION-label=File header location
CWE.1115.MCH.FILE_HEADER_LOCATION.0-label=before package declaration (if any)
CWE.1115.MCH.FILE_HEADER_LOCATION.1-label=after package declaration (if any)
CWE.1115.MCH.FILE_HEADER_LOCATION_GROUP-label=
CWE.1115.MCH.FILE_HEADER_TEMPLATE-label=
CWE.1115.MCH.FILE_HEADER_TRIM_LINES-label=Trim header lines
CWE.1115.MCH.FILE_HEADER_TYPES-label=Acceptable types of comments
CWE.1115.MCH.FILE_HEADER_TYPE_CSTYLE-label=C-Style comments
CWE.1115.MCH.FILE_HEADER_TYPE_JAVADOC-label=Javadoc comments
CWE.1115.MCH.FILE_HEADER_TYPE_SINGLELINE-label=Single-line comments
CWE.1115.MCH.MATCH_HEADER_CASE_SENSITIVE-label=Match case sensitive
CWE.1115.MCH.MATCH_HEADER_WITH_TEMPLATE-label=Match the file header with the following template (defined in regular expressions)\:
CWE.1115.MCH.msg.1=This source file does not include a file header comment.
CWE.1115.MCH.msg.2=The file header comment does not match the specified comment template.
CWE.1115.MCH.msg.3=The 'File header format' parameter is enabled, but the comment template is not defined.
CWE.1126=CWE-1126\: Declaration of Variable with Unnecessarily Wide Scope
CWE.1126.DVCU=Declare variables as close as possible to where they are used
CWE.1126.DVCU.msg.1=Variable ''{0}'' is not declared in this "{1}" block.
CWE.1126.DVCU.msg.2=Variable ''{0}'' is not declared in the initializer of this "for" statement.
CWE.1126.DVCU.msg.3=Variable ''{0}'' is not used until later.
CWE.114=CWE-114\: Process Control
CWE.114.APIBS=Inspect usage of standard API calls that bypass security
CWE.114.APIBS.CHECKED_METHODS-label=Check the following methods\:
CWE.114.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
CWE.114.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
CWE.114.APIBS.msg.1=API call ''{0}'' has potential to bypass security.
CWE.119=CWE-119\: Improper Restriction of Operations within the Bounds of a Memory Buffer
CWE.119.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
CWE.119.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
CWE.119.BUSSB=Prevent external processes from blocking on output or error streams
CWE.119.BUSSB.msg.1=The error stream of the process is not emptied or redirected
CWE.119.BUSSB.msg.2=The output stream of the process is not emptied or redirected
CWE.128=CWE-128\: Wrap-around Error
CWE.128.CACO=Avoid using compound assignment operators in cases which may cause overflow.
CWE.128.CACO.msg.1=Compound assignment operators should not be used when the destination type is ''{0}''.
CWE.128.CACO.msg.2=Compound assignment operators should not be used when the destination type is ''{0}'' and the operand type is ''{1}''.
CWE.129=CWE-129\: Improper Validation of Array Index
CWE.129.CAI=Always check parameters before use in array access
CWE.129.CAI.IGNORE_PRIVATE-label=Ignore private methods
CWE.129.CAI.msg.1=Array ''{0}'' accessed with ''{1}''.
CWE.1385=CWE-1385\: Missing Origin Validation in WebSockets
CWE.1385.WS=Use secure communication with 'wss' (WebSocket Secure) instead of 'ws'.
CWE.1385.WS.msg.1=Consider using 'wss' instead of 'ws'
CWE.15=CWE-15\: External Control of System or Configuration Setting
CWE.15.SYSP=Do not access or set System properties.
CWE.15.SYSP.msg.1={0} the System property "{1}".
CWE.15.SYSP.msg.2={0} a System property.
CWE.15.SYSP.msg.3={0} the System properties.
CWE.15.UCO=Use a Context Object to manage HTTP request parameters
CWE.15.UCO.msg.1=Consider using a "Context" Object instead of calling ''{0}()''.
CWE.173=CWE-173\: Improper Handling of Alternate Encoding
CWE.173.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
CWE.173.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
CWE.173.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
CWE.173.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
CWE.173.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
CWE.173.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
CWE.173.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
CWE.176=CWE-176\: Improper Handling of Unicode Encoding
CWE.176.NCUCP=Do not assume that a Java char fully represents a Unicode code point
CWE.176.NCUCP.METHODS_TABLE_HEADER-label=Methods to be checked
CWE.176.NCUCP.METHODS_TABLE_HEADER.PB__CUB__NCUCP__METHODS_TABLE_HEADER__COLUMN1-label=Incorrect method (qualified name)
CWE.176.NCUCP.METHODS_TABLE_HEADER.PB__CUB__NCUCP__METHODS_TABLE_HEADER__COLUMN2-label=Correct method (qualified name)
CWE.176.NCUCP.msg.1=The ''{0}'' method does not support all Unicode characters and should be replaced with ''{1}''
CWE.185=CWE-185\: Incorrect Regular Expression
CWE.185.REP=Avoid using "." as a regular expression in 'String.replaceAll()' and 'String.replaceFirst()'
CWE.185.REP.msg.1=Regular expression "{0}" will replace all string character to "{1}"
CWE.190=CWE-190\: Integer Overflow or Wraparound
CWE.190.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
CWE.190.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
CWE.190.CACO=Avoid using compound assignment operators in cases which may cause overflow.
CWE.190.CACO.msg.1=Compound assignment operators should not be used when the destination type is ''{0}''.
CWE.190.CACO.msg.2=Compound assignment operators should not be used when the destination type is ''{0}'' and the operand type is ''{1}''.
CWE.190.CLP=Do not cast primitive data types to lower precision
CWE.190.CLP.msg.1="{0}" type cast to lower precision "{1}" type.
CWE.190.ICO=Avoid calculations which result in overflow or NaN
CWE.190.ICO.msg.1=This calculation will not produce an accurate result because it will result in overflow.
CWE.190.ICO.msg.2=This calculation will throw 'java.lang.ArithmeticException'.
CWE.190.IOF=Use unsigned right shift instead of division when overflow is possible.
CWE.190.IOF.msg.1=This integer computation may cause overflow.
CWE.191=CWE-191\: Integer Underflow (Wrap or Wraparound)
CWE.191.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
CWE.191.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
CWE.193=CWE-193\: Off-by-one Error
CWE.193.AOBO=Avoid off-by-one errors in loop conditions
CWE.193.AOBO.msg.1=Loop condition may be off by one.
CWE.198=CWE-198\: Use of Incorrect Byte Ordering
CWE.198.PMRWLED=Provide methods to read and write little-endian data
CWE.198.PMRWLED.msg.1=The ''{0}'' is insecure, because it cannot handle little-endian data.
CWE.20=CWE-20\: Improper Input Validation
CWE.20.AEAF=Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'.
CWE.20.AEAF.msg.1=Consider extending 'DynaValidatorForm' or 'DynaValidatorActionForm'
CWE.20.AEAF.msg.2=Consider extending 'ValidatorForm' or 'ValidatorActionForm'
CWE.20.APIBS=Inspect usage of standard API calls that bypass security
CWE.20.APIBS.CHECKED_METHODS-label=Check the following methods\:
CWE.20.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
CWE.20.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
CWE.20.APIBS.msg.1=API call ''{0}'' has potential to bypass security.
CWE.20.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
CWE.20.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
CWE.20.BUSSB=Prevent external processes from blocking on output or error streams
CWE.20.BUSSB.msg.1=The error stream of the process is not emptied or redirected
CWE.20.BUSSB.msg.2=The output stream of the process is not emptied or redirected
CWE.20.CACO=Avoid using compound assignment operators in cases which may cause overflow.
CWE.20.CACO.msg.1=Compound assignment operators should not be used when the destination type is ''{0}''.
CWE.20.CACO.msg.2=Compound assignment operators should not be used when the destination type is ''{0}'' and the operand type is ''{1}''.
CWE.20.CAI=Always check parameters before use in array access
CWE.20.CAI.IGNORE_PRIVATE-label=Ignore private methods
CWE.20.CAI.msg.1=Array ''{0}'' accessed with ''{1}''.
CWE.20.CLP=Do not cast primitive data types to lower precision
CWE.20.CLP.msg.1="{0}" type cast to lower precision "{1}" type.
CWE.20.CSVFV=Always call 'super.validate()' from validation methods in 'ActionForm' classes.
CWE.20.CSVFV.msg.1=This validation method does not call 'super.validate()'.
CWE.20.ICO=Avoid calculations which result in overflow or NaN
CWE.20.ICO.msg.1=This calculation will not produce an accurate result because it will result in overflow.
CWE.20.ICO.msg.2=This calculation will throw 'java.lang.ArithmeticException'.
CWE.20.IOF=Use unsigned right shift instead of division when overflow is possible.
CWE.20.IOF.msg.1=This integer computation may cause overflow.
CWE.20.NATIW=Use wrapper methods to secure native methods
CWE.20.NATIW.msg.1={0} should only be accessed using a wrapper method.
CWE.20.NATV=Do not use user-defined "native" methods.
CWE.20.NATV.msg.1=User-defined "native" method\: {0}.
CWE.20.SYSP=Do not access or set System properties.
CWE.20.SYSP.msg.1={0} the System property "{1}".
CWE.20.SYSP.msg.2={0} a System property.
CWE.20.SYSP.msg.3={0} the System properties.
CWE.20.UCO=Use a Context Object to manage HTTP request parameters
CWE.20.UCO.msg.1=Consider using a "Context" Object instead of calling ''{0}()''.
CWE.200=CWE-200\: Exposure of Sensitive Information to an Unauthorized Actor
CWE.200.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
CWE.200.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
CWE.200.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
CWE.200.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
CWE.200.CONSEN=Do not log confidential or sensitive information
CWE.200.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
CWE.200.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
CWE.200.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
CWE.200.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
CWE.200.EWSSEC=Avoid debug information from Spring Security framework to logs
CWE.200.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
CWE.200.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
CWE.200.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
CWE.200.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
CWE.200.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
CWE.200.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
CWE.200.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
CWE.200.SIO=Avoid calling print methods of 'System.err' or 'System.out'
CWE.200.SIO.METHOD_SKIP_LIST-label=Exclude methods
CWE.200.SIO.SCANNED_CLASS_TABLE-label=Include classes
CWE.200.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
CWE.200.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
CWE.200.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
CWE.209=CWE-209\: Generation of Error Message Containing Sensitive Information
CWE.209.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
CWE.209.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
CWE.209.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
CWE.209.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
CWE.209.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
CWE.209.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
CWE.209.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
CWE.209.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
CWE.209.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
CWE.209.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
CWE.209.SIO=Avoid calling print methods of 'System.err' or 'System.out'
CWE.209.SIO.METHOD_SKIP_LIST-label=Exclude methods
CWE.209.SIO.SCANNED_CLASS_TABLE-label=Include classes
CWE.209.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
CWE.209.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
CWE.209.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
CWE.212=CWE-212\: Improper Removal of Sensitive Information Before Storage or Transfer
CWE.212.FT=Avoid declaring "transient" fields in non-serializable classes
CWE.212.FT.msg.1=field ''{0}'' is "transient"
CWE.213=CWE-213\: Exposure of Sensitive Information Due to Incompatible Policies
CWE.213.CONSEN=Do not log confidential or sensitive information
CWE.213.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
CWE.213.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
CWE.213.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
CWE.213.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
CWE.215=CWE-215\: Insertion of Sensitive Information Into Debugging Code
CWE.215.EWSSEC=Avoid debug information from Spring Security framework to logs
CWE.215.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
CWE.245=CWE-245\: J2EE Bad Practices\: Direct Management of Connections
CWE.245.JDBCTEMPLATE=Avoid using native JDBC
CWE.245.JDBCTEMPLATE.CHECK_SIMPLE_JDBC_TEMPLATE-label=Avoid using SimpleJdbcTemplate (From Spring Framework 3.0.1 is deprecated)
CWE.245.JDBCTEMPLATE.msg.1=Avoid using native jdbc to open connection.
CWE.245.JDBCTEMPLATE.msg.2=Avoid using native jdbc to prepare statement.
CWE.245.JDBCTEMPLATE.msg.3=Avoid using native jdbc to execute statement.
CWE.245.JDBCTEMPLATE.msg.4=Avoid using native jdbc to close connection.
CWE.245.JDBCTEMPLATE.msg.5=Avoid using deprecated SimpleJdbcTemplate class.
CWE.246=CWE-246\: J2EE Bad Practices\: Direct Use of Sockets
CWE.246.AUS=Do not use sockets in EJBs.
CWE.246.AUS.CHECK_SERVERSOCKET-label=Check ServerSockets
CWE.246.AUS.CHECK_SOCKET-label=Check Sockets
CWE.246.AUS.DEPTH-label=Maximum depth to check for socket usage
CWE.246.AUS.msg.1=Socket method ''{0}'' called in a bean.
CWE.246.AUS.msg.2=Call to ''{0}'' indirectly uses a socket.
CWE.246.NSF=Do not call 'Socket.setSocketImplFactory()' or 'URL.setURLStreamHandlerFactory()' in a web component.
CWE.246.NSF.DEPTH-label=Maximum depth to look for set factory calls
CWE.246.NSF.msg.1=Call to ''{0}()'' in a web component.
CWE.246.NSF.msg.2=Method ''{0}'' indirectly calls set factory method in a web component.
CWE.246.SS=Do not use sockets in web components.
CWE.246.SS.CHECK_SERVERSOCKET-label=Check ServerSockets
CWE.246.SS.CHECK_SOCKET-label=Check Sockets
CWE.246.SS.DEPTH-label=Maximum depth to look for socket usage
CWE.246.SS.msg.1=''{0}'' used in a web component.
CWE.246.SS.msg.2=Call to ''{0}'' indirectly uses a socket in a web component.
CWE.246.SSM=Ensure that an appropriate security manager is set
CWE.246.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
CWE.246.SSP=Do not call 'System.setProperty()' in a web component.
CWE.246.SSP.DEPTH-label=Maximum depth to look for "System.setProperty()" calls
CWE.246.SSP.msg.1=Call to ''System.{0}()'' in a web component.
CWE.246.SSP.msg.2=Method ''{0}'' indirectly calls "System.setProperty()" in a web component.
CWE.250=CWE-250\: Execution with Unnecessary Privileges
CWE.250.LDP=Limit the number of "AccessController.doPrivileged" calls per class.
CWE.250.LDP.MAX_CALLS-label=Limit the number of 'AccessController.doPrivileged' calls per class to
CWE.250.LDP.msg.1=Class ''{0}'' has greater than ''{1}'' calls to "AccessController.doPrivileged".
CWE.250.PCL=Limit the number of lines in "privileged" code blocks.
CWE.250.PCL.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
CWE.250.PCL.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
CWE.250.PCL.NUMBER_LINES-label=Limit number of lines in "run()" method to
CWE.250.PCL.msg.1="run()" method of class ''{0}'' has greater than ''{1}'' lines.
CWE.252=CWE-252\: Unchecked Return Value
CWE.252.CRRV=Check the return value of methods which read or skip input
CWE.252.CRRV.CHECKED_METHOD_LIST-description=Methods to be checked\: (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
CWE.252.CRRV.CHECKED_METHOD_LIST-label=Methods to be checked\:
CWE.252.CRRV.msg.1=The return value of this call to ''{0}()'' is not checked.
CWE.261=CWE-261\: Weak Encoding for Password
CWE.261.CKTS=Avoid using cryptographic keys which are too short.
CWE.261.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
CWE.261.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
CWE.261.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
CWE.261.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
CWE.269=CWE-269\: Improper Privilege Management
CWE.269.LDP=Limit the number of "AccessController.doPrivileged" calls per class.
CWE.269.LDP.MAX_CALLS-label=Limit the number of 'AccessController.doPrivileged' calls per class to
CWE.269.LDP.msg.1=Class ''{0}'' has greater than ''{1}'' calls to "AccessController.doPrivileged".
CWE.269.PCL=Limit the number of lines in "privileged" code blocks.
CWE.269.PCL.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
CWE.269.PCL.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
CWE.269.PCL.NUMBER_LINES-label=Limit number of lines in "run()" method to
CWE.269.PCL.msg.1="run()" method of class ''{0}'' has greater than ''{1}'' lines.
CWE.279=CWE-279\: Incorrect Execution-Assigned Permissions
CWE.279.IDP=Avoid setting the write or execute file permissions to unintended users
CWE.279.IDP.msg.1=The ''{0}'' method is set to grant the {1} permissions to everybody.
CWE.287=CWE-287\: Improper Authentication
CWE.287.CKTS=Avoid using cryptographic keys which are too short.
CWE.287.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
CWE.287.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
CWE.287.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
CWE.287.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
CWE.287.DNSL=Avoid DNS lookups for decision making
CWE.287.DNSL.msg.1=DNS lookup checked here.
CWE.287.HCCK=Avoid using hard-coded cryptographic keys
CWE.287.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
CWE.287.HCCK.msg.1=Hard-coded cryptographic key here.
CWE.287.HCCS=Avoid passing hardcoded usernames/passwords/URLs to database connection methods.
CWE.287.HCCS.CONNECT_METHS-description=Additional Database Connection Methods (in form of &lt;qualified name of declaring type&gt;\#&lt;method name&gt;)
CWE.287.HCCS.CONNECT_METHS-label=Additional Database Connection Methods
CWE.287.HCCS.msg.1=This call to ''{0}()'' may be dangerous because it passes in only hard-coded Strings.
CWE.287.HCCS.msg.2=This call to ''{0}()'' may be dangerous because it uses a hard-coded password.
CWE.287.HTTPRHA=Do not rely on IP addresses obtained from HTTP request headers for authentication
CWE.287.HTTPRHA.msg.1=The IP address retrieved from the HTTP request header is used for authentication
CWE.287.HTTPRHA.msg.2=The IP address retrieved from the header using the 'getRemoteAddr()' method is used for authentication
CWE.287.HV=Ensure the HostnameVerifier.verify() method validates the certificate
CWE.287.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
CWE.287.PBFA=Ensure sufficient protection against multiple failed authentication attempts
CWE.287.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
CWE.287.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
CWE.287.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
CWE.287.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
CWE.287.SSM=Ensure that an appropriate security manager is set
CWE.287.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
CWE.287.USC=Use the SSL-enabled version of classes when possible.
CWE.287.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
CWE.287.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
CWE.287.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
CWE.287.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
CWE.287.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
CWE.287.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
CWE.287.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
CWE.287.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
CWE.287.VSI=Properly validate server identity
CWE.287.VSI.msg.1=SMTP SSL does not check server identity.
CWE.287.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
CWE.290=CWE-290\: Authentication Bypass by Spoofing
CWE.290.HTTPRHA=Do not rely on IP addresses obtained from HTTP request headers for authentication
CWE.290.HTTPRHA.msg.1=The IP address retrieved from the HTTP request header is used for authentication
CWE.290.HTTPRHA.msg.2=The IP address retrieved from the header using the 'getRemoteAddr()' method is used for authentication
CWE.295=CWE-295\: Improper Certificate Validation
CWE.295.HV=Ensure the HostnameVerifier.verify() method validates the certificate
CWE.295.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
CWE.295.VSI=Properly validate server identity
CWE.295.VSI.msg.1=SMTP SSL does not check server identity.
CWE.295.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
CWE.297=CWE-297\: Improper Validation of Certificate with Host Mismatch
CWE.297.VSI=Properly validate server identity
CWE.297.VSI.msg.1=SMTP SSL does not check server identity.
CWE.297.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
CWE.306=CWE-306\: Missing Authentication for Critical Function
CWE.306.SSM=Ensure that an appropriate security manager is set
CWE.306.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
CWE.307=CWE-307\: Improper Restriction of Excessive Authentication Attempts
CWE.307.PBFA=Ensure sufficient protection against multiple failed authentication attempts
CWE.307.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
CWE.307.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
CWE.307.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
CWE.307.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
CWE.312=CWE-312\: Cleartext Storage of Sensitive Information
CWE.312.PLC=Avoid storing sensitive data in plaintext in a cookie
CWE.312.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
CWE.312.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
CWE.312.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
CWE.312.PLC.msg.1=Do not store important to safety data in cookie.
CWE.312.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
CWE.315=CWE-315\: Cleartext Storage of Sensitive Information in a Cookie
CWE.315.PLC=Avoid storing sensitive data in plaintext in a cookie
CWE.315.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
CWE.315.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
CWE.315.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
CWE.315.PLC.msg.1=Do not store important to safety data in cookie.
CWE.315.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
CWE.319=CWE-319\: Cleartext Transmission of Sensitive Information
CWE.319.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
CWE.319.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
CWE.319.UOSC.msg.2=Make sure that the appropriate version of library is used.
CWE.319.USC=Use the SSL-enabled version of classes when possible.
CWE.319.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
CWE.319.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
CWE.319.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
CWE.319.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
CWE.319.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
CWE.319.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
CWE.319.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
CWE.319.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
CWE.321=CWE-321\: Use of Hard-coded Cryptographic Key
CWE.321.HCCK=Avoid using hard-coded cryptographic keys
CWE.321.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
CWE.321.HCCK.msg.1=Hard-coded cryptographic key here.
CWE.325=CWE-325\: Missing Cryptographic Step
CWE.325.MCMDU=MessageDigest objects must process the data with the 'update' method
CWE.325.MCMDU.msg.1=The 'update' method is not called on the ''{0}'' variable after the message digest object is obtained
CWE.325.SIKG=Initialize KeyGenerator instances 
CWE.325.SIKG.msg.1=The ''{0}'' object of the KeyGenerator class is created but not initialized
CWE.327=CWE-327\: Use of a Broken or Risky Cryptographic Algorithm
CWE.327.ACMD=Avoid using custom MessageDigest implementations
CWE.327.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
CWE.328=CWE-328\: Use of Weak Hash
CWE.328.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
CWE.328.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
CWE.328.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
CWE.328.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
CWE.328.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
CWE.328.AISSAJAVA.msg.1=The cryptographic class is insecure.
CWE.328.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
CWE.328.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
CWE.328.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
CWE.328.ICA=Avoid using insecure algorithms for cryptography.
CWE.328.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
CWE.328.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
CWE.328.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
CWE.328.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
CWE.328.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
CWE.328.ICA.msg.2=The cryptography algorithm is used without padding.
CWE.328.MDSALT=Use hash functions with a salt
CWE.328.MDSALT.msg.1=A salt is not added to the digest
CWE.328.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
CWE.328.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
CWE.329=CWE-329\: Generation of Predictable IV with CBC Mode
CWE.329.ENPP=Ensure arguments passed to certain methods come from predefined methods list.
CWE.329.ENPP.PAIRS_TABLE_HEADER-label=Methods and arguments configuration
CWE.329.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN1-label=Method to be checked (&lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,...)
CWE.329.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN2-label=Argument Index to Check (''0''-based)
CWE.329.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN3-label=Allowed method name (in Regular Expressions)
CWE.329.ENPP.msg.1=Argument number {0} passed to method ''{1}'' is not an allowed method call.
CWE.329.IVR=Avoid non-random "byte[]" when using IvParameterSpec.
CWE.329.IVR.msg.1=IvParameterSpec instantiated with non-random value ''{0}''.
CWE.336=CWE-336\: Same Seed in Pseudo-Random Number Generator (PRNG)
CWE.336.ENPP=Ensure arguments passed to certain methods come from predefined methods list.
CWE.336.ENPP.PAIRS_TABLE_HEADER-label=Methods and arguments configuration
CWE.336.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN1-label=Method to be checked (&lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,...)
CWE.336.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN2-label=Argument Index to Check (''0''-based)
CWE.336.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN3-label=Allowed method name (in Regular Expressions)
CWE.336.ENPP.msg.1=Argument number {0} passed to method ''{1}'' is not an allowed method call.
CWE.337=CWE-337\: Predictable Seed in Pseudo-Random Number Generator (PRNG)
CWE.337.ENPP=Ensure arguments passed to certain methods come from predefined methods list.
CWE.337.ENPP.PAIRS_TABLE_HEADER-label=Methods and arguments configuration
CWE.337.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN1-label=Method to be checked (&lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,...)
CWE.337.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN2-label=Argument Index to Check (''0''-based)
CWE.337.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN3-label=Allowed method name (in Regular Expressions)
CWE.337.ENPP.msg.1=Argument number {0} passed to method ''{1}'' is not an allowed method call.
CWE.338=CWE-338\: Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)
CWE.338.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
CWE.338.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
CWE.346=CWE-346\: Origin Validation Error
CWE.346.JXCORS=Restrict cross-origin resource sharing to secure origins
CWE.346.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
CWE.347=CWE-347\: Improper Verification of Cryptographic Signature
CWE.347.VJFS=Always verify JarFile signatures
CWE.347.VJFS.msg.1=Consider using a JarFile constructor with verification enabled.
CWE.350=CWE-350\: Reliance on Reverse DNS Resolution for a Security-Critical Action
CWE.350.DNSL=Avoid DNS lookups for decision making
CWE.350.DNSL.msg.1=DNS lookup checked here.
CWE.352=CWE-352\: Cross-Site Request Forgery (CSRF)
CWE.352.DCSRFJAVA=Do not disable CSRF protection
CWE.352.DCSRFJAVA.msg.1=CSRF protection is disabled.
CWE.352.REQMAP=Ensure that methods annotated with @RequestMapping specify the HTTP request method they call
CWE.352.REQMAP.msg.1=The ''{0}'' method annotated with @RequestMapping does not explicitly specify the HTTP request method it calls
CWE.352.REQMAP.msg.2=The ''{0}'' method annotated with @RequestMapping calls more than one HTTP request method.
CWE.352.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
CWE.352.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
CWE.352.UOSC.msg.2=Make sure that the appropriate version of library is used.
CWE.359=CWE-359\: Exposure of Private Personal Information to an Unauthorized Actor
CWE.359.CONSEN=Do not log confidential or sensitive information
CWE.359.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
CWE.359.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
CWE.359.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
CWE.359.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
CWE.362=CWE-362\: Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition')
CWE.362.DCL=Avoid unsafe implementations of the "double-checked locking" pattern.
CWE.362.DCL.msg.1=The "double-checked locking" pattern is used; this pattern can cause unexpected problems when compiler optimizations are performed.
CWE.362.TOCTOU=Avoid Time-of-check Time-of-use (TOCTOU) Race Condition
CWE.362.TOCTOU.BLOCKING_TABLE_HEADER-label=Blocking instructions
CWE.362.TOCTOU.BLOCKING_TABLE_HEADER.PB__CUB__TOCTOU__BLOCKING_TABLE_HEADER__COLUMN1-label=Blocking instruction
CWE.362.TOCTOU.MAX_INSTRUCTIONS_COUNT-label=Maximum number of method calls between the pairs of methods
CWE.362.TOCTOU.PAIRS_TABLE_HEADER-label=Pairs of methods
CWE.362.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN1-label=First instruction
CWE.362.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN2-label=Second instruction
CWE.362.TOCTOU.msg.1=This call is not preceeded by\: ''{0}'' within {1} method calls.
CWE.362.TOCTOU.msg.2=This call is not preceeded by\: ''{0}'' before calling blocking instruction\: ''{1}''.
CWE.362.TOCTOU.msg.3=This call is not preceeded by\: ''{0}'' within block scope.
CWE.367=CWE-367\: Time-of-check Time-of-use (TOCTOU) Race Condition
CWE.367.TOCTOU=Avoid Time-of-check Time-of-use (TOCTOU) Race Condition
CWE.367.TOCTOU.BLOCKING_TABLE_HEADER-label=Blocking instructions
CWE.367.TOCTOU.BLOCKING_TABLE_HEADER.PB__CUB__TOCTOU__BLOCKING_TABLE_HEADER__COLUMN1-label=Blocking instruction
CWE.367.TOCTOU.MAX_INSTRUCTIONS_COUNT-label=Maximum number of method calls between the pairs of methods
CWE.367.TOCTOU.PAIRS_TABLE_HEADER-label=Pairs of methods
CWE.367.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN1-label=First instruction
CWE.367.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN2-label=Second instruction
CWE.367.TOCTOU.msg.1=This call is not preceeded by\: ''{0}'' within {1} method calls.
CWE.367.TOCTOU.msg.2=This call is not preceeded by\: ''{0}'' before calling blocking instruction\: ''{1}''.
CWE.367.TOCTOU.msg.3=This call is not preceeded by\: ''{0}'' within block scope.
CWE.375=CWE-375\: Returning a Mutable Object to an Untrusted Caller
CWE.375.RA=Avoid methods that might expose internal representations by returning arrays or other mutable fields
CWE.375.RA.CHECK_ARRAYS-label=Check arrays
CWE.375.RA.CHECK_MUTABLE_TYPES-label=Check mutable types
CWE.375.RA.msg.1=Exposing the internal representation of ''{0}'' through the array ''{1}''.
CWE.375.RA.msg.2=Exposing the internal representation of ''{0}'' through the mutable field ''{1}''.
CWE.377=CWE-377\: Insecure Temporary File
CWE.377.ATF=Avoid temporary files
CWE.377.ATF.msg.1=A temporary file has been created
CWE.382=CWE-382\: J2EE Bad Practices\: Use of System.exit()
CWE.382.EXIT=Do not call methods which terminates Java Virtual Machine
CWE.382.EXIT.IGNORE_IF_COMMENT-label=Ignore if the method call is followed by a comment on the same line
CWE.382.EXIT.IGNORE_IF_COMMENT_ABOVE-label=Ignore if the line above the method call contains a comment
CWE.382.EXIT.IGNORE_IN_MAIN-label=Ignore in the 'main()' method
CWE.382.EXIT.msg.1='System.exit()' called.
CWE.382.EXIT.msg.2='Runtime.exit()' called.
CWE.382.EXIT.msg.3='Runtime.halt()' called.
CWE.382.JVM=Do not stop the JVM in a web component.
CWE.382.JVM.DEPTH-label=Maximum depth to look for "System.exit()" calls
CWE.382.JVM.msg.1=Call to ''System.{0}()'' in a web component.
CWE.382.JVM.msg.2=Method ''{0}'' indirectly calls "System.exit()" in a web component.
CWE.383=CWE-383\: J2EE Bad Practices\: Direct Use of Threads
CWE.383.THR=Do not use threads in web components.
CWE.383.THR.DEPTH-label=Maximum depth to look for Thread usage
CWE.383.THR.msg.1=Thread created in a web component.
CWE.383.THR.msg.2=Method ''{0}'' indirectly creates Thread in a web component.
CWE.384=CWE-384\: Session Fixation
CWE.384.ISL=Always call 'HttpSession.invalidate()' before 'LoginContext.login()'
CWE.384.ISL.msg.1=Login without session invalidation.
CWE.390=CWE-390\: Detection of Error Condition Without Action
CWE.390.LGE=Ensure all exceptions are either logged with a standard logger or rethrown
CWE.390.LGE.CHECK_EXCEPT_FULL_PASSED-label=Check if the exception passed to the logging method is complete
CWE.390.LGE.CHECK_EXCEPT_LOGGED-label=Check if the exception is passed into the logging method call
CWE.390.LGE.CHECK_EXCEPT_THROW-label=Check if the caught exception is passed to a new exception or rethrown
CWE.390.LGE.FLAG_LEVEL-label=Catch clause should contain\:
CWE.390.LGE.FLAG_LEVEL.0-label=Logging method.
CWE.390.LGE.FLAG_LEVEL.1-label=Logging method or "throw" exception statement.
CWE.390.LGE.FLAG_LEVEL.2-label=Logging method, comment, or "throw" exception statement.
CWE.390.LGE.IGNORE_LIST-label=Ignore exception variables matching the following regular expression(s)\:
CWE.390.LGE.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
CWE.390.LGE.LOG_METHOD_EXPRESSION-label=Logging method name in regular expression
CWE.390.LGE.msg.1=The exception is not logged in the "catch" clause.
CWE.390.LGE.msg.2=The exception is neither logged nor rethrown in the "catch" clause.
CWE.390.LGE.msg.3=The exception is neither logged nor rethrown in the "catch" clause. Add a comment to the clause if this is expected.
CWE.390.LGE.msg.4=The ''{0}'' exception is not passed to the logging method called in the "catch" clause.
CWE.390.LGE.msg.5=The information passed from the ''{0}'' exception to the logging method may be incomplete.
CWE.390.LGE.msg.6=The ''{0}'' exception is not rethrown in the "catch" block or passed to the new exception as an argument.
CWE.390.LGE.tab.IGNORE_LIST_TAB-label=Ignore List
CWE.390.LGE.tab.LOGGERS_TAB-label=Loggers
CWE.391=CWE-391\: Unchecked Error Condition
CWE.391.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
CWE.391.AECB.CHECK_CATCH-label=Check "catch" block.
CWE.391.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
CWE.391.AECB.CHECK_FINALLY-label=Check "finally" block.
CWE.391.AECB.CHECK_TRY-label=Check "try" block.
CWE.391.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
CWE.391.AECB.msg.1="try" block has an empty body.
CWE.391.AECB.msg.2="catch" block has an empty body.
CWE.391.AECB.msg.3="finally" block has an empty body.
CWE.395=CWE-395\: Use of NullPointerException Catch to Detect NULL Pointer Dereference
CWE.395.NCNPE=Do not catch 'NullPointerException'
CWE.395.NCNPE.msg.1=Avoid catching 'NullPointerException'
CWE.396=CWE-396\: Declaration of Catch for Generic Exception
CWE.396.NCE=Do not catch exception types which are too general or are unchecked exceptions.
CWE.396.NCE.GENERAL-label=Check for general exception types.
CWE.396.NCE.IGNORE_EXCEPTIONS-label=Ignore exceptions with names matching the following regular expression(s)\:
CWE.396.NCE.NUM_CHILDREN-label=Check for parent exceptions caught where number of child exceptions thrown is less than
CWE.396.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN1-label=
CWE.396.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN2-label=
CWE.396.NCE.UNCHECKED-label=Check for unchecked exception types.
CWE.396.NCE.msg.1="catch" statement directly catches the general exception type ''{0}''.
CWE.396.NCE.msg.2="catch" statement directly catches the unchecked exception type ''{0}''.
CWE.396.NCE.msg.3="catch" statement catches general parent exception type\: ''{0}''.
CWE.397=CWE-397\: Declaration of Throws for Generic Exception
CWE.397.NTERR=Do not throw exception types which are too general or are unchecked exceptions.
CWE.397.NTERR.CHECKED_EXCEPTS-label=Exception types which should not be thrown (fully qualified names)
CWE.397.NTERR.msg.1=Avoid throwing ''{0}''.
CWE.397.NTX=Avoid declaring methods to throw general or unchecked Exception types
CWE.397.NTX.CHECKED_EXCEPTS-label=Exception types which should not be declared to be thrown (fully qualified names)
CWE.397.NTX.IGNORE_OVERRIDING-label=Ignore overriding methods.
CWE.397.NTX.IGNORE_PROPAGATED-label=Ignore methods which propagate exception types of called methods.
CWE.397.NTX.SKIP_JUNIT-label=Skip JUnit classes.
CWE.397.NTX.SUBCLASSES-label=Check for exceptions which are subclasses of 'Error' and 'RuntimeException'.
CWE.397.NTX.msg.1=Throwing explicit ''{0}'' object in ''{1}()''.
CWE.400=CWE-400\: Uncontrolled Resource Consumption
CWE.400.DMDS=Avoid using the DriverManagerDataSource class in production code
CWE.400.DMDS.msg.1=The DriverManagerDataSource class is not a pooled data source and should not be used in production code.
CWE.400.ISTART=Do not call the 'start()' method directly on Thread class instances 
CWE.400.ISTART.CHECK_ONLY_IN_LOOPS-label=Ignore method calls outside of loops
CWE.400.ISTART.msg.1=A call to the Thread.start() method.
CWE.404=CWE-404\: Improper Resource Shutdown or Release
CWE.404.COCO=Close JDBC objects in the correct order.
CWE.404.COCO.msg.1=Possible incorrect order\: {0} ''{1}'' closed after {2} ''{3}''.
CWE.404.CRWD=Close resources as early as possible
CWE.404.CRWD.msg.1=It may be possible to move this call to "close" earlier in the method.
CWE.404.ODBIL=Do not open or close JDBC connections in loops
CWE.404.ODBIL.ADDITIONAL_CLOSE_METHODS-label=Additional JDBC connection closing methods (in regular expression)
CWE.404.ODBIL.ADDITIONAL_CLOSE_METHODS.JDBC__ODBIL__ADDITIONAL_CLOSE_METHODS__COLUMN1-label=Declaring type
CWE.404.ODBIL.ADDITIONAL_CLOSE_METHODS.JDBC__ODBIL__ADDITIONAL_CLOSE_METHODS__COLUMN2-label=Method name
CWE.404.ODBIL.ADDITIONAL_OPEN_METHODS-label=Additional JDBC connection opening methods (in regular expression)
CWE.404.ODBIL.ADDITIONAL_OPEN_METHODS.JDBC__ODBIL__ADDITIONAL_OPEN_METHODS__COLUMN1-label=Declaring type
CWE.404.ODBIL.ADDITIONAL_OPEN_METHODS.JDBC__ODBIL__ADDITIONAL_OPEN_METHODS__COLUMN2-label=Method name
CWE.404.ODBIL.MAX_LEVEL-label=Maximum level of checking allowed
CWE.404.ODBIL.msg.1=The method ''{0}'' opens a JDBC connection and is called in a loop.
CWE.404.ODBIL.msg.2=The method ''{0}'' closes a JDBC connection and is called in a loop.
CWE.413=CWE-413\: Improper Resource Locking
CWE.413.LORD=Ensure that nested locks are ordered correctly
CWE.413.LORD.msg.1=Lock ''{0}'' should not be wrapped by lock ''{1}''.
CWE.426=CWE-426\: Untrusted Search Path
CWE.426.PBRTE=Always specify absolute paths to execute commands
CWE.426.PBRTE.msg.1=The specified command is not an absolute path with separators
CWE.427=CWE-427\: Uncontrolled Search Path Element
CWE.427.PBRTE=Always specify absolute paths to execute commands
CWE.427.PBRTE.msg.1=The specified command is not an absolute path with separators
CWE.456=CWE-456\: Missing Initialization of a Variable
CWE.456.LV=Initialize all local variables explicitly at the declaration statement
CWE.456.LV.msg.1=Local variable not initialized\: {0}
CWE.457=CWE-457\: Use of Uninitialized Variable
CWE.457.UIRC=Avoid uninitialized reads of fields before or during constructor execution
CWE.457.UIRC.CHECK_NON_STATIC-label=Check non-static fields.
CWE.457.UIRC.CHECK_STATIC-label=Check static fields.
CWE.457.UIRC.IGNORE_PRIMITIVE-label=Ignore fields of primitive types.
CWE.457.UIRC.MAX_CHECKING_LEVEL-label=Maximum level of checking allowed
CWE.457.UIRC.msg.1=Field ''{0}'' is not initialized by the time of this read access.
CWE.457.UIRC.msg.2=Field ''{0}'' is not explicitly initialized by the time of this read access.
CWE.470=CWE-470\: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection')
CWE.470.APIBS=Inspect usage of standard API calls that bypass security
CWE.470.APIBS.CHECKED_METHODS-label=Check the following methods\:
CWE.470.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
CWE.470.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
CWE.470.APIBS.msg.1=API call ''{0}'' has potential to bypass security.
CWE.477=CWE-477\: Use of Obsolete Function
CWE.477.DPRAPI=Do not use deprecated APIs
CWE.477.DPRAPI.CHECK_SEE-label=Check for usage of deprecated APIs in Javadoc "@see" tags
CWE.477.DPRAPI.CLASS_LIST-label=Deprecated class/interface list
CWE.477.DPRAPI.FIELD_LIST-description=Deprecated field list (in form of &lt;fully qualified type name&gt;\#&lt;field name&gt;)
CWE.477.DPRAPI.FIELD_LIST-label=Deprecated field list
CWE.477.DPRAPI.IGNORE_NOT_LISTED-label=Ignore all types, methods, and fields not listed above
CWE.477.DPRAPI.IGNORE_USER_DEFINED-label=Ignore user-defined types, methods, and fields
CWE.477.DPRAPI.METHOD_LIST-description=Deprecated method list (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
CWE.477.DPRAPI.METHOD_LIST-label=Deprecated method list
CWE.477.DPRAPI.msg.1=Using deprecated {0}\: ''{1}''.
CWE.477.DPRAPI.tab.CLASS-label=Class/Interface
CWE.477.DPRAPI.tab.FIELD-label=Field
CWE.477.DPRAPI.tab.METHOD-label=Method
CWE.478=CWE-478\: Missing Default Case in Multiple Condition Expression
CWE.478.PDS=Provide "default\:" for each "switch" statement
CWE.478.PDS.msg.1="switch" is missing "default\:" label.
CWE.481=CWE-481\: Assigning instead of Comparing
CWE.481.ASI=Avoid assignment within a condition
CWE.481.ASI.CHECK_BOOLEAN_ONLY-label=Flag assignments to "boolean" objects only
CWE.481.ASI.msg.1=Assignment within an "if" condition.
CWE.481.ASI.msg.2=Assignment within a loop condition.
CWE.483=CWE-483\: Incorrect Block Delimitation
CWE.483.BLK=Provide a '{}' block for conditional statements
CWE.483.BLK.BLKDOWHL-label=Check "do-while" statements
CWE.483.BLK.BLKELSE-label=Check "else" statements
CWE.483.BLK.BLKFOR-label=Check "for" statements
CWE.483.BLK.BLKIF-label=Check "if" statements
CWE.483.BLK.BLKWHL-label=Check "while" statements
CWE.483.BLK.msg.1="{0}" statement without a "'{' '}'" block.
CWE.483.EB=Avoid control statements with empty bodies
CWE.483.EB.CHECK_TYPE_TABLE-label=Flag as empty body\:
CWE.483.EB.CHECK_TYPE_TABLE.PB__TYPO__EB__CHECK_TYPE_TABLE__COLUMN1-label=Conditional statement type
CWE.483.EB.CHECK_TYPE_TABLE.PB__TYPO__EB__CHECK_TYPE_TABLE__COLUMN2-label=empty statement
CWE.483.EB.CHECK_TYPE_TABLE.PB__TYPO__EB__CHECK_TYPE_TABLE__COLUMN3-label=empty block
CWE.483.EB.SAME_LINE_ONLY-label=Report only if the empty statement is on the same line as the control statement.
CWE.483.EB.msg.1=''{0}'' statement with an empty body.
CWE.483.EBI=Avoid erroneously placing statements outside blocks.
CWE.483.EBI.CHECK_DO-label=Check "do-while" statements
CWE.483.EBI.CHECK_ELSE-label=Check "else" statements
CWE.483.EBI.CHECK_FOR-label=Check "for" statements
CWE.483.EBI.CHECK_IF-label=Check "if" statements
CWE.483.EBI.CHECK_WHILE-label=Check "while" statements
CWE.483.EBI.msg.1=Statement has indentation matching or greater than the previous line, but is outside the ''{0}'' statement.
CWE.484=CWE-484\: Omitted Break Statement in Switch
CWE.484.DAV=Avoid assigning same variable in the fall-through switch case.
CWE.484.DAV.msg.1=variable ''{0}'' has been assigned in previous switch case.
CWE.484.SBC=Do not use a "switch" statement with a bad "case"
CWE.484.SBC.IGNORE_EMPTY-label=Ignore "case" statements with empty bodies
CWE.484.SBC.IGNORE_LAST_SWITCH_CASE-label=Ignore last "switch" case
CWE.484.SBC.msg.1="{0}" is missing either "break", "return", or "/* falls through */".
CWE.484.SBC.msg.2="default" case is missing either "break", "return", or "/* falls through */".
CWE.486=CWE-486\: Comparison of Classes by Name
CWE.486.AUG=Inspect usage of 'getName()' from 'java.lang.Class' object.
CWE.486.AUG.IGNORE_LOGGER-label=Ignore calls passed to logging methods
CWE.486.AUG.IGNORE_PRINT-label=Ignore calls passed to "print" methods
CWE.486.AUG.IGNORE_THROW-label=Ignore calls passed to throw statements
CWE.486.AUG.msg.1=Inspect usage of "Class.getName()" to ensure it is not used to compare classes.
CWE.486.CMP=Do not compare Class objects by name.
CWE.486.CMP.msg.1=Class object comparison by name.
CWE.487=CWE-487\: Reliance on Package-level Scope
CWE.487.AF=Avoid "public"/"protected"/package-private fields
CWE.487.AF.CHECK_INSTANCE-label=Check instance fields.
CWE.487.AF.CHECK_PACKAGE_IN_CHILD_CLASS-label=Check member class
CWE.487.AF.CHECK_PACKAGE_IN_TOP_LEVEL_CLASS-label=Check top-level class
CWE.487.AF.CHECK_PROTECTED_IN_CHILD_CLASS-label=Check member class
CWE.487.AF.CHECK_PROTECTED_IN_TOP_LEVEL_CLASS-label=Check top-level class
CWE.487.AF.CHECK_PUBLIC_IN_CHILD_CLASS-label=Check member class
CWE.487.AF.CHECK_PUBLIC_IN_TOP_LEVEL_CLASS-label=Check top-level class
CWE.487.AF.CHECK_STATIC-label=Check non-final "static" fields.
CWE.487.AF.OOP.APF-label=Check "public" field
CWE.487.AF.OOP.APPF-label=Check package-private field
CWE.487.AF.OOP.APROF-label=Check "protected" field
CWE.487.AF.group.0-label=What to Check
CWE.487.AF.group.1-label=Accessibility
CWE.487.AF.msg.1={0} field is declared {1}\: {2}.
CWE.491=CWE-491\: Public cloneable() Method Without Final ('Object Hijack')
CWE.491.CLONE=Make your 'clone()' method "final" for security.
CWE.491.CLONE.msg.1='clone()' method is not "final".
CWE.492=CWE-492\: Use of Inner Class Containing Sensitive Data
CWE.492.INNER=Make all member classes "private".
CWE.492.INNER.CHECK_INTERFACE-label=Check member interfaces
CWE.492.INNER.IGNORE_STATIC-label=Ignore "static" member classes
CWE.492.INNER.msg.1=Member class ''{0}'' is not "private".
CWE.495=CWE-495\: Private Data Structure Returned From A Public Method
CWE.495.RA=Avoid methods that might expose internal representations by returning arrays or other mutable fields
CWE.495.RA.CHECK_ARRAYS-label=Check arrays
CWE.495.RA.CHECK_MUTABLE_TYPES-label=Check mutable types
CWE.495.RA.msg.1=Exposing the internal representation of ''{0}'' through the array ''{1}''.
CWE.495.RA.msg.2=Exposing the internal representation of ''{0}'' through the mutable field ''{1}''.
CWE.496=CWE-496\: Public Data Assigned to Private Array-Typed Field
CWE.496.CAP=Always clone array parameters which are stored to fields
CWE.496.CAP.msg.1=Array parameter ''{0}'' is not cloned before it is stored.
CWE.497=CWE-497\: Exposure of Sensitive System Information to an Unauthorized Control Sphere
CWE.497.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
CWE.497.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
CWE.497.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
CWE.497.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
CWE.497.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
CWE.497.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
CWE.499=CWE-499\: Serializable Class Containing Sensitive Data
CWE.499.SER=Make your classes nonserializeable.
CWE.499.SER.msg.1='writeObject()' method is missing
CWE.499.SER.msg.2='writeObject()' method is not "final".
CWE.499.SER.msg.3=java.io.IOException is not thrown.
CWE.499.SIF=Inspect instance fields of serializable objects to make sure they will not expose sensitive information
CWE.499.SIF.IGNORE_FINAL-label=Ignore "final" fields
CWE.499.SIF.msg.1=Inspect field ''{0}'' to ensure it will not expose sensitive data.
CWE.500=CWE-500\: Public Static Field Not Marked Final
CWE.500.SPFF=Inspect 'static' fields which may have intended to be declared 'static final'.
CWE.500.SPFF.PACKAGE_FIELD-label=package-private
CWE.500.SPFF.PRIMITIVE_CHECK-label=primitive type
CWE.500.SPFF.PRIMITIVE_WRAPPER_CHECK-label=primitive wrapper type
CWE.500.SPFF.PRIVATE_FIELD-label=private
CWE.500.SPFF.PROTECTED_FIELD-label=protected
CWE.500.SPFF.PUBLIC_FIELD-label=public
CWE.500.SPFF.STRING_CHECK-label=java.lang.String
CWE.500.SPFF.group.0-label=Check fields of type
CWE.500.SPFF.group.1-label=Check fields of accessibility
CWE.500.SPFF.msg.1=Field ''{0}'' may have been intended to be "static final".
CWE.502=CWE-502\: Deserialization of Untrusted Data
CWE.502.AUXD=Avoid parsing untrusted data with XMLDecoder
CWE.502.AUXD.msg.1=The XMLDecoder class is used.
CWE.502.MASP=Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes
CWE.502.MASP.msg.1=Method is not "protected"\: ''{0}''
CWE.502.RWAF=Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method
CWE.502.RWAF.CHECK_READ-label=Check 'readObject' methods
CWE.502.RWAF.CHECK_WRITE-label=Check 'writeObject' methods
CWE.502.RWAF.MAX_LEVEL-label=Maximum level of checking allowed
CWE.502.RWAF.msg.1=The ''{0}'' field is not read by the ''readObject()'' method.
CWE.502.RWAF.msg.2=The ''{0}'' field is not written out by the ''writeObject()'' method.
CWE.502.SC=Disable LDAP deserialization
CWE.502.SC.msg.1=The SearchControls object allows deserialization
CWE.502.VOBD=Validate objects before deserialization
CWE.502.VOBD.msg.1=The object read from the ObjectInputStream is not validated before deserialization
CWE.506=CWE-506\: Embedded Malicious Code
CWE.506.HCCK=Avoid using hard-coded cryptographic keys
CWE.506.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
CWE.506.HCCK.msg.1=Hard-coded cryptographic key here.
CWE.511=CWE-511\: Logic/Time Bomb
CWE.511.RDM=Inspect 'Random' objects or 'Math.random()' methods that could indicate areas where malicious code has been placed.
CWE.511.RDM.msg.1=Inspect usage of 'Random' object or method that might lead to unpredictable behavior
CWE.522=CWE-522\: Insufficiently Protected Credentials
CWE.522.CKTS=Avoid using cryptographic keys which are too short.
CWE.522.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
CWE.522.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
CWE.522.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
CWE.522.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
CWE.522.USC=Use the SSL-enabled version of classes when possible.
CWE.522.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
CWE.522.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
CWE.522.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
CWE.522.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
CWE.522.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
CWE.522.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
CWE.522.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
CWE.522.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
CWE.523=CWE-523\: Unprotected Transport of Credentials
CWE.523.USC=Use the SSL-enabled version of classes when possible.
CWE.523.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
CWE.523.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
CWE.523.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
CWE.523.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
CWE.523.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
CWE.523.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
CWE.523.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
CWE.523.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
CWE.532=CWE-532\: Insertion of Sensitive Information into Log File
CWE.532.CONSEN=Do not log confidential or sensitive information
CWE.532.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
CWE.532.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
CWE.532.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
CWE.532.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
CWE.543=CWE-543\: Use of Singleton Pattern Without Synchronization in a Multithreaded Context
CWE.543.IASF=Inspect accesses to "static" fields which may require synchronization
CWE.543.IASF.CHECK_LOCALS-label=Check non-static instance fields
CWE.543.IASF.msg.1=This code may not be thread-safe; setting and accessing the field ''{0}'' may require synchronization.
CWE.543.ILI=Make lazy initializations thread-safe
CWE.543.ILI.msg.1=Lazy initialization is not thread-safe\: {0}.
CWE.546=CWE-546\: Suspicious Comment
CWE.546.TODOJAVA=Ensure that comments do not contain task tags.
CWE.546.TODOJAVA.TABLE_HEADER-label=List of task tags\:
CWE.546.TODOJAVA.TABLE_HEADER.CODSTA__ORG__TODOJAVA__TABLE_HEADER__COLUMN1-label=Is reg expr
CWE.546.TODOJAVA.TABLE_HEADER.CODSTA__ORG__TODOJAVA__TABLE_HEADER__COLUMN2-label=Value
CWE.546.TODOJAVA.msg.1=The code contains a "{0}" comment\: "{1}".
CWE.546.TODOJAVA.msg.2=The code contains a comment matching "{0}" (regular expression)\: "{1}".
CWE.561=CWE-561\: Dead Code
CWE.561.PM=Avoid unused "private" methods
CWE.561.PM.IGNORED_ANNOTATIONS-label=Ignore methods preceded by annotations with qualified names\:
CWE.561.PM.IGNORE_JCONTRACT-label=Ignore methods which are used within a Jcontract tag
CWE.561.PM.IGNORE_LIST-label=Ignore methods with names (in regular expression)\:
CWE.561.PM.msg.1=Unused "private" method\: {0}.
CWE.563=CWE-563\: Assignment to Variable without Use
CWE.563.AURV=Avoid local variables that are never read
CWE.563.AURV.UC.AUV-label=Check for variables which are never used.
CWE.563.AURV.UC.AVNR-label=Check for variables which are assigned but never read.
CWE.563.AURV.msg.1=Variable ''{0}'' is never used.
CWE.563.AURV.msg.2=Variable ''{0}'' is assigned but never read.
CWE.563.PF=Avoid unused "private" fields
CWE.563.PF.CHECK_INIT_NULL-label=Check for fields which are never set to a non-null value.
CWE.563.PF.IGNORE_FINAL-label=Ignore "final" fields
CWE.563.PF.msg.1=Unused "private" field\: {0}.
CWE.563.PF.msg.2="Private" field is never set to a non-null value\: {0}.
CWE.563.UP=Avoid unused parameters
CWE.563.UP.CHECK_EMPTY-label=Check "empty" methods.
CWE.563.UP.CHECK_PACKAGE-label=Check package-private methods.
CWE.563.UP.CHECK_PRIVATE-label=Check "private" methods.
CWE.563.UP.CHECK_PROTECTED-label=Check "protected" methods.
CWE.563.UP.CHECK_PUBLIC-label=Check "public" methods.
CWE.563.UP.CHECK_READ-label=Check that the parameter is read for parameters with primitive types.
CWE.563.UP.msg.1=Unused parameter\: {0}.
CWE.563.UP.msg.2=Unused parameter\: {1}.
CWE.563.UP.msg.3=Unused parameter\: {2}.
CWE.563.UPC=Avoid unused "private" classes or interfaces
CWE.563.UPC.msg.1=Unused "private" {0}\: {1}.
CWE.563.UPPF=Avoid globally unused "public/protected" fields
CWE.563.UPPF.IGNORE_FINAL-label=Ignore "final" fields
CWE.563.UPPF.msg.1=Globally unused {1} field\: {0}.
CWE.568=CWE-568\: finalize() Method Without super.finalize()
CWE.568.FCF=Call 'super.finalize()' from 'finalize()'.
CWE.568.FCF.msg.1=Missing call to ''super.finalize()'' in ''finalize()''.
CWE.570=CWE-570\: Expression is Always False
CWE.570.UCIF=Avoid unnecessary 'if' statements.
CWE.570.UCIF.msg.1=Unconditional "if" statement.
CWE.570.UCIF.msg.2=Unconditionally true "if" statement.
CWE.570.UCIF.msg.3=Unconditionally false "if" statement.
CWE.571=CWE-571\: Expression is Always True
CWE.571.UCIF=Avoid unnecessary 'if' statements.
CWE.571.UCIF.msg.1=Unconditional "if" statement.
CWE.571.UCIF.msg.2=Unconditionally true "if" statement.
CWE.571.UCIF.msg.3=Unconditionally false "if" statement.
CWE.572=CWE-572\: Call to Thread run() instead of start()
CWE.572.IRUN=Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'.
CWE.572.IRUN.CHECK_RUNNABLE-label=Check classes implementing 'java.lang.Runnable'
CWE.572.IRUN.msg.1=''{0}'', which extends 'java.lang.Thread', calls method 'run()'.
CWE.572.IRUN.msg.2=''{0}'', which implements 'java.lang.Runnable' calls method 'run()'.
CWE.576=CWE-576\: EJB Bad Practices\: Use of Java I/O
CWE.576.JIO=Do not use types from the "java.io" package within bean classes.
CWE.576.JIO.DEPTH-label=Maximum depth to check for "java.io" usage
CWE.576.JIO.msg.1=New instance of type ''{0}'' created in a bean class.
CWE.576.JIO.msg.2=Call to "java.io" method ''{0}'' in a bean class.
CWE.576.JIO.msg.3=Method ''{0}'' indirectly uses the "java.io" package in a bean class.
CWE.577=CWE-577\: EJB Bad Practices\: Use of Sockets
CWE.577.AUS=Do not use sockets in EJBs.
CWE.577.AUS.CHECK_SERVERSOCKET-label=Check ServerSockets
CWE.577.AUS.CHECK_SOCKET-label=Check Sockets
CWE.577.AUS.DEPTH-label=Maximum depth to check for socket usage
CWE.577.AUS.msg.1=Socket method ''{0}'' called in a bean.
CWE.577.AUS.msg.2=Call to ''{0}'' indirectly uses a socket.
CWE.578=CWE-578\: EJB Bad Practices\: Use of Class Loader
CWE.578.ACL=Do not access, use, or create a class loader within a bean class.
CWE.578.ACL.DEPTH-label=Maximum depth to check for ClassLoader usage
CWE.578.ACL.msg.1="Class.getClassLoader()" called within a bean class.
CWE.578.ACL.msg.2=ClassLoader method ''{0}'' called within a bean class.
CWE.578.ACL.msg.3=''{0}'' created within a bean class.
CWE.578.ACL.msg.4=Method ''{0}'' indirectly calls "Class.getClassLoader()".
CWE.578.ACL.msg.5=Method ''{0}'' indirectly calls ClassLoader method.
CWE.578.ACL.msg.6=Method ''{0}'' indirectly creates a ClassLoader.
CWE.579=CWE-579\: J2EE Bad Practices\: Non-serializable Object Stored in Session
CWE.579.ONS=Ensure method arguments are serializable
CWE.579.ONS.CHECK_INTERFACES-label=Check implementations of interface method arguments (slow)
CWE.579.ONS.IGNORE_PARAM_COLLECTION-label=Ignore Collections or Maps with Serializable type arguments
CWE.579.ONS.IGNORE_TYPE_LIST-label=Ignore method arguments of the following types (specify as regular expression)\:
CWE.579.ONS.SERIAL_LIST-label=List of methods to be checked\: 
CWE.579.ONS.SERIAL_LIST.PB__API__ONS__SERIAL_LIST__COLUMN1-label=Type
CWE.579.ONS.SERIAL_LIST.PB__API__ONS__SERIAL_LIST__COLUMN2-label=Method
CWE.579.ONS.msg.1=This object of type ''{0}'' may not be serializable.
CWE.579.ONS.msg.2=This object of type ''{0}'' may not be completely serializable.
CWE.579.SNSO=Do not store non-serializable objects as HttpSession attributes
CWE.579.SNSO.CHECK_ABSTRACT-label=Check abstract classes
CWE.579.SNSO.CHECK_COLLECTION-label=Check Collections
CWE.579.SNSO.CHECK_INTERFACE-label=Check interfaces
CWE.579.SNSO.CHECK_MAP-label=Check Maps
CWE.579.SNSO.IGNORE_NULL-label=Ignore "null" values
CWE.579.SNSO.msg.1=Argument ''{0}'' to method "setAttribute" is non-serializable.
CWE.580=CWE-580\: clone() Method Without super.clone()
CWE.580.SCLONE=Call 'super.clone()' in all 'clone()' methods.
CWE.580.SCLONE.msg.1='clone()' method does not call 'super.clone()'
CWE.581=CWE-581\: Object Model Violation\: Just One of Equals and Hashcode Defined
CWE.581.OVERRIDE=Override 'Object.hashCode()' when you override 'Object.equals()' and vice versa
CWE.581.OVERRIDE.CHECK_INHERITED-label=Include methods inherited from "abstract" superclasses in the checking.
CWE.581.OVERRIDE.CODSTA.OVERRIDE-label=Check that 'hashCode()' is overridden whenever 'equals()' is overridden.
CWE.581.OVERRIDE.CODSTA.OVERRIDE2-label=Check that 'equals()' is overridden whenever 'hashCode()' is overridden.
CWE.581.OVERRIDE.msg.1=Class overriding ''equals(Object)'' does not override ''hashCode()''\: {0}.
CWE.581.OVERRIDE.msg.2=Class inherits overridden version of ''equals(Object)'' but does not override ''hashCode()''\: {0}.
CWE.581.OVERRIDE.msg.3=Class overriding ''hashCode()'' does not override ''equals(Object)''\: {0}.
CWE.581.OVERRIDE.msg.4=Class inherits overridden version of ''hashCode()'' but does not override ''equals(Object)''\: {0}.
CWE.582=CWE-582\: Array Declared Public, Final, and Static
CWE.582.IMM=Ensure "static" "final" fields are immutable.
CWE.582.IMM.CHECK_PRIVATE-label=Report mutable non-final "static" fields that are not declared "private"
CWE.582.IMM.IGNORE_TYPES-label=Ignore types
CWE.582.IMM.msg.1="static" "final" field ''{0}'' of ''{1}'' type is mutable.
CWE.582.IMM.msg.2="static" "final" field ''{0}'' of ''{1}'' type is mutable, since array elements could be modified even if the array is declared as "final".
CWE.582.IMM.msg.3="static" mutable field ''{0}'' of ''{1}'' type is not declared "private".
CWE.582.PSFA=Avoid using "public static final" array fields
CWE.582.PSFA.msg.1=Mutable "public static final" array field\: ''{0}''.
CWE.583=CWE-583\: finalize() Method Declared Public
CWE.583.MFP=Give "finalize()" methods "protected" access.
CWE.583.MFP.msg.1=This "finalize()" method has "public" access
CWE.584=CWE-584\: Return Inside Finally Block
CWE.584.ARCF=Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block.
CWE.584.ARCF.ALSO_CATCH-label=Only flag return statements when they are in try-catch blocks
CWE.584.ARCF.msg.1=Avoid multiple 'return' if a 'return' is present inside finally block.
CWE.585=CWE-585\: Empty Synchronized Block
CWE.585.SNE=Avoid empty "synchronized" statements.
CWE.585.SNE.msg.1=Avoid empty synchronized statement.
CWE.586=CWE-586\: Explicit Call to Finalize()
CWE.586.NCF=Do not call 'finalize()' explicitly.
CWE.586.NCF.msg.1='finalize()' called explicitly.
CWE.59=CWE-59\: Improper Link Resolution Before File Access ('Link Following')
CWE.59.FOLLOW=Ensure that file target paths retrieved by resolving symbolic links are safe
CWE.59.FOLLOW.msg.1=Verify that the path retrieved by using FileVisitOption.FOLLOW_LINKS is within the intended control sphere
CWE.59.LNK=Validate shortcut target paths before use
CWE.59.LNK.VALIDATE_METHODS-label=Validating methods
CWE.59.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN1-label=Type (qualified name in regular expressions)
CWE.59.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN2-label=Method name (in regular expressions)
CWE.59.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN3-label=Verify that resolveTarget() is checked by this method
CWE.59.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN4-label=Verify that resolveTarget() is declared in this method
CWE.59.LNK.msg.1=The value returned by resolveTarget() is not validated
CWE.594=CWE-594\: J2EE Framework\: Saving Unserializable Objects to Disk
CWE.594.SIVS=Ensure instance variables of @Stateful beans are Serializable.
CWE.594.SIVS.CHECK_FOLLOWING-label=Check the following\:
CWE.594.SIVS.CHECK_FOLLOWING.0-label=Check annotations
CWE.594.SIVS.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
CWE.594.SIVS.SCAN_TYPE-label=Check deployment descriptors in the following location\:
CWE.594.SIVS.SCAN_TYPE.0-label=Check project
CWE.594.SIVS.SCAN_TYPE.1-label=Check package
CWE.594.SIVS.msg.1=Instance variable ''{0}'' of @Stateful bean ''{1}'' is not Serializable.
CWE.595=CWE-595\: Comparison of Object References Instead of Object Contents
CWE.595.UEIC=Do not use '\=\=' or '\!\=' to compare objects
CWE.595.UEIC.CHECK_ARRAYS-label=Check for calls to the 'equals()' method of class Object on arrays
CWE.595.UEIC.CHECK_EQUALS_METHOD-label=Check comparisons in equals() methods
CWE.595.UEIC.CHECK_STATICFINAL-label=Check comparisons to "static" "final" objects
CWE.595.UEIC.IGNORE_TYPES-label=Allow "\=\=" and "\!\=" operators when compared object is type\:
CWE.595.UEIC.SCOPE-label=Scope of checking\:
CWE.595.UEIC.SCOPE.0-label=All objects
CWE.595.UEIC.SCOPE.1-label=Only 'String' objects 
CWE.595.UEIC.msg.1="\=\=" is used when comparing Objects. 'equals()' should be used instead.
CWE.595.UEIC.msg.2="\!\=" is used when comparing Objects. 'equals()' should be used instead.
CWE.595.UEIC.msg.3="\=\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
CWE.595.UEIC.msg.4="\!\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
CWE.595.UEIC.msg.5=The 'equals()' method of class 'Object' is used when comparing array Objects. 'java.util.Arrays.equals (Object[], Object[])' should be used instead.
CWE.600=CWE-600\: Uncaught Exception in Servlet
CWE.600.CETS=Catch all exceptions which may be thrown within Servlet methods
CWE.600.CETS.msg.1=The method ''{0}()'' is declared to throw the exception type ''{1}'', but this exception is not caught.
CWE.601=CWE-601\: URL Redirection to Untrusted Site ('Open Redirect')
CWE.601.UCO=Use a Context Object to manage HTTP request parameters
CWE.601.UCO.msg.1=Consider using a "Context" Object instead of calling ''{0}()''.
CWE.601.VRD=Encapsulate all redirect and forward URLs with a validation function
CWE.601.VRD.VALIDATE_METHODS-description=Validation methods (in regular expressions) [qualified name of declaring type\#method name]
CWE.601.VRD.VALIDATE_METHODS-label=Validation methods (in regular expressions)
CWE.601.VRD.msg.1=No validation check in redirect URL.
CWE.601.VRD.msg.2=No validation check in forward URL.
CWE.605=CWE-605\: Multiple Binds to the Same Port
CWE.605.HCNA=Do not hard-code IP addresses and port numbers.
CWE.605.HCNA.IP-label=Do not hard-code IP addresses
CWE.605.HCNA.PORT-label=Do not hard-code port numbers
CWE.605.HCNA.msg.1=Hard-coded IP address ''{0}''.
CWE.605.HCNA.msg.2=Hard-coded port number ''{0}''.
CWE.607=CWE-607\: Public Static Final Field References Mutable Object
CWE.607.IMM=Ensure "static" "final" fields are immutable.
CWE.607.IMM.CHECK_PRIVATE-label=Report mutable non-final "static" fields that are not declared "private"
CWE.607.IMM.IGNORE_TYPES-label=Ignore types
CWE.607.IMM.msg.1="static" "final" field ''{0}'' of ''{1}'' type is mutable.
CWE.607.IMM.msg.2="static" "final" field ''{0}'' of ''{1}'' type is mutable, since array elements could be modified even if the array is declared as "final".
CWE.607.IMM.msg.3="static" mutable field ''{0}'' of ''{1}'' type is not declared "private".
CWE.607.RMO=Avoid referencing mutable fields
CWE.607.RMO.IGNORE_LIST-label=Ignore fields of the following classes\: (Glob expression)
CWE.607.RMO.PACKAGE_FIELD-label=package-private
CWE.607.RMO.PRIVATE_FIELD-label=private
CWE.607.RMO.PROTECTED_FIELD-label=protected
CWE.607.RMO.PUBLIC_FIELD-label=public
CWE.607.RMO.STATIC_FINAL_FIELD_ONLY-label=Check "static final" fields only
CWE.607.RMO.group.0-label=Check fields of accessibility
CWE.607.RMO.msg.1=''{0}'' is a mutable field.
CWE.609=CWE-609\: Double-Checked Locking
CWE.609.DCL=Avoid unsafe implementations of the "double-checked locking" pattern.
CWE.609.DCL.msg.1=The "double-checked locking" pattern is used; this pattern can cause unexpected problems when compiler optimizations are performed.
CWE.61=CWE-61\: UNIX Symbolic Link (Symlink) Following
CWE.61.FOLLOW=Ensure that file target paths retrieved by resolving symbolic links are safe
CWE.61.FOLLOW.msg.1=Verify that the path retrieved by using FileVisitOption.FOLLOW_LINKS is within the intended control sphere
CWE.611=CWE-611\: Improper Restriction of XML External Entity Reference
CWE.611.DXXE=Disable XML external entity injection.
CWE.611.DXXE.msg.1=XXE injection has not been disabled.
CWE.611.DXXE.msg.2=XXE injection has not been disabled. Ensure your parser version allows you to configure the required options.
CWE.613=CWE-613\: Insufficient Session Expiration
CWE.613.RUIM=Ensure proper session expiration
CWE.613.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
CWE.613.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
CWE.614=CWE-614\: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute
CWE.614.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
CWE.614.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
CWE.614.UOSC.msg.2=Make sure that the appropriate version of library is used.
CWE.617=CWE-617\: Reachable Assertion
CWE.617.ASSERT=Do not use assertions in production code
CWE.617.ASSERT.PUBLIC_METHOD_ONLY-label=Check only public methods
CWE.617.ASSERT.msg.1='assert' statement should not be used in production code.
CWE.64=CWE-64\: Windows Shortcut Following (.LNK)
CWE.64.LNK=Validate shortcut target paths before use
CWE.64.LNK.VALIDATE_METHODS-label=Validating methods
CWE.64.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN1-label=Type (qualified name in regular expressions)
CWE.64.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN2-label=Method name (in regular expressions)
CWE.64.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN3-label=Verify that resolveTarget() is checked by this method
CWE.64.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN4-label=Verify that resolveTarget() is declared in this method
CWE.64.LNK.msg.1=The value returned by resolveTarget() is not validated
CWE.652=CWE-652\: Improper Neutralization of Data within XQuery Expressions ('XQuery Injection')
CWE.652.XPIJ=Avoid XPath injection when evaluating XPath queries
CWE.652.XPIJ.CHECK_VAR_RESOLVER-label=Check if 'XPathVariableResolver' is not set in XPath objects
CWE.652.XPIJ.msg.1=Avoid using variable ''{0}'' in XPath query.
CWE.652.XPIJ.msg.2='XPathVariableResolver' is not set in XPath variable ''{0}''.
CWE.667=CWE-667\: Improper Locking
CWE.667.CLOSE=Unrestricted lock resource
CWE.667.CLOSE.TABLE_HEADER-label=List of classes responsible for the resource and resource closing methods
CWE.667.CLOSE.TABLE_HEADER.PB__CLOSE__TABLE_HEADER__COLUMN1-label=Class name
CWE.667.CLOSE.TABLE_HEADER.PB__CLOSE__TABLE_HEADER__COLUMN2-label=Method name
CWE.667.CLOSE.msg.1=Variable ''{0}'' may not have a close resource.
CWE.667.CLOSE.msg.2=Variable ''{0}'' is rewrite without close resource.
CWE.668=CWE-668\: Exposure of Resource to Wrong Sphere
CWE.668.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
CWE.668.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
CWE.668.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
CWE.668.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
CWE.668.APIBS=Inspect usage of standard API calls that bypass security
CWE.668.APIBS.CHECKED_METHODS-label=Check the following methods\:
CWE.668.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
CWE.668.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
CWE.668.APIBS.msg.1=API call ''{0}'' has potential to bypass security.
CWE.668.ATF=Avoid temporary files
CWE.668.ATF.msg.1=A temporary file has been created
CWE.668.CKTS=Avoid using cryptographic keys which are too short.
CWE.668.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
CWE.668.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
CWE.668.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
CWE.668.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
CWE.668.CLONE=Make your 'clone()' method "final" for security.
CWE.668.CLONE.msg.1='clone()' method is not "final".
CWE.668.CONSEN=Do not log confidential or sensitive information
CWE.668.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
CWE.668.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
CWE.668.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
CWE.668.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
CWE.668.EWSSEC=Avoid debug information from Spring Security framework to logs
CWE.668.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
CWE.668.IDP=Avoid setting the write or execute file permissions to unintended users
CWE.668.IDP.msg.1=The ''{0}'' method is set to grant the {1} permissions to everybody.
CWE.668.IMM=Ensure "static" "final" fields are immutable.
CWE.668.IMM.CHECK_PRIVATE-label=Report mutable non-final "static" fields that are not declared "private"
CWE.668.IMM.IGNORE_TYPES-label=Ignore types
CWE.668.IMM.msg.1="static" "final" field ''{0}'' of ''{1}'' type is mutable.
CWE.668.IMM.msg.2="static" "final" field ''{0}'' of ''{1}'' type is mutable, since array elements could be modified even if the array is declared as "final".
CWE.668.IMM.msg.3="static" mutable field ''{0}'' of ''{1}'' type is not declared "private".
CWE.668.INNER=Make all member classes "private".
CWE.668.INNER.CHECK_INTERFACE-label=Check member interfaces
CWE.668.INNER.IGNORE_STATIC-label=Ignore "static" member classes
CWE.668.INNER.msg.1=Member class ''{0}'' is not "private".
CWE.668.MFP=Give "finalize()" methods "protected" access.
CWE.668.MFP.msg.1=This "finalize()" method has "public" access
CWE.668.PBRTE=Always specify absolute paths to execute commands
CWE.668.PBRTE.msg.1=The specified command is not an absolute path with separators
CWE.668.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
CWE.668.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
CWE.668.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
CWE.668.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
CWE.668.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
CWE.668.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
CWE.668.PSFA=Avoid using "public static final" array fields
CWE.668.PSFA.msg.1=Mutable "public static final" array field\: ''{0}''.
CWE.668.RA=Avoid methods that might expose internal representations by returning arrays or other mutable fields
CWE.668.RA.CHECK_ARRAYS-label=Check arrays
CWE.668.RA.CHECK_MUTABLE_TYPES-label=Check mutable types
CWE.668.RA.msg.1=Exposing the internal representation of ''{0}'' through the array ''{1}''.
CWE.668.RA.msg.2=Exposing the internal representation of ''{0}'' through the mutable field ''{1}''.
CWE.668.SCHTTP=Mark cookies as HttpOnly
CWE.668.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
CWE.668.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
CWE.668.SER=Make your classes nonserializeable.
CWE.668.SER.msg.1='writeObject()' method is missing
CWE.668.SER.msg.2='writeObject()' method is not "final".
CWE.668.SER.msg.3=java.io.IOException is not thrown.
CWE.668.SIF=Inspect instance fields of serializable objects to make sure they will not expose sensitive information
CWE.668.SIF.IGNORE_FINAL-label=Ignore "final" fields
CWE.668.SIF.msg.1=Inspect field ''{0}'' to ensure it will not expose sensitive data.
CWE.668.SIO=Avoid calling print methods of 'System.err' or 'System.out'
CWE.668.SIO.METHOD_SKIP_LIST-label=Exclude methods
CWE.668.SIO.SCANNED_CLASS_TABLE-label=Include classes
CWE.668.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
CWE.668.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
CWE.668.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
CWE.668.SPFF=Inspect 'static' fields which may have intended to be declared 'static final'.
CWE.668.SPFF.PACKAGE_FIELD-label=package-private
CWE.668.SPFF.PRIMITIVE_CHECK-label=primitive type
CWE.668.SPFF.PRIMITIVE_WRAPPER_CHECK-label=primitive wrapper type
CWE.668.SPFF.PRIVATE_FIELD-label=private
CWE.668.SPFF.PROTECTED_FIELD-label=protected
CWE.668.SPFF.PUBLIC_FIELD-label=public
CWE.668.SPFF.STRING_CHECK-label=java.lang.String
CWE.668.SPFF.group.0-label=Check fields of type
CWE.668.SPFF.group.1-label=Check fields of accessibility
CWE.668.SPFF.msg.1=Field ''{0}'' may have been intended to be "static final".
CWE.668.SYSP=Do not access or set System properties.
CWE.668.SYSP.msg.1={0} the System property "{1}".
CWE.668.SYSP.msg.2={0} a System property.
CWE.668.SYSP.msg.3={0} the System properties.
CWE.668.UCO=Use a Context Object to manage HTTP request parameters
CWE.668.UCO.msg.1=Consider using a "Context" Object instead of calling ''{0}()''.
CWE.668.USC=Use the SSL-enabled version of classes when possible.
CWE.668.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
CWE.668.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
CWE.668.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
CWE.668.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
CWE.668.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
CWE.668.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
CWE.668.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
CWE.668.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
CWE.674=CWE-674\: Uncontrolled Recursion
CWE.674.FLRC=Avoid infinite recursive method calls
CWE.674.FLRC.IGNORE_COND_STMT-label=Allow recursive calls within the first statement if the call is in the "then" or "else" part of a conditional expression.
CWE.674.FLRC.IGNORE_OVERRIDDEN-label=Ignore calls to potentially overridden methods where the calling object is not "this".
CWE.674.FLRC.ONLY_FIRST_STMT-label=Only check the first statement of each method.
CWE.674.FLRC.msg.1=Method ''{0}'' {1}calls itself within the first statement of its definition, which may result in an infinite recursion.
CWE.674.FLRC.msg.2=Method ''{0}'' {1}calls itself using the same arguments that were passed in, which may result in an infinite recursion.
CWE.674.FLRC.msg.3=Method ''{0}'' {1}calls itself and does not have any parameters, which may result in an infinite recursion.
CWE.676=CWE-676\: Use of Potentially Dangerous Function
CWE.676.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
CWE.676.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
CWE.680=CWE-680\: Integer Overflow to Buffer Overflow
CWE.680.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
CWE.680.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
CWE.681=CWE-681\: Incorrect Conversion between Numeric Types
CWE.681.CLP=Do not cast primitive data types to lower precision
CWE.681.CLP.msg.1="{0}" type cast to lower precision "{1}" type.
CWE.681.IDCD=Do not assign the result of an integer division to a floating point variable
CWE.681.IDCD.msg.1=Assigning the result of this integer division to a floating point variable will not increase the precision of the result.
CWE.691=CWE-691\: Insufficient Control Flow Management
CWE.691.ANL=Avoid using negative logic in if-else statement
CWE.691.ANL.IGNORE_SPECIAL_CASES-label=Ignore special cases (see rule description for definition)
CWE.691.ANL.msg.1=Negative logic is used in if-else logic, revising the logic is suggested.
CWE.704=CWE-704\: Incorrect Type Conversion or Cast
CWE.704.AGBPT=Avoid conversions from parameterized types to raw types
CWE.704.AGBPT.msg.1=Do not assign an expression with a parameterized type to a variable with a non-parameterized type.
CWE.704.CPTS=Do not convert a value to a String by concatenating the empty String.
CWE.704.CPTS.CHECK_TYPE-label=What to check
CWE.704.CPTS.CHECK_TYPE.0-label=Check all types
CWE.704.CPTS.CHECK_TYPE.1-label=Check primitive types
CWE.704.CPTS.msg.1=The value ''{0}'' is converted to a String here by concatenation with the empty String.
CWE.732=CWE-732\: Incorrect Permission Assignment for Critical Resource
CWE.732.IDP=Avoid setting the write or execute file permissions to unintended users
CWE.732.IDP.msg.1=The ''{0}'' method is set to grant the {1} permissions to everybody.
CWE.732.SCHTTP=Mark cookies as HttpOnly
CWE.732.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
CWE.732.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
CWE.749=CWE-749\: Exposed Dangerous Method or Function
CWE.749.DPAM=Declare package-private methods as inaccessible as possible
CWE.749.DPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
CWE.749.DPAM.CHECK_LOCAL-label=Check methods in local classes
CWE.749.DPAM.msg.1=Method ''{0}()'' should be declared {1}.
CWE.749.DPAM.msg.2=Constructor ''{0}()'' should be declared {1}.
CWE.749.DPPM=Declare "public/protected" methods as inaccessible as possible
CWE.749.DPPM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
CWE.749.DPPM.CHECK_LOCAL-label=Check methods in local classes
CWE.749.DPPM.IGNORE_OVERLOADED-label=Ignore "overloaded" methods
CWE.749.DPPM.IGNORE_PROTECTED_PP-label=Ignore "protected" methods which can be made package-private
CWE.749.DPPM.msg.1=Method ''{0}()'' should be declared {1}.
CWE.749.DPPM.msg.2=Constructor ''{0}()'' should be declared {1}.
CWE.749.SPAM=Declare a package-private method "final" if it is not overridden
CWE.749.SPAM.CHECK_ABSTRACT-label=Check methods in abstract classes
CWE.749.SPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
CWE.749.SPAM.CHECK_LOCAL-label=Check methods in local classes
CWE.749.SPAM.CHECK_STATIC_METHOD-label=Check static methods
CWE.749.SPAM.CHECK_UNUSED-label=Check unused methods
CWE.749.SPAM.msg.1=Method ''{0}()'' should be declared "final".
CWE.755=CWE-755\: Improper Handling of Exceptional Conditions
CWE.755.CIET=Do not catch InterruptedException except in classes extending Thread.
CWE.755.CIET.ALLOW_LOGGING-label=Allow logging without rethrowing or resetting status.
CWE.755.CIET.ALLOW_RETHROW-label=Allow rethrowing an exception of any type.
CWE.755.CIET.LOGGER_LIST-label=Specify loggers with fully qualified name.
CWE.755.CIET.msg.1=Catching InterruptedException in class\: ''{0}'', which does not extend Thread.
CWE.759=CWE-759\: Use of a One-Way Hash without a Salt
CWE.759.MDSALT=Use hash functions with a salt
CWE.759.MDSALT.msg.1=A salt is not added to the digest
CWE.770=CWE-770\: Allocation of Resources Without Limits or Throttling
CWE.770.ISTART=Do not call the 'start()' method directly on Thread class instances 
CWE.770.ISTART.CHECK_ONLY_IN_LOOPS-label=Ignore method calls outside of loops
CWE.770.ISTART.msg.1=A call to the Thread.start() method.
CWE.772=CWE-772\: Missing Release of Resource after Effective Lifetime
CWE.772.CLOSE=Unrestricted lock resource
CWE.772.CLOSE.TABLE_HEADER-label=List of classes responsible for the resource and resource closing methods
CWE.772.CLOSE.TABLE_HEADER.PB__CLOSE__TABLE_HEADER__COLUMN1-label=Class name
CWE.772.CLOSE.TABLE_HEADER.PB__CLOSE__TABLE_HEADER__COLUMN2-label=Method name
CWE.772.CLOSE.msg.1=Variable ''{0}'' may not have a close resource.
CWE.772.CLOSE.msg.2=Variable ''{0}'' is rewrite without close resource.
CWE.778=CWE-778\: Insufficient Logging
CWE.778.ENFL=Ensure all sensitive method invocations are logged
CWE.778.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
CWE.778.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
CWE.778.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
CWE.778.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
CWE.778.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
CWE.778.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
CWE.778.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
CWE.778.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
CWE.778.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
CWE.778.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
CWE.778.ENFL.tab.LOG_TAG-label=Loggers
CWE.778.ENFL.tab.POST_LOG_TAG-label=Next statement
CWE.778.ENFL.tab.PRE_LOG_TAG-label=Previous statement
CWE.79=CWE-79\: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
CWE.79.ARXML=Process XML and HTML with a library instead of raw text 
CWE.79.ARXML.msg.1=''{0}'' is processed using raw text instead of a library
CWE.798=CWE-798\: Use of Hard-coded Credentials
CWE.798.HCCK=Avoid using hard-coded cryptographic keys
CWE.798.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
CWE.798.HCCK.msg.1=Hard-coded cryptographic key here.
CWE.798.HCCS=Avoid passing hardcoded usernames/passwords/URLs to database connection methods.
CWE.798.HCCS.CONNECT_METHS-description=Additional Database Connection Methods (in form of &lt;qualified name of declaring type&gt;\#&lt;method name&gt;)
CWE.798.HCCS.CONNECT_METHS-label=Additional Database Connection Methods
CWE.798.HCCS.msg.1=This call to ''{0}()'' may be dangerous because it passes in only hard-coded Strings.
CWE.798.HCCS.msg.2=This call to ''{0}()'' may be dangerous because it uses a hard-coded password.
CWE.80=CWE-80\: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)
CWE.80.ARXML=Process XML and HTML with a library instead of raw text 
CWE.80.ARXML.msg.1=''{0}'' is processed using raw text instead of a library
CWE.806=CWE-806\: Buffer Access Using Size of Source Buffer
CWE.806.BUSSB=Prevent external processes from blocking on output or error streams
CWE.806.BUSSB.msg.1=The error stream of the process is not emptied or redirected
CWE.806.BUSSB.msg.2=The output stream of the process is not emptied or redirected
CWE.807=CWE-807\: Reliance on Untrusted Inputs in a Security Decision
CWE.807.HGRSI=Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class
CWE.807.HGRSI.msg.1=The 'getRequestedSessionId' method may return untrusted data
CWE.807.PLC=Avoid storing sensitive data in plaintext in a cookie
CWE.807.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
CWE.807.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
CWE.807.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
CWE.807.PLC.msg.1=Do not store important to safety data in cookie.
CWE.807.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
CWE.807.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
CWE.807.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
CWE.807.UOSC.msg.2=Make sure that the appropriate version of library is used.
CWE.81=CWE-81\: Improper Neutralization of Script in an Error Message Web Page
CWE.81.ARXML=Process XML and HTML with a library instead of raw text 
CWE.81.ARXML.msg.1=''{0}'' is processed using raw text instead of a library
CWE.83=CWE-83\: Improper Neutralization of Script in Attributes in a Web Page
CWE.83.ARXML=Process XML and HTML with a library instead of raw text 
CWE.83.ARXML.msg.1=''{0}'' is processed using raw text instead of a library
CWE.832=CWE-832\: Unlock of a Resource that is not Locked
CWE.832.LORD=Ensure that nested locks are ordered correctly
CWE.832.LORD.msg.1=Lock ''{0}'' should not be wrapped by lock ''{1}''.
CWE.833=CWE-833\: Deadlock
CWE.833.CSFS=Do not cause deadlocks by calling a "synchronized" method from a "synchronized" method
CWE.833.CSFS.msg.1=Calling "synchronized" method from a "synchronized" method.
CWE.833.RLF=Release Locks in a "finally" block.
CWE.833.RLF.msg.1=Lock ''{0}'' not released from "finally" block.
CWE.833.STR=Do not perform synchronization nor call semaphore methods on an Object's 'this' reference
CWE.833.STR.CHECK_METHODS-label=Check 'wait()', 'notify()', and 'notifyAll()' calls on 'this'
CWE.833.STR.CHECK_SYNCHRONIZE-label=Check synchronize on 'this'
CWE.833.STR.msg.1=The semaphore method ''{0}'' is invoked on the ''this'' reference; this may break multithread correctness.
CWE.833.STR.msg.2=This 'synchronized' block performs synchronization on the 'this' reference; this may break multithread correctness.
CWE.833.UWNA=Use 'wait()' and 'notifyAll()' instead of polling loops.
CWE.833.UWNA.msg.1=Found 'sleep()' in a loop.  You may want to use 'wait()' and 'notifyAll()' instead
CWE.835=CWE-835\: Loop with Unreachable Exit Condition ('Infinite Loop')
CWE.835.AIL=Avoid infinite loops
CWE.835.AIL.DEPTH_ITERATOR-label=Maximum depth of checking for nested calls to 'Iterator.next()' or 'Iterator.remove()'
CWE.835.AIL.msg.1=Possible infinite loop\: the loop's condition will always evaluate to "true", and there is no other exit from the loop.
CWE.835.AIL.msg.2=Possible infinite loop\: the loop's condition will always evaluate to 'true' and there is no other exit from the loop.
CWE.835.AIL.msg.3=Possible infinite loop\: the loop''s condition uses the variable "{0}", but this variable is not modified within the loop''s body.
CWE.835.PCIF=Declare "for" loops with an initializer, conditional, and updater statements
CWE.835.PCIF.CHECK_CONDITIONAL-label=Check conditional
CWE.835.PCIF.CHECK_INITIALIZER-label=Check initializer
CWE.835.PCIF.CHECK_UPDATER-label=Check updater
CWE.835.PCIF.IGNORE_ENUMERATION-label=Ignore "for" loops with 'Enumeration' or 'Iterator' method "has..." as condition.
CWE.835.PCIF.IGNORE_INFINITE_LOOP-label=Ignore infinite "for" loops in form of 'for (;;)'
CWE.835.PCIF.msg.1=Missing conditional expression in "for" loop.
CWE.835.PCIF.msg.2=Missing updater expression in "for" loop.
CWE.835.PCIF.msg.3=Missing initializer expression in "for" loop.
CWE.838=CWE-838\: Inappropriate Encoding for Output Context
CWE.838.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
CWE.838.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
CWE.838.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
CWE.838.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
CWE.838.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
CWE.838.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
CWE.838.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
CWE.841=CWE-841\: Improper Enforcement of Behavioral Workflow
CWE.841.PERMIT=Avoid EJB 3 methods without security annotations
CWE.841.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
CWE.843=CWE-843\: Access of Resource Using Incompatible Type ('Type Confusion')
CWE.843.EQUS=Do not call 'equals()' methods that always return false
CWE.843.EQUS.msg.1=''equals()'' method would always return false, since calling object is type ''{0}'' and argument is type ''{1}''.
CWE.843.EQUS.msg.2=''equals()'' method would always return false, since calling object is type anonymous class that extends ''{0}'' and argument is type ''{1}''.
CWE.843.EQUS.msg.3='equals()' method would always return false, since argument is null.
CWE.843.EQUS.msg.4=''equals()'' method would always return false, since calling object is type ''{0}'' and argument is type ''{1}''.
CWE.843.EQUS.msg.5=''equals()'' method would always return false, since calling object and argument do not refer to the same object.
CWE.862=CWE-862\: Missing Authorization
CWE.862.PERMIT=Avoid EJB 3 methods without security annotations
CWE.862.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
CWE.89=CWE-89\: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')
CWE.89.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
CWE.89.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
CWE.94=CWE-94\: Improper Control of Generation of Code ('Code Injection')
CWE.94.ASAPI=Prevent the scripting API from executing untrusted code
CWE.94.ASAPI.REPORT_ON_EVAL-label=Report violation on eval method invocation
CWE.94.ASAPI.msg.1=Ensure that the use of the scripting API does not allow untrusted dynamic code execution.
CWE.94.ASAPI.msg.2=The eval() method is called on the scriptEngine object and may execute untrusted dynamic code.
CWE.94.DCEMSL=Avoid untrusted input when logging messages with Seam Logging API
CWE.94.DCEMSL.CLASS_FIELDS_ARE_SAFE-label=Consider class fields to be secure
CWE.94.DCEMSL.msg.1=The ''{0}'' method called on the object of the Log class takes a dangerous argument.
DBC=Design by Contract
DBC.CPT=Do not include a postcondition saying that "$result\!\=null" in methods which can return null
DBC.CPT.msg.1=This method's postcondition says that it cannot return null, but it contains the statement "return null;".
DBC.IGM=Provide an '@invariant' contract for all getter methods
DBC.IGM.msg.1=getter method without an '@invariant' contract\: {0}().
DBC.IMNR=Do not invoke a method on a reference that is not guaranteed to be non-null
DBC.IMNR.msg.1=The return value of ''{0}()'' is not guaranteed by a DbC annotation to be non-null.
DBC.IPAN=Include a '@pre \!\= null' tag for each parameter that is dereferenced before being checked for null.
DBC.IPAN.CHECK_PACKAGE-label=Check "package-private" methods
DBC.IPAN.CHECK_PRIVATE-label=Check "private" methods
DBC.IPAN.CHECK_PROTECTED-label=Check "protected" methods
DBC.IPAN.CHECK_PUBLIC-label=Check "public" methods
DBC.IPAN.msg.1=Parameter ''{0}'' dereferenced before being checked for null.
DBC.RCC=Avoid rechecking @pre and @post conditions
DBC.RCC.CHECK_POST-label=Check @post conditions
DBC.RCC.CHECK_PRE-label=Check @pre conditions
DBC.RCC.msg.1=Parameter ''{0}'' checked for null, but @pre condition declares it to not be.
DBC.RCC.msg.2=Return value ''{0}'' of method ''{1}'' checked for null, but @post condition declares it to not be.
DBC.SYNTAX=Use correct syntax in the DbC contracts
DBC.SYNTAX.msg.1=invalid "@concurrency" tag.
DBC.SYNTAX.msg.2="@concurrency" tag only applies to methods.
DBC.SYNTAX.msg.3=use "@concurrency guarded" tag for "synchronized" method\: {0}.
DBC.SYNTAX.msg.4="@concurrency guarded" tag is used on a method without synchronization.
DBC.SYNTAX.msg.5=methods should only have one "@concurrency" tag".
DBC.SYNTAX.msg.6=exception name is missing in "@throws" tag.
DBC.SYNTAX.msg.7="@throws" tag is not followed by the name of an exception class\: {0}.
DBC.SYNTAX.msg.8="@verbose" tag is not followed by the verbose statement.
EJB=Enterprise JavaBeans
EJB.ACL=Do not access, use, or create a class loader within a bean class.
EJB.ACL.DEPTH-label=Maximum depth to check for ClassLoader usage
EJB.ACL.msg.1="Class.getClassLoader()" called within a bean class.
EJB.ACL.msg.2=ClassLoader method ''{0}'' called within a bean class.
EJB.ACL.msg.3=''{0}'' created within a bean class.
EJB.ACL.msg.4=Method ''{0}'' indirectly calls "Class.getClassLoader()".
EJB.ACL.msg.5=Method ''{0}'' indirectly calls ClassLoader method.
EJB.ACL.msg.6=Method ''{0}'' indirectly creates a ClassLoader.
EJB.AMSC=Do not access or modify security configuration objects.
EJB.AMSC.msg.1=Security method was called
EJB.AUS=Do not use sockets in EJBs.
EJB.AUS.CHECK_SERVERSOCKET-label=Check ServerSockets
EJB.AUS.CHECK_SOCKET-label=Check Sockets
EJB.AUS.DEPTH-label=Maximum depth to check for socket usage
EJB.AUS.msg.1=Socket method ''{0}'' called in a bean.
EJB.AUS.msg.2=Call to ''{0}'' indirectly uses a socket.
EJB.EJB3=Enterprise JavaBeans 3
EJB.EJB3.AIA=Avoid ignored or invalid annotations.
EJB.EJB3.AIA.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.AIA.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.AIA.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.AIA.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.AIA.SCAN_TYPE.0-label=Check project
EJB.EJB3.AIA.SCAN_TYPE.1-label=Check package
EJB.EJB3.AIA.msg.1=''{0}'' is ignored for {1} bean ''{2}''.
EJB.EJB3.AIA.msg.2=''{0}'' is ignored for {1} bean ''{2}'' with ''{3}''.
EJB.EJB3.AISE=Avoid IllegalStateException when using transactions.
EJB.EJB3.AISE.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.AISE.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.AISE.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.AISE.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.AISE.SCAN_TYPE.0-label=Check project
EJB.EJB3.AISE.SCAN_TYPE.1-label=Check package
EJB.EJB3.AISE.msg.1=''{0}'' called from bean managed transaction.
EJB.EJB3.AISE.msg.2=''{0}'' called from container managed transaction with ''{1}''.
EJB.EJB3.AISE.msg.3=''{0}'' called from container managed transaction.
EJB.EJB3.BMN=Do not start business method names with "ejb".
EJB.EJB3.BMN.msg.1=Business method ''{0}'' starts with "ejb".
EJB.EJB3.CMF=Improper signature of the annotated method in EJB bean.
EJB.EJB3.CMF.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.CMF.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.CMF.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.CMF.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.CMF.SCAN_TYPE.0-label=Check project
EJB.EJB3.CMF.SCAN_TYPE.1-label=Check package
EJB.EJB3.CMF.msg.1=Callback method ''{0}'' has return type ''{1}'' but should be "void".
EJB.EJB3.CMF.msg.2=Callback method ''{0}'' has ''{1}'' parameter(s) but should have none.
EJB.EJB3.CPIM=Call 'InvocationContext.proceed()' from @AroundInvoke methods.
EJB.EJB3.CPIM.msg.1=@AroundInvoke method ''{0}'' does not call "InvocationContext.proceed()".
EJB.EJB3.EAII=Do not expose @AroundInvoke method in business interface.
EJB.EJB3.EAII.msg.1=@AroundInvoke method ''{0}'' is exposed in interface ''{1}''.
EJB.EJB3.IDA=Avoid improper use of @Id annotation.
EJB.EJB3.IDA.msg.1=@Id field ''{0}'' is of type ''{1}''.
EJB.EJB3.IDA.msg.2=@Id method ''{0}'' returns type ''{1}''.
EJB.EJB3.IDA.msg.3=@EmbeddedId used in conjunction with @Id.
EJB.EJB3.IDCS=Ensure @IdClass is Serializable and defines "equals()" and "hashCode()" methods.
EJB.EJB3.IDCS.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.IDCS.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.IDCS.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.IDCS.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.IDCS.SCAN_TYPE.0-label=Check project
EJB.EJB3.IDCS.SCAN_TYPE.1-label=Check package
EJB.EJB3.IDCS.msg.1=@IdClass ''{0}'' is not Serializable.
EJB.EJB3.IDCS.msg.2=@IdClass ''{0}'' does not define an "equals()" method.
EJB.EJB3.IDCS.msg.3=@IdClass ''{0}'' does not define a "hashCode()" method.
EJB.EJB3.IDCS.msg.4=@IdClass ''{0}'' does not define "equals()" or "hashCode()" methods.
EJB.EJB3.ISB=Do not inject @Stateful beans into @Stateless beans.
EJB.EJB3.ISB.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.ISB.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.ISB.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.ISB.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.ISB.SCAN_TYPE.0-label=Check project
EJB.EJB3.ISB.SCAN_TYPE.1-label=Check package
EJB.EJB3.ISB.msg.1=@Stateful bean ''{0}'' injected into @Stateless bean ''{1}''
EJB.EJB3.MDBS=Do not extend other @MessageDriven beans from a @MessageDriven bean.
EJB.EJB3.MDBS.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.MDBS.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.MDBS.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.MDBS.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.MDBS.SCAN_TYPE.0-label=Check project
EJB.EJB3.MDBS.SCAN_TYPE.1-label=Check package
EJB.EJB3.MDBS.msg.1=@MessageDriven bean ''{0}'' has @MessageDriven superclass ''{1}''.
EJB.EJB3.MDML=Ensure @MessageDriven beans specify a MessageListener
EJB.EJB3.MDML.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.MDML.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.MDML.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.MDML.MESSAGE_LISTENERS-label=Specify message listeners using qualified names\:
EJB.EJB3.MDML.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.MDML.SCAN_TYPE.0-label=Check project
EJB.EJB3.MDML.SCAN_TYPE.1-label=Check package
EJB.EJB3.MDML.msg.1=@MessageDriven bean ''{0}'' does not specify a message listener.
EJB.EJB3.MTM=Do not declare multiple "@Timeout" methods
EJB.EJB3.MTM.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.MTM.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.MTM.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.MTM.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.MTM.SCAN_TYPE.0-label=Check project
EJB.EJB3.MTM.SCAN_TYPE.1-label=Check package
EJB.EJB3.MTM.msg.1=@Stateless bean ''{0}'' has multiple "@Timeout" methods.
EJB.EJB3.MTM.msg.2=@MessageDriven bean ''{0}'' has multiple "@Timeout" methods.
EJB.EJB3.PCUN=Always specify "unitName" with @PersistenceContext
EJB.EJB3.PCUN.msg.1=@PersistenceContext does not specify a "unitName".
EJB.EJB3.PERMIT=Avoid EJB 3 methods without security annotations
EJB.EJB3.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
EJB.EJB3.RLI=Do not declare an interface both @Local and @Remote
EJB.EJB3.RLI.msg.1=Interface ''{0}'' is @Local and @Remote.
EJB.EJB3.RMSB=Specify a @Remove method for @Stateful beans
EJB.EJB3.RMSB.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.RMSB.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.RMSB.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.RMSB.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.RMSB.SCAN_TYPE.0-label=Check project
EJB.EJB3.RMSB.SCAN_TYPE.1-label=Check package
EJB.EJB3.RMSB.msg.1=@Stateful bean ''{0}'' has no "@Remove" method.
EJB.EJB3.SIVS=Ensure instance variables of @Stateful beans are Serializable.
EJB.EJB3.SIVS.CHECK_FOLLOWING-label=Check the following\:
EJB.EJB3.SIVS.CHECK_FOLLOWING.0-label=Check annotations
EJB.EJB3.SIVS.CHECK_FOLLOWING.1-label=Check annotations and deployment descriptors
EJB.EJB3.SIVS.SCAN_TYPE-label=Check deployment descriptors in the following location\:
EJB.EJB3.SIVS.SCAN_TYPE.0-label=Check project
EJB.EJB3.SIVS.SCAN_TYPE.1-label=Check package
EJB.EJB3.SIVS.msg.1=Instance variable ''{0}'' of @Stateful bean ''{1}'' is not Serializable.
EJB.EJB3.SRBM=Ensure parameters and return type of remote business methods are Serializable.
EJB.EJB3.SRBM.msg.1=Remote business method ''{0}'' has a non-Serializable return type.
EJB.EJB3.SRBM.msg.2=Remote business method ''{0}'' has non-Serializable parameters.
EJB.EJB3.SRBM.msg.3=Remote business method ''{0}'' has a non-Serializable return type and parameters.
EJB.EJB3.ULI=Access beans through a local interface
EJB.EJB3.ULI.CHECK_CLASSES-label=Flag injected classes
EJB.EJB3.ULI.CHECK_INJECTION-label=Check injected beans
EJB.EJB3.ULI.CHECK_NARROW-label=Check calls to narrow()
EJB.EJB3.ULI.msg.1=Injected ''{0}'' is not a remote interface.
EJB.EJB3.ULI.msg.2=Call to narrow() here.
EJB.JIO=Do not use types from the "java.io" package within bean classes.
EJB.JIO.DEPTH-label=Maximum depth to check for "java.io" usage
EJB.JIO.msg.1=New instance of type ''{0}'' created in a bean class.
EJB.JIO.msg.2=Call to "java.io" method ''{0}'' in a bean class.
EJB.JIO.msg.3=Method ''{0}'' indirectly uses the "java.io" package in a bean class.
EJB.MEC=Define a matching 'ejbPostCreate()' method for each 'ejbCreate' method in entity bean classes
EJB.MEC.UNMATCHED_POST-label=Check that each 'ejbPostCreate()' method has a corresponding 'ejbCreate()' method.
EJB.MEC.msg.1=must have a corresponding ''{0}'' method.
EJB.MNDF=Do not define 'finalize()' method in bean classes.
EJB.MNDF.msg.1=Bean "class" should not define 'finalize()' method.
EJB.SMSN=Do not set or create a new SecurityManager in EJBs
EJB.SMSN.DEPTH-label=Maximum depth to check for SecurityManager setting or creation
EJB.SMSN.msg.1="System.setSecurityManager()" called in bean class.
EJB.SMSN.msg.2=New ''{0}'' created in bean class.
EJB.SMSN.msg.3=Call to ''{0}'' indirectly sets or creates a SecurityManager.
EJB.STD=Ensure EJB beans include necessary methods and EJB bean and interface classes follow the name format
EJB.STD.BEAN_CLASS_TABLE-label=EJB bean class naming convention table
EJB.STD.BEAN_CLASS_TABLE.EJB__STD__BEAN_CLASS_TABLE__COLUMN1-label=prefix/postfix
EJB.STD.BEAN_CLASS_TABLE.EJB__STD__BEAN_CLASS_TABLE__COLUMN2-label=fully qualified name in regular expression
EJB.STD.BEAN_CLASS_TABLE.EJB__STD__BEAN_CLASS_TABLE__COLUMN3-label=prefix/postfix value
EJB.STD.HOME_INTERFACE_TABLE-label=EJB home interface naming convention table
EJB.STD.HOME_INTERFACE_TABLE.EJB__STD__HOME_INTERFACE_TABLE__COLUMN1-label=remote/local
EJB.STD.HOME_INTERFACE_TABLE.EJB__STD__HOME_INTERFACE_TABLE__COLUMN2-label=prefix/postfix
EJB.STD.HOME_INTERFACE_TABLE.EJB__STD__HOME_INTERFACE_TABLE__COLUMN3-label=fully qualified name in regular expression
EJB.STD.HOME_INTERFACE_TABLE.EJB__STD__HOME_INTERFACE_TABLE__COLUMN4-label=prefix/postfix value
EJB.STD.MISSING_BUSINESS-label=Check to make sure EJB bean contains all the business methods.
EJB.STD.MISSING_HOME-label=Check to make sure EJB bean contains all create and finder methods in the Home interface.
EJB.STD.REMOTE_INTERFACE_TABLE-label=EJB remote interface naming convention table
EJB.STD.REMOTE_INTERFACE_TABLE.EJB__STD__REMOTE_INTERFACE_TABLE__COLUMN1-label=remote/local
EJB.STD.REMOTE_INTERFACE_TABLE.EJB__STD__REMOTE_INTERFACE_TABLE__COLUMN2-label=prefix/postfix
EJB.STD.REMOTE_INTERFACE_TABLE.EJB__STD__REMOTE_INTERFACE_TABLE__COLUMN3-label=fully qualified name in regular expression
EJB.STD.REMOTE_INTERFACE_TABLE.EJB__STD__REMOTE_INTERFACE_TABLE__COLUMN4-label=prefix/postfix value
EJB.STD.msg.1=''{0}'' does not begin with ''{1}''.
EJB.STD.msg.2=''{0}'' does not end with ''{1}''.
EJB.STD.msg.3=Method ''{0}'' is missing.
EJB.STD.msg.4=''{0}'' is not "public" instance method.
EJB.STD.tab.BEAN_TAB-label=EJB Bean class
EJB.STD.tab.HOME_INTERFACE_TAB-label=EJB Home Interface
EJB.STD.tab.REMOTE_INTERFACE_TAB-label=EJB Remote Interface
EJB.THREAD=Avoid starting, stopping, or managing threads in any way in bean classes.
EJB.THREAD.DEPTH-label=Maximum depth to check for Thread or ThreadGroup usage
EJB.THREAD.msg.1=Thread or ThreadGroup method ''{0}'' called in a bean class.
EJB.THREAD.msg.2=Method ''{0}'' indirectly calls a Thread or ThreadGroup method.
EJB.UCIC=Cache reusable JNDI resources to minimize the use of expensive operations
EJB.UCIC.msg.1='InitialContext' object is not using a cache.
EJB.UVO=Use Value Objects to reduce the granularity of calls to the server
EJB.UVO.MAX_FIELD-label=Max number of "private" fields in EJB bean class
EJB.UVO.msg.1=More than {0} field in the bean class ''{1}''.
EJB.UVO.msg.2=More than {0} fields in the bean class ''{1}''.
EXCEPT=Exceptions
EXCEPT.AEFC=Do not abuse exceptions as flow control statements.
EXCEPT.AEFC.msg.1=Avoid using throw clause as flow control statement.
EXCEPT.CATO=Catch all "Throwable" objects which may be thrown in the body of certain methods.
EXCEPT.CATO.CHECKED_METHOD_TABLE-label=Methods to be Checked
EXCEPT.CATO.CHECKED_METHOD_TABLE.EXCEPT__CATO__CHECKED_METHOD_TABLE__COLUMN1-label=Type (Fully Qualified Name)
EXCEPT.CATO.CHECKED_METHOD_TABLE.EXCEPT__CATO__CHECKED_METHOD_TABLE__COLUMN2-label=Method Name and Parameters (Specify fully qualified type names)
EXCEPT.CATO.msg.1=The method ''{0}()'' does not contain a "try"/"catch" block which catches all possible "Throwable" objects.
EXCEPT.CDUPL=Avoid catch clauses with the same content
EXCEPT.CDUPL.msg.1=Two or more of catch blocks has the same content.
EXCEPT.CLFIN=Avoid using finally block for closing resource only
EXCEPT.CLFIN.msg.1=The resource is closed in a finally block instead of a try-with-resources statement.
EXCEPT.CTE=Always chain thrown exceptions
EXCEPT.CTE.CHECK_CONSTRUCTOR-label=Check only thrown exceptions with a chain constructor
EXCEPT.CTE.msg.1=Thrown exception is not chained.
EXCEPT.EPNFC=Do not throw exceptions from constructors of "public" non-"final" classes.
EXCEPT.EPNFC.msg.1=Constructor ''{0}'' throws ''{1}''.
EXCEPT.HCB=Do not hide 'catch' blocks.
EXCEPT.HCB.msg.1=This catch block will be never be reached.
EXCEPT.NCNPE=Do not catch 'NullPointerException'
EXCEPT.NCNPE.msg.1=Avoid catching 'NullPointerException'
EXCEPT.NFE=Ensure that the 'parse' methods of the numeric classes do not throw unhandled "NumberFormatExceptions".
EXCEPT.NFE.msg.1=The method ''{0}()'' may throw a "NumberFormatException" that is neither caught nor declared to be thrown.
EXCEPT.NTERR=Do not throw exception types which are too general or are unchecked exceptions.
EXCEPT.NTERR.CHECKED_EXCEPTS-label=Exception types which should not be thrown (fully qualified names)
EXCEPT.NTERR.msg.1=Avoid throwing ''{0}''.
EXCEPT.NTNPE=Do not throw 'NullPointerException'.
EXCEPT.NTNPE.msg.1=Avoid throwing 'NullPointerException'
EXCEPT.RTERR=Rethrow certain exceptions if they are caught.
EXCEPT.RTERR.CHECKED_EXCEPTS-label=Exception/Error types which must be rethrown in "catch" blocks (fully qualified names)
EXCEPT.RTERR.msg.1=This catch block catches the exception ''{0}'' of type ''{1}'' but does not rethrow it.
EXCEPT.RTERR.msg.2=This catch block catches the error ''{0}'' of type ''{1}'' but does not rethrow it.
EXCEPT.TSCE=Exception messages must meet minimum character requirement
EXCEPT.TSCE.MIN_NUM_EXCEPTION_MSG_LENGHTS-label=Minimum characters of exception message\:
EXCEPT.TSCE.MODE_CHOICE-label=Mode\:
EXCEPT.TSCE.MODE_CHOICE.0-label=Accept mode
EXCEPT.TSCE.MODE_CHOICE.1-label=Reject mode
EXCEPT.TSCE.SET_AGGRESIVE_MODE_ON-label=Aggressively report violations
EXCEPT.TSCE.SET_USER_LIST_MODE_ON-label=Enabled
EXCEPT.TSCE.USER_ACCEPT_EXCEPTIONS_LIST-label=Acceptance list\:
EXCEPT.TSCE.USER_ACCEPT_EXCEPTIONS_LIST.EXCEPT__TSCE__USER_ACCEPT_EXCEPTIONS_LIST__COLUMN1-label=Exception type (regular expression)
EXCEPT.TSCE.USER_ACCEPT_EXCEPTIONS_LIST.EXCEPT__TSCE__USER_ACCEPT_EXCEPTIONS_LIST__COLUMN2-label=Index of message parameter in class constructor
EXCEPT.TSCE.USER_REJECT_EXCEPTIONS_LIST-label=Rejection list (regular expressions)\:
EXCEPT.TSCE.group.0-label=Message length
EXCEPT.TSCE.group.1-label=User defined lists
EXCEPT.TSCE.msg.1=Exception message is missing.
EXCEPT.TSCE.msg.2=Exception message is too short.
FORMAT=Formatting
FORMAT.APAREN=Use '()' to separate complex expressions
FORMAT.APAREN.msg.1=Missing '()' to separate complex expression.
FORMAT.ASPACE=Ensure proper spacing in array references
FORMAT.ASPACE.Number\ of\ Spaces-label=Number of spaces before open bracket
FORMAT.ASPACE.msg.1=Use correct spacing for array references.
FORMAT.ATS=Do not place empty whitespace at the end of a line
FORMAT.ATS.FLAG_EMPTY_LINE_WITH_SPACE-label=Flag empty line containing extra whitespaces
FORMAT.ATS.msg.1=Avoid trailing spaces.
FORMAT.BLBC=Put a blank line before each C-style comment
FORMAT.BLBC.msg.1=Blank line missing before this C-style comment.
FORMAT.BLCD=Enforce number of blank line(s) before type declarations
FORMAT.BLCD.BLANK_LINE-label=Number of blank lines
FORMAT.BLCD.LINK_BOX-label=Link to value in the preferences page
FORMAT.BLCD.msg.1=Use {0} blank line before type declaration.
FORMAT.BLCD.msg.2=Use {0} blank lines before type declaration.
FORMAT.BLSIM=Enforce number of blank line(s) to separate "imports" from different packages
FORMAT.BLSIM.BLANK_LINE-label=Number of blank lines
FORMAT.BLSIM.IGNORE_SUBPACKAGE-label=Ignore adjacent imports if they are from subpackages of the same package
FORMAT.BLSIM.msg.1="import {0}" not separated by {1} blank line from previous "import" from a different package.
FORMAT.BLSIM.msg.2="import {0}" not separated by {1} blank lines from previous "import" from a different package.
FORMAT.CBRACE=Place a closing brace on its own line
FORMAT.CBRACE.IGNORE_BRACE_C_COMMENT-label=Ignore case "} /*"
FORMAT.CBRACE.IGNORE_BRACE_SEMI_COLON-label=Ignore case "} ;"
FORMAT.CBRACE.IGNORE_BRACE_S_COMMENT-label=Ignore case "} //"
FORMAT.CBRACE.IGNORE_CATCH-label=Ignore case "} catch {"
FORMAT.CBRACE.IGNORE_DO_WHILE-label=Ignore case "} while();"
FORMAT.CBRACE.IGNORE_ELSE-label=Ignore case "} else {"
FORMAT.CBRACE.IGNORE_FINALLY-label=Ignore case "} finally {"
FORMAT.CBRACE.IGNORE_TWO_BRACE-label=Ignore case "} }"
FORMAT.CBRACE.msg.1=Closing brace should be in a line of its own.
FORMAT.CMS=Place a single space character or no space character after type casting
FORMAT.CMS.CAST_SPACE-label=Check option
FORMAT.CMS.CAST_SPACE.0-label=one space
FORMAT.CMS.CAST_SPACE.1-label=no space
FORMAT.CMS.LINK_BOX-label=Link to value in the preferences page
FORMAT.CMS.msg.1=There is not one single space after type cast.
FORMAT.CMS.msg.2=There is an extra space after type cast.
FORMAT.CMS.msg.3=There are extra spaces after type cast.
FORMAT.DOT=Do not leave spaces between qualified names and method invocations
FORMAT.DOT.msg.1=Avoid having space before or after the dot.
FORMAT.DUT=Use spaces instead of tabs (or tabs instead of spaces)
FORMAT.DUT.LINK_BOX-label=Link to value in the preferences page for "Tab size"
FORMAT.DUT.SPACES_OR_TABS-label=Choose to use tabs or spaces\:
FORMAT.DUT.SPACES_OR_TABS.0-label=Use spaces
FORMAT.DUT.SPACES_OR_TABS.1-label=Use tabs
FORMAT.DUT.SPACES_PER_TAB-label=Spaces per tab\:
FORMAT.DUT.msg.1='Tab' character found on column {0}.
FORMAT.DUT.msg.2=Set of {0} space characters used instead of a tab on column {1}.
FORMAT.DUT.msg.3=Space character used instead of a tab on column {0}.
FORMAT.FCB=Enforce the position of '{' brace
FORMAT.FCB.ANNOTATION_DECL-label=Annotation type declaration
FORMAT.FCB.ANNOTATION_DECL.0-label=Same line
FORMAT.FCB.ANNOTATION_DECL.1-label=Next line
FORMAT.FCB.ANNOTATION_DECL.2-label=Next line indented
FORMAT.FCB.ANNOTATION_DECL.3-label=Next line on wrap
FORMAT.FCB.ANNOTATION_DECL.4-label=Ignore
FORMAT.FCB.ANONY_DECL-label=Anonymous class declaration
FORMAT.FCB.ANONY_DECL.0-label=Same line
FORMAT.FCB.ANONY_DECL.1-label=Next line
FORMAT.FCB.ANONY_DECL.2-label=Next line indented
FORMAT.FCB.ANONY_DECL.3-label=Next line on wrap
FORMAT.FCB.ANONY_DECL.4-label=Ignore
FORMAT.FCB.ARRAY-label=Array initializer
FORMAT.FCB.ARRAY.0-label=Same line
FORMAT.FCB.ARRAY.1-label=Next line
FORMAT.FCB.ARRAY.2-label=Next line indented
FORMAT.FCB.ARRAY.3-label=Next line on wrap
FORMAT.FCB.ARRAY.4-label=Ignore
FORMAT.FCB.BLOCK-label=Block
FORMAT.FCB.BLOCK.0-label=Same line
FORMAT.FCB.BLOCK.1-label=Next line
FORMAT.FCB.BLOCK.2-label=Next line indented
FORMAT.FCB.BLOCK.3-label=Next line on wrap
FORMAT.FCB.BLOCK.4-label=Ignore
FORMAT.FCB.BLOCK_IN_CASE-label=Block in  "switch-case"
FORMAT.FCB.BLOCK_IN_CASE.0-label=Same line
FORMAT.FCB.BLOCK_IN_CASE.1-label=Next line
FORMAT.FCB.BLOCK_IN_CASE.2-label=Next line indented
FORMAT.FCB.BLOCK_IN_CASE.3-label=Next line on wrap
FORMAT.FCB.BLOCK_IN_CASE.4-label=Ignore
FORMAT.FCB.CATCH-label="catch" clause
FORMAT.FCB.CATCH.0-label=Same line
FORMAT.FCB.CATCH.1-label=Next line
FORMAT.FCB.CATCH.2-label=Next line indented
FORMAT.FCB.CATCH.3-label=Next line on wrap
FORMAT.FCB.CATCH.4-label=Ignore
FORMAT.FCB.CLASS_DECL-label=Class declaration
FORMAT.FCB.CLASS_DECL.0-label=Same line
FORMAT.FCB.CLASS_DECL.1-label=Next line
FORMAT.FCB.CLASS_DECL.2-label=Next line indented
FORMAT.FCB.CLASS_DECL.3-label=Next line on wrap
FORMAT.FCB.CLASS_DECL.4-label=Ignore
FORMAT.FCB.CONSTRUCTOR_DECL-label=Constructor declaration
FORMAT.FCB.CONSTRUCTOR_DECL.0-label=Same line
FORMAT.FCB.CONSTRUCTOR_DECL.1-label=Next line
FORMAT.FCB.CONSTRUCTOR_DECL.2-label=Next line indented
FORMAT.FCB.CONSTRUCTOR_DECL.3-label=Next line on wrap
FORMAT.FCB.CONSTRUCTOR_DECL.4-label=Ignore
FORMAT.FCB.DO-label="do-while" statement
FORMAT.FCB.DO.0-label=Same line
FORMAT.FCB.DO.1-label=Next line
FORMAT.FCB.DO.2-label=Next line indented
FORMAT.FCB.DO.3-label=Next line on wrap
FORMAT.FCB.DO.4-label=Ignore
FORMAT.FCB.ELSE-label="else" statement
FORMAT.FCB.ELSE.0-label=Same line
FORMAT.FCB.ELSE.1-label=Next line
FORMAT.FCB.ELSE.2-label=Next line indented
FORMAT.FCB.ELSE.3-label=Next line on wrap
FORMAT.FCB.ELSE.4-label=Ignore
FORMAT.FCB.ENUM_CONSTANT-label=Enum constant body 
FORMAT.FCB.ENUM_CONSTANT.0-label=Same line
FORMAT.FCB.ENUM_CONSTANT.1-label=Next line
FORMAT.FCB.ENUM_CONSTANT.2-label=Next line indented
FORMAT.FCB.ENUM_CONSTANT.3-label=Next line on wrap
FORMAT.FCB.ENUM_CONSTANT.4-label=Ignore
FORMAT.FCB.ENUM_DECL-label=Enum declaration
FORMAT.FCB.ENUM_DECL.0-label=Same line
FORMAT.FCB.ENUM_DECL.1-label=Next line
FORMAT.FCB.ENUM_DECL.2-label=Next line indented
FORMAT.FCB.ENUM_DECL.3-label=Next line on wrap
FORMAT.FCB.ENUM_DECL.4-label=Ignore
FORMAT.FCB.FINALLY-label="finally" block
FORMAT.FCB.FINALLY.0-label=Same line
FORMAT.FCB.FINALLY.1-label=Next line
FORMAT.FCB.FINALLY.2-label=Next line indented
FORMAT.FCB.FINALLY.3-label=Next line on wrap
FORMAT.FCB.FINALLY.4-label=Ignore
FORMAT.FCB.FOR-label="for" statement
FORMAT.FCB.FOR.0-label=Same line
FORMAT.FCB.FOR.1-label=Next line
FORMAT.FCB.FOR.2-label=Next line indented
FORMAT.FCB.FOR.3-label=Next line on wrap
FORMAT.FCB.FOR.4-label=Ignore
FORMAT.FCB.IF-label="if" statement
FORMAT.FCB.IF.0-label=Same line
FORMAT.FCB.IF.1-label=Next line
FORMAT.FCB.IF.2-label=Next line indented
FORMAT.FCB.IF.3-label=Next line on wrap
FORMAT.FCB.IF.4-label=Ignore
FORMAT.FCB.IGNORE_IF_COMMENT_ABOVE_BRACE-label=Braces preceded by comments are not considered a violation
FORMAT.FCB.IGNORE_IF_OPEN_AND_CLOSE_ON_SAME_LINE-label=Open and close braces on the same line are not considered a violation
FORMAT.FCB.LINK_BOX-label=Link to value in the preferences page
FORMAT.FCB.METHOD_DECL-label=Method declaration
FORMAT.FCB.METHOD_DECL.0-label=Same line
FORMAT.FCB.METHOD_DECL.1-label=Next line
FORMAT.FCB.METHOD_DECL.2-label=Next line indented
FORMAT.FCB.METHOD_DECL.3-label=Next line on wrap
FORMAT.FCB.METHOD_DECL.4-label=Ignore
FORMAT.FCB.STATIC_INIT-label=Static initializer
FORMAT.FCB.STATIC_INIT.0-label=Same line
FORMAT.FCB.STATIC_INIT.1-label=Next line
FORMAT.FCB.STATIC_INIT.2-label=Next line indented
FORMAT.FCB.STATIC_INIT.3-label=Next line on wrap
FORMAT.FCB.STATIC_INIT.4-label=Ignore
FORMAT.FCB.SWITCH-label="switch" statement
FORMAT.FCB.SWITCH.0-label=Same line
FORMAT.FCB.SWITCH.1-label=Next line
FORMAT.FCB.SWITCH.2-label=Next line indented
FORMAT.FCB.SWITCH.3-label=Next line on wrap
FORMAT.FCB.SWITCH.4-label=Ignore
FORMAT.FCB.SYNC_STATEMENT-label="synchronized" statement
FORMAT.FCB.SYNC_STATEMENT.0-label=Same line
FORMAT.FCB.SYNC_STATEMENT.1-label=Next line
FORMAT.FCB.SYNC_STATEMENT.2-label=Next line indented
FORMAT.FCB.SYNC_STATEMENT.3-label=Next line on wrap
FORMAT.FCB.SYNC_STATEMENT.4-label=Ignore
FORMAT.FCB.TRY-label="try" statement
FORMAT.FCB.TRY.0-label=Same line
FORMAT.FCB.TRY.1-label=Next line
FORMAT.FCB.TRY.2-label=Next line indented
FORMAT.FCB.TRY.3-label=Next line on wrap
FORMAT.FCB.TRY.4-label=Ignore
FORMAT.FCB.WHILE-label="while" statement
FORMAT.FCB.WHILE.0-label=Same line
FORMAT.FCB.WHILE.1-label=Next line
FORMAT.FCB.WHILE.2-label=Next line indented
FORMAT.FCB.WHILE.3-label=Next line on wrap
FORMAT.FCB.WHILE.4-label=Ignore
FORMAT.FCB.msg.1=Opening brace '''{''' is not on the same line as the {0}.
FORMAT.FCB.msg.2=Opening brace '''{''' is not on the line following the {0} or is not indented exactly the same.
FORMAT.FCB.msg.3=Opening brace '''{''' is not on the line following the {0} or does not have exactly one extra level of indentation.
FORMAT.FCB.msg.4=Opening brace '''{''' does not follow coding convention.  It is not on the same line or the line following the {0} or does not have exactly one extra level of indentation.
FORMAT.FCN=Place the type that has the same name as the file as the first type.
FORMAT.FCN.msg.1=The type has the same name as the file should be the first type.
FORMAT.IAD=Declare arrays with '[]' brackets after the array type and before the variable name(s)
FORMAT.IAD.msg.1=Place the '[]' after the array type, not after the variable\: {0}.
FORMAT.IND=Enforce number of space(s) for indentation
FORMAT.IND.ADD_EXTRA_LEVEL-label=Require an additional level of indentation for each "(" encountered in a wrapped line continuation
FORMAT.IND.IGNORE_ARRAY_DECL-label=Ignore additional indentation caused by array declaration brackets.
FORMAT.IND.INDENT-label=Indentation size
FORMAT.IND.LINK_BOX-label=Link to value in the preferences page
FORMAT.IND.SPLIT_INDENT-label=Additional levels of indentation for wrapped line continuations
FORMAT.IND.SPLIT_INDENT_ENFORCEMENT-label=Require additional level(s) of indentation for wrapped line continuations
FORMAT.IND.SPLIT_INDENT_EXCEPTION-label=Ignore parentheses for split line indentation
FORMAT.IND.msg.1=Indentation should be {0} spaces.
FORMAT.IND.msg.2=Keyword "if" should be placed on the same line as the preceding keyword "else".
FORMAT.IND.msg.3=Indentation should be {0} (or {1}) spaces.
FORMAT.LL=Limit the maximum length of a line
FORMAT.LL.IGNORE_IMPORTS_PACKAGES-label=Ignore import statements and package declarations
FORMAT.LL.IGNORE_TRAILING_COMMENT-label=Ignore trailing comments
FORMAT.LL.IGNORE_TRAILING_SPACE-label=Ignore trailing whitespaces
FORMAT.LL.LINK_TO_PREF-label=Link to value in the preferences page
FORMAT.LL.MAX_COMMENT_LEN-label=Maximum comment line width
FORMAT.LL.MAX_LEN-label=Maximum line width
FORMAT.LL.RECALCULATE_TABS-label=Tab size
FORMAT.LL.msg.1=Line is longer than {1} characters\: {0}.
FORMAT.LL.msg.2=Comment line is longer than {1} characters\: {0}.
FORMAT.MCH=Include a meaningful file header comment in every source file
FORMAT.MCH.FILE_HEADER_FORMAT-label=File header format
FORMAT.MCH.FILE_HEADER_LOCATION-label=File header location
FORMAT.MCH.FILE_HEADER_LOCATION.0-label=before package declaration (if any)
FORMAT.MCH.FILE_HEADER_LOCATION.1-label=after package declaration (if any)
FORMAT.MCH.FILE_HEADER_LOCATION_GROUP-label=
FORMAT.MCH.FILE_HEADER_TEMPLATE-label=
FORMAT.MCH.FILE_HEADER_TRIM_LINES-label=Trim header lines
FORMAT.MCH.FILE_HEADER_TYPES-label=Acceptable types of comments
FORMAT.MCH.FILE_HEADER_TYPE_CSTYLE-label=C-Style comments
FORMAT.MCH.FILE_HEADER_TYPE_JAVADOC-label=Javadoc comments
FORMAT.MCH.FILE_HEADER_TYPE_SINGLELINE-label=Single-line comments
FORMAT.MCH.MATCH_HEADER_CASE_SENSITIVE-label=Match case sensitive
FORMAT.MCH.MATCH_HEADER_WITH_TEMPLATE-label=Match the file header with the following template (defined in regular expressions)\:
FORMAT.MCH.msg.1=This source file does not include a file header comment.
FORMAT.MCH.msg.2=The file header comment does not match the specified comment template.
FORMAT.MCH.msg.3=The 'File header format' parameter is enabled, but the comment template is not defined.
FORMAT.MO=Enforce the order of annotations and modifiers
FORMAT.MO.ANNOTATION_ORDER-label=Order of Annotations
FORMAT.MO.ANNOTATION_ORDER.0-label=Put all annotations before all other modifiers.
FORMAT.MO.ANNOTATION_ORDER.1-label=Put all annotations after all other modifiers.
FORMAT.MO.MODIFIER_ORDER_LIST-label=Sort modifiers based on modifier types
FORMAT.MO.MODIFIER_ORDER_LIST.FORMAT__MO__MODIFIER_ORDER_LIST__COLUMN1-label=Modifier order
FORMAT.MO.msg.1=The ordering of the modifiers violates convention. They should be in order "{0}".
FORMAT.MSP=Place a single space character or no space character between a method name and the opening "(" parenthesis
FORMAT.MSP.LINK_BOX-label=Link to value in the preferences page
FORMAT.MSP.METHOD_SPACE-label=Check option
FORMAT.MSP.METHOD_SPACE.0-label=one space
FORMAT.MSP.METHOD_SPACE.1-label=no space
FORMAT.MSP.msg.1=Method ''{0}'' does not have one space before the "(" parenthesis.
FORMAT.MSP.msg.2=Method ''{0}'' has an extra space before the "(" parenthesis.
FORMAT.MSP.msg.3=Method ''{0}'' has extra spaces before the "(" parenthesis.
FORMAT.NSAB=Do not place statements on the same line as the '{' opening brace
FORMAT.NSAB.IGNORE_ONE_LINE_BLOCK-label=Allow statements on the same line as the opening brace if the opening and closing braces appear on the same line.
FORMAT.NSAB.msg.1=Statement on the same line as the '{' opening brace.
FORMAT.OSPL=Write one statement per line
FORMAT.OSPL.msg.1=Multiple statements on one line.
FORMAT.SAC=Enforce number of space character(s) after every comma
FORMAT.SAC.NO_SPACE_BEFORE-label=Commas must not be preceded by a space.
FORMAT.SAC.SYMBOL_SPACE-label=Number of spaces
FORMAT.SAC.msg.1=Comma not followed by {0} space.
FORMAT.SAC.msg.2=Comma not followed by {0} spaces.
FORMAT.SAC.msg.3=Comma preceded by a space character.
FORMAT.SAOP=Enforce number of space character(s) on each side of an assignment operator
FORMAT.SAOP.LINK_BOX-label=Link to value in the preferences page
FORMAT.SAOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
FORMAT.SAOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
FORMAT.SAOP.msg.1=There is not {1} space after ''{0}''.
FORMAT.SAOP.msg.2=There is not {1} spaces after ''{0}''.
FORMAT.SAP=Enforce number of space character(s) after the opening parenthesis "(" of a conditional statement
FORMAT.SAP.IGNORE_EMPTY_ITER-label=Ignore rule for the special case "for(;;)".
FORMAT.SAP.SYMBOL_SPACE-label=Number of spaces
FORMAT.SAP.msg.1=Parenthesis not followed by {0} space.
FORMAT.SAP.msg.2=Parenthesis not followed by {0} spaces.
FORMAT.SAS=Enforce number of space character(s) after every semicolon
FORMAT.SAS.IGNORE_EMPTY_ITER-label=Ignore rule for the special case "for(;;)".
FORMAT.SAS.SYMBOL_SPACE-label=Number of spaces
FORMAT.SAS.msg.1=Semicolon not followed by {0} space.
FORMAT.SAS.msg.2=Semicolon not followed by {0} spaces.
FORMAT.SAUOP=Enforce number of space character(s) between a prefixed unary operator and its operand
FORMAT.SAUOP.LINK_BOX-label=Link to value in the preferences page
FORMAT.SAUOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
FORMAT.SAUOP.msg.1=There is not {0} space after unary operator ''{1}''.
FORMAT.SAUOP.msg.2=There is not {0} spaces after unary operator ''{1}''.
FORMAT.SBOP=Enforce number of space character(s) on each side of a bitwise operator
FORMAT.SBOP.LINK_BOX-label=Link to value in the preferences page
FORMAT.SBOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
FORMAT.SBOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
FORMAT.SBOP.msg.1=There is not {1} space after ''{0}''.
FORMAT.SBOP.msg.2=There is not {1} spaces after ''{0}''.
FORMAT.SBUOP=Enforce number of space character(s) between a postfixed unary operator and its operand
FORMAT.SBUOP.LINK_BOX-label=Link to value in the preferences page
FORMAT.SBUOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
FORMAT.SBUOP.msg.1=There is not {0} space before unary operator ''{1}''.
FORMAT.SBUOP.msg.2=There is not {0} spaces before unary operator ''{1}''.
FORMAT.SC=Enforce number of space character(s) between a conditional statement and the opening "(" parenthesis
FORMAT.SC.SPACE_BEFORE-label=Number of spaces
FORMAT.SC.msg.1=Conditional statement does not have {0} space after "{1}".
FORMAT.SC.msg.2=Conditional statement does not have {0} spaces after "{1}".
FORMAT.SCOP=Enforce number of space character(s) before and after the "?" conditional operator
FORMAT.SCOP.LINK_BOX-label=Link to value in the preferences page
FORMAT.SCOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
FORMAT.SCOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
FORMAT.SCOP.msg.1=There is not {1} space after ''{0}''.
FORMAT.SCOP.msg.2=There is not {1} spaces after ''{0}''.
FORMAT.SLOP=Enforce number of space character(s) on each side of a logical operator
FORMAT.SLOP.LINK_BOX-label=Link to value in the preferences page
FORMAT.SLOP.SYMBOL_SPACE_AFTER-label=Number of spaces after
FORMAT.SLOP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
FORMAT.SLOP.msg.1=There is not {1} space after ''{0}''.
FORMAT.SLOP.msg.2=There is not {1} spaces after ''{0}''.
FORMAT.SROP=Enforce number of space character(s) on each side of a relational operator
FORMAT.SROP.LINK_BOX-label=Link to value in the preferences page
FORMAT.SROP.SYMBOL_SPACE_AFTER-label=Number of spaces after
FORMAT.SROP.SYMBOL_SPACE_BEFORE-label=Number of spaces before
FORMAT.SROP.msg.1=There is not {1} space after ''{0}''.
FORMAT.SROP.msg.2=There is not {1} spaces after ''{0}''.
FORMAT.TC=Avoid using trailing comments.
FORMAT.TC.msg.1=Do not use trailing comments.
FORMAT.TCOMMA=Avoid or enforce the use of trailing commas in array initializers
FORMAT.TCOMMA.COMMA_OPTION-label=Enforce/Avoid trailing comma\:
FORMAT.TCOMMA.COMMA_OPTION.0-label=Enforce
FORMAT.TCOMMA.COMMA_OPTION.1-label=Avoid
FORMAT.TCOMMA.msg.1=Avoid trailing comma.
FORMAT.TCOMMA.msg.2=Missing trailing comma.
FORMAT.TE=Use the preferred formatting for conditional expressions
FORMAT.TE.FORMAT_ONE-label=expression1 ? expression2 \: expression3
FORMAT.TE.FORMAT_THREE-label=expression1<BR/>? expression2<BR/>\: expression3
FORMAT.TE.FORMAT_TWO-label=expression1 ? expression2<BR/>\: expression3
FORMAT.TE.PARENTHESIZE-label=The condition must be parenthesized
FORMAT.TE.group.0-label=Enforced formats for conditional expressions
FORMAT.TE.msg.1=Invalid conditional expression format.
FORMAT.TE.msg.2=The condition in this conditional expression is not parenthesized.
FORMAT.TNL=Make sure all files are terminated with a newline character.
FORMAT.TNL.msg.1=File should be terminated by a newline character.
FORMAT.U2BL=Enforce number of blank line(s) between major sections
FORMAT.U2BL.BLANK_TABLE_IN_CLASS2-label=Major sections in class declaration
FORMAT.U2BL.BLANK_TABLE_IN_CLASS2.FORMAT__U2BL__BLANK_TABLE_IN_CLASS__COLUMN1-label=Enforce section?
FORMAT.U2BL.BLANK_TABLE_IN_CLASS2.FORMAT__U2BL__BLANK_TABLE_IN_CLASS__COLUMN2-label=Section
FORMAT.U2BL.BLANK_TABLE_IN_CLASS2.FORMAT__U2BL__BLANK_TABLE_IN_CLASS__COLUMN3-label=Section ID
FORMAT.U2BL.BLANK_TABLE_IN_CLASS2.FORMAT__U2BL__BLANK_TABLE_IN_CLASS__COLUMN4-label=Number of blank lines
FORMAT.U2BL.BLANK_TABLE_IN_UNIT2-label=Major sections in compilation unit
FORMAT.U2BL.BLANK_TABLE_IN_UNIT2.FORMAT__U2BL__BLANK_TABLE_IN_UNIT__COLUMN1-label=Enforce section?
FORMAT.U2BL.BLANK_TABLE_IN_UNIT2.FORMAT__U2BL__BLANK_TABLE_IN_UNIT__COLUMN2-label=Section
FORMAT.U2BL.BLANK_TABLE_IN_UNIT2.FORMAT__U2BL__BLANK_TABLE_IN_UNIT__COLUMN3-label=Section ID
FORMAT.U2BL.BLANK_TABLE_IN_UNIT2.FORMAT__U2BL__BLANK_TABLE_IN_UNIT__COLUMN4-label=Number of blank lines
FORMAT.U2BL.CHECK_STATEMENTS-label=Check amount of blank lines between consecutive statements\:
FORMAT.U2BL.CHECK_STATEMENTS.FORMAT__U2BL__CHECK_STATEMENTS__COLUMN1-label=
FORMAT.U2BL.CHECK_STATEMENTS.FORMAT__U2BL__CHECK_STATEMENTS__COLUMN2-label=
FORMAT.U2BL.LINK_BOX-label=Link to value in the preferences page
FORMAT.U2BL.RECOGNIZE_NON_JAVADOC_COMMENTS-label=Recognize non javadoc comments
FORMAT.U2BL.msg.1=Use {0} blank line before the package statements.
FORMAT.U2BL.msg.10=Use {0} blank lines before every field declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.11=Use {0} blank line before every method declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.12=Use {0} blank lines before every method declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.13=Use {0} blank line before every member class (or corresponding Javadoc).
FORMAT.U2BL.msg.14=Use {0} blank lines before every member class (or corresponding Javadoc).
FORMAT.U2BL.msg.15=Use {0} blank line before every member interface (or corresponding Javadoc).
FORMAT.U2BL.msg.16=Use {0} blank lines before every member interface (or corresponding Javadoc).
FORMAT.U2BL.msg.17=Use {0} blank line before every declaration of the same kind (or corresponding Javadoc).
FORMAT.U2BL.msg.18=Use {0} blank lines before every declaration of the same kind (or corresponding Javadoc).
FORMAT.U2BL.msg.19=Use {0} blank line before every top-level enum declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.2=Use {0} blank lines before the package statements.
FORMAT.U2BL.msg.20=Use {0} blank lines before every top-level enum declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.21=Use {0} blank line before every top-level annotation declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.22=Use {0} blank lines before every top-level annotation declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.23=Use {0} blank line before every member enum declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.24=Use {0} blank lines before every member enum declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.25=Use {0} blank line before every member annotation declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.26=Use {0} blank lines before every member annotation declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.27=Use {0} blank line before every enum constant declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.28=Use {0} blank lines before every enum constant declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.29=Use {0} blank line before every annotation type member declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.3=Use {0} blank line before the import statements (or corresponding import comments).
FORMAT.U2BL.msg.30=Use {0} blank lines before every annotation type member declaration (or corresponding Javadoc).
FORMAT.U2BL.msg.31=Use {0} blank line before each statement.
FORMAT.U2BL.msg.32=Use {0} blank lines before each statement.
FORMAT.U2BL.msg.4=Use {0} blank lines before the import statements (or corresponding import comments).
FORMAT.U2BL.msg.5=Use {0} blank line before every top-level class (or corresponding Javadoc).
FORMAT.U2BL.msg.6=Use {0} blank lines before every top-level class (or corresponding Javadoc).
FORMAT.U2BL.msg.7=Use {0} blank line before every top-level interface (or corresponding Javadoc).
FORMAT.U2BL.msg.8=Use {0} blank lines before every top-level interface (or corresponding Javadoc).
FORMAT.U2BL.msg.9=Use {0} blank line before every field declaration (or corresponding Javadoc).
FORMAT.U2BL.tab.BLINE_IN_CLASS-label=Blank lines in class declaration
FORMAT.U2BL.tab.BLINE_IN_UNIT-label=Blank lines in compilation unit
FORMAT.UP=Avoid unnecessary parentheses
FORMAT.UP.CHECK_SCOPE-label=Scope of checking\:
FORMAT.UP.CHECK_SCOPE.0-label=Only return statements
FORMAT.UP.CHECK_SCOPE.1-label=All statements
FORMAT.UP.INLINE_CONDITIONAL-label=Check inline conditional expressions
FORMAT.UP.NESTED_OPERATION-label=Check nested operations
FORMAT.UP.ORDER_OF_OPERATION-label=Check order of operation in expressions
FORMAT.UP.msg.1=Avoid unnecessary parentheses.
GC=Garbage Collection
GC.FCF=Call 'super.finalize()' from 'finalize()'.
GC.FCF.msg.1=Missing call to ''super.finalize()'' in ''finalize()''.
GC.FM=Do not use 'finalize()' methods to unregister listeners.
GC.FM.msg.1=Attempting to remove listener in 'finalize()' method.
GC.IFF=Call 'super.finalize()' in the "finally" block of 'finalize()' methods.
GC.IFF.msg.1=Missing "finally" block that invokes 'super.finalize()'.
GC.IFF.msg.2='finalize()' method's "finally" block does not call 'super.finalize()'.
GC.MML=Be cautious when calling methods which may cause memory leaks
GC.MML.TYPE_AND_METHOD-label=Methods Which May Cause Memory Leaks
GC.MML.TYPE_AND_METHOD.GC__MML__TYPE_AND_METHOD__CHILDTABLE1-label=
GC.MML.TYPE_AND_METHOD.GC__MML__TYPE_AND_METHOD__CHILDTABLE1.GC__MML__TYPE_AND_METHOD__COLUMN2-description=&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;,...)
GC.MML.TYPE_AND_METHOD.GC__MML__TYPE_AND_METHOD__CHILDTABLE1.GC__MML__TYPE_AND_METHOD__COLUMN2-label=Method Signature
GC.MML.TYPE_AND_METHOD.GC__MML__TYPE_AND_METHOD__COLUMN1-label=Declaring Type (Fully Qualified Name)
GC.MML.msg.1=The ''{0}()'' method is known to cause memory leaks.  Inspect its usage to make sure memory leaks are not possible in this case.
GC.NCF=Do not call 'finalize()' explicitly.
GC.NCF.msg.1='finalize()' called explicitly.
GC.OSTM=Prevent potential memory leaks in ObjectOutputStreams by calling 'reset()'.
GC.OSTM.msg.1=The call to 'writeObject()' on the ''{0}'' variable is not followed by a call to 'reset()' or 'close()'.
GC.RCO=Reuse immutable constant objects to conserve memory
GC.RCO.IGNORE_ANON-label=Ignore anonymous class objects.
GC.RCO.IGNORE_CLASSES-label=Ignore classes (in regular expression)
GC.RCO.msg.1=Define and reuse a constant for immutable object\: ''{0}''.
GC.RCO.msg.2=Define a constant for this array if its members are not going to be updated\: ''{0}''.
GC.STV=Avoid "static" collections or maps; they can grow without bounds.
GC.STV.msg.1=Found "static" variable of type "Map" or "Collection"\: ''{0}''.
GLOBAL=Global Static Analysis
GLOBAL.ACD=Ensure that files do not contain cyclical dependencies
GLOBAL.ACD.MAX_DEPTH-label=Maximum Depth of Cyclical Dependencies to Detect\:
GLOBAL.ACD.msg.1=The file ''{0}'' contains a cyclical dependency in its imports \: {1}
GLOBAL.ACD.msg.2=in {0} {1}\:{2}-{3}\:{4}
GLOBAL.ASI=Make methods "static" if they do not use instance class members
GLOBAL.ASI.CHECK_PACKAGE-label=package-private
GLOBAL.ASI.CHECK_PRIVATE-label=private
GLOBAL.ASI.CHECK_PROTECTED-label=protected
GLOBAL.ASI.CHECK_PUBLIC-label=public
GLOBAL.ASI.IGNORE_ABSTRACT_CLASS-label=Ignore method declarations within "abstract" classes
GLOBAL.ASI.group.0-label=Check methods with accessibility\:
GLOBAL.ASI.msg.1=Method ''{0}'' is not "static" and uses no instance members.
GLOBAL.AUT=Avoid unused "throws" clauses
GLOBAL.AUT.ALLOW_SUPERTYPES-label=Allow exceptions to be declared as thrown if a subtype is thrown
GLOBAL.AUT.ALLOW_UNCHECKED-label=Allow unchecked exceptions to be declared as thrown
GLOBAL.AUT.IGNORE_OVERRIDING_METHOD-label=Ignore overriding and implementing methods
GLOBAL.AUT.IGNORE_THROWS_LIST-label=Ignore exception list(in regular expression)
GLOBAL.AUT.msg.1=Exception ''{0}'' is not thrown in the body of method ''{1}''.
GLOBAL.DPAC=Declare "package-private" types as inaccessible as possible
GLOBAL.DPAC.ALLOW_PRIVATE_INNER-label=Allow inner types to be declared "private"
GLOBAL.DPAC.IGNORE_CLASSES-label=Ignore the classes that correspond to these qualified names
GLOBAL.DPAC.IGNORE_PROTECTED_PP-label=Ignore "protected" types which can be made package-private
GLOBAL.DPAC.msg.1=Class ''{0}'' should be declared {1}.
GLOBAL.DPAC.msg.2=Interface ''{0}'' should be declared {1}.
GLOBAL.DPAC.msg.3=Enum ''{0}'' should be declared {1}.
GLOBAL.DPAC.msg.4=Annotation ''{0}'' should be declared {1}.
GLOBAL.DPAF=Declare package-private fields as inaccessible as possible
GLOBAL.DPAF.IGNORE_ABSTRACT-label=Ignore fields declared in "abstract" classes
GLOBAL.DPAF.IGNORE_FINAL-label=Ignore "final" fields
GLOBAL.DPAF.msg.1=Field ''{0}'' should be declared {1}.
GLOBAL.DPAM=Declare package-private methods as inaccessible as possible
GLOBAL.DPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
GLOBAL.DPAM.CHECK_LOCAL-label=Check methods in local classes
GLOBAL.DPAM.msg.1=Method ''{0}()'' should be declared {1}.
GLOBAL.DPAM.msg.2=Constructor ''{0}()'' should be declared {1}.
GLOBAL.DPPC=Declare "public/protected" types as inaccessible as possible
GLOBAL.DPPC.ALLOW_PRIVATE_INNER-label=Allow inner types to be declared "private"
GLOBAL.DPPC.IGNORE_CLASSES-label=Ignore the classes that correspond to these qualified names
GLOBAL.DPPC.IGNORE_PROTECTED_PP-label=Ignore "protected" types which can be made package-private
GLOBAL.DPPC.msg.1=Class ''{0}'' should be declared {1}.
GLOBAL.DPPC.msg.2=Interface ''{0}'' should be declared {1}.
GLOBAL.DPPC.msg.3=Enum ''{0}'' should be declared {1}.
GLOBAL.DPPC.msg.4=Annotation ''{0}'' should be declared {1}.
GLOBAL.DPPF=Declare "public/protected" fields as inaccessible as possible
GLOBAL.DPPF.IGNORE_ABSTRACT-label=Ignore fields declared in "abstract" classes
GLOBAL.DPPF.IGNORE_FINAL-label=Ignore "final" fields
GLOBAL.DPPF.IGNORE_PROTECTED_PP-label=Ignore "protected" fields which can be made package-private
GLOBAL.DPPF.IGNORE_TYPE_TABLE-label=Ignore the following classes\: (specify with Glob expressions)
GLOBAL.DPPF.IGNORE_TYPE_TABLE.GLOBAL__DPPF__IGNORE_TYPE_TABLE__COLUMN1-label=Superclass
GLOBAL.DPPF.IGNORE_TYPE_TABLE.GLOBAL__DPPF__IGNORE_TYPE_TABLE__COLUMN2-label=Class
GLOBAL.DPPF.msg.1=Field ''{0}'' should be declared {1}.
GLOBAL.DPPM=Declare "public/protected" methods as inaccessible as possible
GLOBAL.DPPM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
GLOBAL.DPPM.CHECK_LOCAL-label=Check methods in local classes
GLOBAL.DPPM.IGNORE_OVERLOADED-label=Ignore "overloaded" methods
GLOBAL.DPPM.IGNORE_PROTECTED_PP-label=Ignore "protected" methods which can be made package-private
GLOBAL.DPPM.msg.1=Method ''{0}()'' should be declared {1}.
GLOBAL.DPPM.msg.2=Constructor ''{0}()'' should be declared {1}.
GLOBAL.NIE=Avoid interfaces which are never implemented and "abstract" classes which are never extended.
GLOBAL.NIE.IGNORE_CONSTANTS-label=Ignore interfaces which only declare constants
GLOBAL.NIE.msg.1=The interface ''{0}'' is never implemented.
GLOBAL.NIE.msg.2=The "abstract" class ''{0}'' is never extended.
GLOBAL.SF=Declare non-private fields "final" if they are read-only
GLOBAL.SF.CHECK_UNUSED-label=Check unused fields
GLOBAL.SF.IGNORE_TYPE_TABLE-label=Ignore the following classes\: (specify with Glob expressions)
GLOBAL.SF.IGNORE_TYPE_TABLE.GLOBAL__SF__IGNORE_TYPE_TABLE__COLUMN1-label=Superclass
GLOBAL.SF.IGNORE_TYPE_TABLE.GLOBAL__SF__IGNORE_TYPE_TABLE__COLUMN2-label=Class
GLOBAL.SF.PACKAGE_FIELD-label=package-private
GLOBAL.SF.PROTECTED_FIELD-label=protected
GLOBAL.SF.PUBLIC_FIELD-label=public
GLOBAL.SF.STATIC_FIELD-label=Check "static" fields only
GLOBAL.SF.group.0-label=Check fields with the following accessibilities\:
GLOBAL.SF.msg.1=Field ''{0}'' should be declared "final".
GLOBAL.SPAC=Declare a package-private "class" "final" if it is not subclassed
GLOBAL.SPAC.CHECK_UNUSED-label=Check unused classes
GLOBAL.SPAC.msg.1=Class ''{0}'' should be declared "final".
GLOBAL.SPAC.msg.2=Interface ''{0}'' should be declared "final".
GLOBAL.SPAM=Declare a package-private method "final" if it is not overridden
GLOBAL.SPAM.CHECK_ABSTRACT-label=Check methods in abstract classes
GLOBAL.SPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
GLOBAL.SPAM.CHECK_LOCAL-label=Check methods in local classes
GLOBAL.SPAM.CHECK_STATIC_METHOD-label=Check static methods
GLOBAL.SPAM.CHECK_UNUSED-label=Check unused methods
GLOBAL.SPAM.msg.1=Method ''{0}()'' should be declared "final".
GLOBAL.SPPC=Declare a "public/protected" "class" "final" if it is not subclassed
GLOBAL.SPPC.CHECK_UNUSED-label=Check unused classes
GLOBAL.SPPC.msg.1=Class ''{0}'' should be declared "final".
GLOBAL.SPPC.msg.2=Interface ''{0}'' should be declared "final".
GLOBAL.SPPM=Declare a "public/protected" method "final" if it is not overridden
GLOBAL.SPPM.CHECK_ABSTRACT-label=Check methods in abstract classes
GLOBAL.SPPM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
GLOBAL.SPPM.CHECK_LOCAL-label=Check methods in local classes
GLOBAL.SPPM.CHECK_STATIC_METHOD-label=Check static methods
GLOBAL.SPPM.CHECK_UNUSED-label=Check unused methods
GLOBAL.SPPM.msg.1=Method ''{0}()'' should be declared "final".
GLOBAL.UCC=Ensure correct constructor declarations in utility classes
GLOBAL.UCC.ABSTRACT-label=Must not be "abstract"
GLOBAL.UCC.CONSTRUCTOR_NEVER_CALLED-label=Constructor(s) must never be called (requires global analysis)
GLOBAL.UCC.INNER_TYPE-label=Must not declare any inner types
GLOBAL.UCC.NON_PRIVATE_METH-label=Must have at least one non-"private" method other than the 'main()' method
GLOBAL.UCC.NO_SUBCLASSES-label=Must not have any subclasses (requires global analysis)
GLOBAL.UCC.PUBLIC-label=Must be "public"
GLOBAL.UCC.SUPERCLASS-label=Must not have a superclass other than "java.lang.Object"
GLOBAL.UCC.group.0-label=Requirements for a Utility Class
GLOBAL.UCC.msg.1=Utility class ''{0}'' has non-"private" constructor.
GLOBAL.UCC.msg.2=Utility class ''{0}'' does not have a "private" constructor.
GLOBAL.UEC=Avoid globally unused enum constants
GLOBAL.UEC.msg.1=Enum constant not directly used\: {0}.
GLOBAL.UPAC=Avoid globally unused package-private types
GLOBAL.UPAC.msg.1=Globally unused {1} class\: {0}.
GLOBAL.UPAC.msg.2=Globally unused {1} interface\: {0}.
GLOBAL.UPAC.msg.3=Globally unused {1} enum\: {0}.
GLOBAL.UPAC.msg.4=Globally unused {1} annotation\: {0}.
GLOBAL.UPAF=Avoid globally unused package-private fields
GLOBAL.UPAF.IGNORE_FINAL-label=Ignore "final" fields
GLOBAL.UPAF.msg.1=Globally unused {1} field\: {0}.
GLOBAL.UPAM=Avoid globally unused package-private methods
GLOBAL.UPAM.msg.1=Globally unused {1} method\: {0}().
GLOBAL.UPAM.msg.2=Globally unused {1} constructor {0}().
GLOBAL.UPPC=Avoid globally unused "public/protected" types
GLOBAL.UPPC.SKIP_MAIN-label=Do not report an error for classes with a main method.
GLOBAL.UPPC.XPATH_TABLE-label=Classes used in XML files
GLOBAL.UPPC.XPATH_TABLE.GLOBAL__UPPC__XPATH_TABLE__COLUMN1-label=Description
GLOBAL.UPPC.XPATH_TABLE.GLOBAL__UPPC__XPATH_TABLE__COLUMN2-label=File Pattern (Glob Expression)
GLOBAL.UPPC.XPATH_TABLE.GLOBAL__UPPC__XPATH_TABLE__COLUMN3-label=XPath Expression
GLOBAL.UPPC.msg.1=Globally unused {1} class\: {0}.
GLOBAL.UPPC.msg.2=Globally unused {1} interface\: {0}.
GLOBAL.UPPC.msg.3=Globally unused {1} enum\: {0}.
GLOBAL.UPPC.msg.4=Globally unused {1} annotation\: {0}.
GLOBAL.UPPF=Avoid globally unused "public/protected" fields
GLOBAL.UPPF.IGNORE_FINAL-label=Ignore "final" fields
GLOBAL.UPPF.msg.1=Globally unused {1} field\: {0}.
GLOBAL.UPPM=Avoid globally unused "public/protected" methods
GLOBAL.UPPM.IGNORE_MAIN-label=Ignore "main" method
GLOBAL.UPPM.XPATH_TABLE-label=Classes used in XML files
GLOBAL.UPPM.XPATH_TABLE.GLOBAL__UPPM__XPATH_TABLE__COLUMN1-label=Description
GLOBAL.UPPM.XPATH_TABLE.GLOBAL__UPPM__XPATH_TABLE__COLUMN2-label=File Pattern (Glob Expression)
GLOBAL.UPPM.XPATH_TABLE.GLOBAL__UPPM__XPATH_TABLE__COLUMN3-label=XPath Expression
GLOBAL.UPPM.msg.1=Globally unused {1} method\: {0}().
GLOBAL.UPPM.msg.2=Globally unused {1} constructor {0}().
HIBERNATE=Hibernate Framework
HIBERNATE.CHS=Close Hibernate Sessions in "finally" blocks
HIBERNATE.CHS.SAFE_OPEN_METHODS-label=Hibernate Session methods treated as safe (in regular expression)
HIBERNATE.CHS.SAFE_OPEN_METHODS.HIBERNATE__CHS__SAFE_OPEN_METHODS__COLUMN1-label=Declaring type
HIBERNATE.CHS.SAFE_OPEN_METHODS.HIBERNATE__CHS__SAFE_OPEN_METHODS__COLUMN2-label=Method name
HIBERNATE.CHS.msg.1=Hibernate Session ''{0}'' is not closed in a "finally" block.
HIBERNATE.CSF=Close all 'SessionFactory' objects.
HIBERNATE.CSF.msg.1=The ''SessionFactory'' object ''{0}'' may never be closed.
HIBERNATE.GSIM=Include getter and setter methods and an id field for any object mapped to a column in a database table.
HIBERNATE.GSIM.msg.1=There is no method called ''{0}'' to access the field ''{1}''.
HIBERNATE.GSIM.msg.2=There is no method called ''{0}'' to set the field ''{1}''.
HIBERNATE.GSIM.msg.3=The type ''{0}'' is missing an ''id'' field.
HIBERNATE.IDC=Declare a no-argument constructor for Hibernate persistent classes.
HIBERNATE.IDC.msg.1=The class ''{0}'' does not have a no-argument constructor.
HIBERNATE.OHCE=Override the 'equals' and 'hashCode' methods for mapped Hibernate objects.
HIBERNATE.OHCE.msg.1=The mapped object ''{0}'' does not override the ''{1}()'' method.
HIBERNATE.PIDS=Declare the setter method for the Hibernate identifier 'private'.
HIBERNATE.PIDS.msg.1=The method ''{0}'' should be 'private'.
HIBERNATE.RBT=Roll back any active transactions in 'catch' blocks.
HIBERNATE.RBT.msg.1=This ''catch'' block does not roll back the transaction ''{0}''.
HIBERNATE.SLM=Call 'setLockMode()' before executing a Hibernate Query.
HIBERNATE.SLM.msg.1=This call to ''{0}()'' executes a Hibernate Query without first calling ''setLockMode()'' on it.
INIT=Initialization
INIT.AAI=Do not use array initializers.
INIT.AAI.ALLOW_EMPTY-label=Allow empty array initializers.
INIT.AAI.msg.1=Array initializer used.
INIT.ADI=Avoid explicitly initializing fields which have already been initialized by a superclass' constructor
INIT.ADI.MAX_DEPTH-label=Maximum depth of checking allowed
INIT.ADI.msg.1=This initialization of the field "{0}" may overwrite the value to which the field is initialized by a constructor of a superclass.
INIT.ADI.msg.2=This assignment to the field "{0}" may overwrite the value to which the field is initialized by a constructor of a superclass.
INIT.AULI=Ensure that the "if" check for lazy initialization uses the correct operator.
INIT.AULI.msg.1=This "if" statement may mistakenly use "\!\=" instead of "\=\=" for lazy initialization of "{0}".
INIT.CLIB=Do not put code other than initialization code in lazy initialization blocks.
INIT.CLIB.NOT_USED_OUTSIDE-label=Only report a violation for lazy-initialized variables which are not read outside of the lazy initialization block.
INIT.CLIB.msg.1=This lazy initialization block may contain code other than initialization code.  Make sure that the logic is correct.
INIT.CSI=Explicitly initialize all fields
INIT.CSI.CHECK_NON_STATIC-label=Check non-static fields
INIT.CSI.CHECK_STATIC-label=Check static fields
INIT.CSI.INIT_IN_CONST-label=Allow initialization in each constructor
INIT.CSI.INIT_IN_CONST_STATIC-label=Allow initialization in each constructor
INIT.CSI.INIT_IN_DECLARATION-label=Allow initialization in the declaration
INIT.CSI.INIT_IN_DECLARATION_STATIC-label=Allow initialization in the declaration
INIT.CSI.MAX_CHECKING_LEVEL-label=Maximum level of checking allowed
INIT.CSI.msg.1=Field ''{0}'', declared on line {1}, is not initialized in this constructor.
INIT.CSI.msg.2=Field ''{0}'' is not initialized in its declaration.
INIT.CSI.msg.3=Field ''{0}'', declared on line {1}, is not initialized in this constructor nor in its declaration.
INIT.CSI.msg.4=There is no explicit constructor to initialize the field ''{0}''.
INIT.DI=Avoid double initialization of fields
INIT.DI.CHECK_NON_STATIC-label=Check non-static fields
INIT.DI.CHECK_STATIC-label=Check static fields
INIT.DI.IGNORE_DEFAULT-label=Ignore fields initialized with default values
INIT.DI.MAX_CHECKING_LEVEL-label=Maximum level of checking allowed
INIT.DI.msg.1=Field ''{0}'' may be double initialized (initialized both in a constructor and in its declaration).
INIT.DIA=Use diamond to invoke the constructor of a generic class
INIT.DIA.msg.1=Unnecessarily invoked full constructor of a generic class ''{0}''. You should use diamond ''{1}'' instead.
INIT.IC=Do not use initialization circularities for fields
INIT.IC.msg.1=Initialization circularity is detected on this field. Trace of the cycle\: {0}.
INIT.LV=Initialize all local variables explicitly at the declaration statement
INIT.LV.msg.1=Local variable not initialized\: {0}
INIT.SF=Use explicit initializations/Do not initialize "static" fields to default values
INIT.SF.INITIALIZATION_OPTION-label=Check option\:
INIT.SF.INITIALIZATION_OPTION.0-label=Enforce explicit initializations
INIT.SF.INITIALIZATION_OPTION.1-label=Disallow explicit initializations to default values
INIT.SF.msg.1="static" field ''{0}'' not initialized.
INIT.SF.msg.2="static" field ''{0}'' is redundantly initialized to default value.
INIT.SFA=Do not initialize "static" "final" variables with non "final" "static" variables.
INIT.SFA.IGNORE_STRING-label=Ignore fields of type "String" in initializations.
INIT.SFA.msg.1=Avoid initializing static final fields with static but non final fields.
INIT.UIRC=Avoid uninitialized reads of fields before or during constructor execution
INIT.UIRC.CHECK_NON_STATIC-label=Check non-static fields.
INIT.UIRC.CHECK_STATIC-label=Check static fields.
INIT.UIRC.IGNORE_PRIMITIVE-label=Ignore fields of primitive types.
INIT.UIRC.MAX_CHECKING_LEVEL-label=Maximum level of checking allowed
INIT.UIRC.msg.1=Field ''{0}'' is not initialized by the time of this read access.
INIT.UIRC.msg.2=Field ''{0}'' is not explicitly initialized by the time of this read access.
INTER=Internationalization
INTER.CCL=Use the optional java.util.Locale parameter
INTER.CCL.CANDIDATES_TABLE-label=List of methods with optional java.util.Locale parameter
INTER.CCL.CANDIDATES_TABLE.INTER__CCL__CANDIDATES_TABLE__COLUMN1-label=Type
INTER.CCL.CANDIDATES_TABLE.INTER__CCL__CANDIDATES_TABLE__COLUMN2-label=Method
INTER.CCL.msg.1=The ''{0}'' method is called without the java.util.Locale parameter
INTER.CLO=Do not use single characters with logic operators in an Internationalized environment
INTER.CLO.IGNORE_TABLE-label=Ignore characters passed to the following methods
INTER.CLO.IGNORE_TABLE.INTER__CLO__IGNORE_TABLE__COLUMN1-label=Type (in regular expression
INTER.CLO.IGNORE_TABLE.INTER__CLO__IGNORE_TABLE__COLUMN2-label=Method (in regular expression)
INTER.CLO.msg.1=Logical operator used with a single character literal\: {0}.
INTER.COS=Do not use String concatenation in an Internationalized environment.
INTER.COS.msg.1=Concatenating strings.
INTER.CTLC=Do not call 'Character.toLowerCase(char)' or 'Character.toUpperCase(char)' in an internationalized environment.
INTER.CTLC.msg.1=Called 'Character.toLowerCase(char)'
INTER.CTLC.msg.2=Called 'Character.toUpperCase(char)'
INTER.DTS=Do not call 'toString()' or 'String.valueOf()' on Date objects in an Internationalized environment.
INTER.DTS.msg.1=Called 'toString()' on a 'Date' object.
INTER.DTS.msg.2=Called 'String.valueOf()' on a 'Date' object.
INTER.DTS.msg.3=Called 'toString()' implicitly on a 'Date' object.
INTER.ITT=Isolate translatable text in resource bundles in an Internationalized environment
INTER.ITT.CHECK_ONLY_ALPHA-label=Check only Strings that contain ASCII alphabetic characters [a-z][A-Z]
INTER.ITT.IGNORED-label=Ignore String literals which match this regular expression\:
INTER.ITT.IGNORE_DETAIL_MESSAGES-label=Ignore String literals passed to the constructors of Exceptions
INTER.ITT.IGNORE_TABLE-label=Ignore Strings passed to the following methods
INTER.ITT.IGNORE_TABLE.INTER__ITT__IGNORE_TABLE__COLUMN1-label=Type (in regular expression)
INTER.ITT.IGNORE_TABLE.INTER__ITT__IGNORE_TABLE__COLUMN2-label=Method (in regular expression)
INTER.ITT.msg.1=Non internationalized string\: {0}.
INTER.NCL=Use "static final" constants for single character literals in an Internationalized environment
INTER.NCL.msg.1=Single character literal used instead of a constant\: {0}.
INTER.NTS=Do not call 'toString()' or 'String.valueOf()' on numeric values in an Internationalized environment.
INTER.NTS.msg.1=Called 'toString()' on a numeric object.
INTER.NTS.msg.2=Called 'String.valueOf()' on a numeric value.
INTER.NTS.msg.3=Called 'toString()' implicitly on a numeric object.
INTER.SDFL=Provide a 'Locale' argument when instantiating 'SimpleDateFormat' objects
INTER.SDFL.msg.1=Instantiating 'SimpleDateFormat' object without a 'Locale' argument.
INTER.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
INTER.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
INTER.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
INTER.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
INTER.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
INTER.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
INTER.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
INTER.TTS=Do not call 'toString()' or 'String.valueOf()' on Time objects in an Internationalized environment.
INTER.TTS.msg.1=Called 'toString()' on a 'Time' object.
INTER.TTS.msg.2=Called 'String.valueOf()' on a 'Time' object.
INTER.TTS.msg.3=Called 'toString()' implicitly on a 'Time' object.
INTER.UNLS=Avoid unnecessary "$NON-NLS" and "NOI18N" comments.
INTER.UNLS.msg.1=The comment "{0}" does not have a corresponding String constant.
INTER.UNLS.msg.2=This "NOI18N" comment is unnecessary because there are no String literals on this line.
INTER.UNLS.msg.3=The comment "{0}" is unnecessary because there is a "/* NOI18N */" comment on this line.
JAVADOC=Javadoc Comments
JAVADOC.BT=Avoid unsupported '@' tags and other tags that should not be used in Javadoc comments
JAVADOC.BT.TAG_LIST-label=Allowed Javadoc tag list (in regular expressions)
JAVADOC.BT.msg.1=Unsupported Javadoc tag\: {0}.
JAVADOC.BT.msg.2=The ''{0}'' tag should not be used in a Javadoc comment.
JAVADOC.CRN=Always include a description of whether or not a method can return null in the Javadoc.
JAVADOC.CRN.ALLOW_OVERRIDE-label=Use parent method javadoc for @Override methods with no javadoc
JAVADOC.CRN.msg.1=The method ''{0}'' does not have a Javadoc comment describing whether or not the method can return null.
JAVADOC.CRN.msg.2=The method ''{0}'' should include an ''@post'' or ''@return'' tag describing whether or not the method can return null.
JAVADOC.CRN.msg.3=The ''@post''/''@return'' tag(s) for the method ''{0}'' do not properly describe whether or not the method can return null.
JAVADOC.DPMT=Avoid unused Javadoc tags
JAVADOC.DPMT.CHECK_PARAM-label=Check unused @param tags
JAVADOC.DPMT.CHECK_RETURN-label=Check unused @return tags
JAVADOC.DPMT.CHECK_SEE-label=Check unused @see and @link tags
JAVADOC.DPMT.CHECK_THROWS-label=Check unused @throws and @exception tags
JAVADOC.DPMT.IGNORE_RUNTIME_EXCEPTION-label=Ignore @throws and @exception tags of 'RuntimeException'
JAVADOC.DPMT.msg.1=''{0}'' doesn''t match the return type of ''{1}''.
JAVADOC.DPMT.msg.2=''{0}'' doesn''t match any Java element.
JAVADOC.DPMT.msg.3=''{0}'' doesn''t match any parameter in ''{1}''.
JAVADOC.DPMT.msg.4=''{0}'' doesn''t match any exception thrown by ''{1}''.
JAVADOC.ECTF=Enforce custom Javadoc tags for fields
JAVADOC.ECTF.CHECK_PACKAGE-label=Check "package-private" field declarations
JAVADOC.ECTF.CHECK_PRIVATE-label=Check "private" field declarations
JAVADOC.ECTF.CHECK_PROTECTED-label=Check "protected" field declarations
JAVADOC.ECTF.CHECK_PUBLIC-label=Check "public" field declarations
JAVADOC.ECTF.ENFORCED_TAGS-label=Custom Javadoc tags to be enforced
JAVADOC.ECTF.INTERNAL_LINE-label=With the following comment string
JAVADOC.ECTF.INTERNAL_PKG-label=Within the following packages(Regular Expression)
JAVADOC.ECTF.group.0-label=Do not report violations for classes
JAVADOC.ECTF.msg.1=Missing Javadoc tag ''{0}'' for field declaration of {1}.
JAVADOC.ECTM=Enforce custom Javadoc tags for methods/annotation member types
JAVADOC.ECTM.CHECK_PACKAGE-label=Check "package-private" methods/annotation member types
JAVADOC.ECTM.CHECK_PRIVATE-label=Check "private" methods/annotation member types
JAVADOC.ECTM.CHECK_PROTECTED-label=Check "protected" methods/annotation member types
JAVADOC.ECTM.CHECK_PUBLIC-label=Check "public" methods/annotation member types
JAVADOC.ECTM.ENFORCED_TAGS-label=Custom Javadoc tags to be enforced
JAVADOC.ECTM.INTERNAL_LINE-label=With the following comment string
JAVADOC.ECTM.INTERNAL_PKG-label=Within the following packages(Regular Expression)
JAVADOC.ECTM.group.0-label=Do not report violations for classes
JAVADOC.ECTM.msg.1=Missing Javadoc tag ''{0}'' for method ''{1}()''.
JAVADOC.ECTM.msg.2=Missing Javadoc tag ''{0}'' for annotation member type ''{1}()''.
JAVADOC.ECTT=Enforce custom Javadoc tags for types
JAVADOC.ECTT.CHECK_PACKAGE-label=Check "package-private" types
JAVADOC.ECTT.CHECK_PRIVATE-label=Check "private" types
JAVADOC.ECTT.CHECK_PROTECTED-label=Check "protected" types
JAVADOC.ECTT.CHECK_PUBLIC-label=Check "public" types
JAVADOC.ECTT.ENFORCED_TAGS-label=Custom Javadoc tags to be enforced
JAVADOC.ECTT.INTERNAL_LINE-label=With the following comment string
JAVADOC.ECTT.INTERNAL_PKG-label=Within the following packages(Regular Expression)
JAVADOC.ECTT.group.0-label=Do not report violations for classes
JAVADOC.ECTT.msg.1=Missing Javadoc tag ''{0}'' for class ''{1}''.
JAVADOC.ECTT.msg.2=Missing Javadoc tag ''{0}'' for interface ''{1}''.
JAVADOC.ECTT.msg.3=Missing Javadoc tag ''{0}'' for enum ''{1}''.
JAVADOC.ECTT.msg.4=Missing Javadoc tag ''{0}'' for annotation ''{1}''.
JAVADOC.JNJD=Do not insert non-Javadoc comments between Javadoc comments and declarations
JAVADOC.JNJD.msg.1=Avoid inserting non-Javadoc comments between Javadoc comments and declarations.
JAVADOC.MAJDT=Use the '@author' Javadoc tag in declaration Javadoc comments
JAVADOC.MAJDT.CHECK_FIELD-label=Check field declarations
JAVADOC.MAJDT.CHECK_METHOD-label=Check method/annotation member type declarations
JAVADOC.MAJDT.CHECK_TYPE-label=Check type declarations
JAVADOC.MAJDT.msg.1=Missing ''@author'' Javadoc tag\: {0}.
JAVADOC.MDJT=Include a meaningful description in Javadoc tags.
JAVADOC.MDJT.CHECK_PACKAGE-label="package-private"
JAVADOC.MDJT.CHECK_PRIVATE-label="private"
JAVADOC.MDJT.CHECK_PROTECTED-label="protected"
JAVADOC.MDJT.CHECK_PUBLIC-label="public"
JAVADOC.MDJT.group.0-label=Check the following\:
JAVADOC.MDJT.msg.1=This '@return' tag does not contain a meaningful description of the method's return value.
JAVADOC.MDJT.msg.2=This '@param' tag does not contain a meaningful description of the parameter.
JAVADOC.MDJT.msg.3=This ''{0}'' tag should not be empty.
JAVADOC.MISFORMAT=Avoid misformatted Javadoc tags
JAVADOC.MISFORMAT.JAVADOC.MISFORMAT.PACKAGE-label=Check "package-private" methods
JAVADOC.MISFORMAT.JAVADOC.MISFORMAT.PRIVATE-label=Check "private" methods
JAVADOC.MISFORMAT.JAVADOC.MISFORMAT.PROTECTED-label=Check "protected" methods
JAVADOC.MISFORMAT.JAVADOC.MISFORMAT.PUBLIC-label=Check "public" methods
JAVADOC.MISFORMAT.msg.1=Probably ''{0}'' is misformatted Javadoc tag.
JAVADOC.MRDC=Use the '@return' Javadoc tag in method Javadoc comments
JAVADOC.MRDC.CHECK_PACKAGE-label=Check "package-private" methods
JAVADOC.MRDC.CHECK_PROTECTED-label=Check "protected" methods
JAVADOC.MRDC.CHECK_PUBLIC-label=Check "public" methods
JAVADOC.MRDC.INHERITED_TAG-label=Use these tags for overriding and implementing methods\:
JAVADOC.MRDC.msg.1=Method ''{0}'' missing ''@return'' Javadoc tag.
JAVADOC.MRDC.sCHECK_PRIVATE-label=Check "private" methods
JAVADOC.ORDER=Order Javadoc tags appropriately
JAVADOC.ORDER.ORDER_LIST-label=Javadoc tag table
JAVADOC.ORDER.ORDER_LIST.JAVADOC__ORDER__ORDER_LIST__COLUMN1-label=Ignore tag
JAVADOC.ORDER.ORDER_LIST.JAVADOC__ORDER__ORDER_LIST__COLUMN2-label=Javadoc Tag Order
JAVADOC.ORDER.msg.1=Invalid Javadoc tag order in ''{0}''.
JAVADOC.ORDER.msg.2=''{0}'' tag should be placed before ''{1}'' tag in ''{2}()''.
JAVADOC.PARAM=Use the '@param' Javadoc tag for each parameter of methods
JAVADOC.PARAM.CHECK_PACKAGE-label=Check "package-private" methods
JAVADOC.PARAM.CHECK_PRIVATE-label=Check "private" methods
JAVADOC.PARAM.CHECK_PROTECTED-label=Check "protected" methods
JAVADOC.PARAM.CHECK_PUBLIC-label=Check "public" methods
JAVADOC.PARAM.INHERITED_TAG-label=Use these tags for overriding and implementing methods\:
JAVADOC.PARAM.msg.1=Method ''{0}'' is missing ''@param {1}'' in Javadoc comment.
JAVADOC.PJDC=Provide Javadoc comments and descriptions for types
JAVADOC.PJDC.CHECK_MISSING_JAVADOC-label=Check if javadoc comment is missing
JAVADOC.PJDC.CHECK_PACKAGE-label=Check "package-private" types
JAVADOC.PJDC.CHECK_PRIVATE-label=Check "private" types
JAVADOC.PJDC.CHECK_PROTECTED-label=Check "protected" types
JAVADOC.PJDC.CHECK_PUBLIC-label=Check "public" types
JAVADOC.PJDC.IGNORE_LIST-label=Ignore types with fully qualified names (in regular expression)\:
JAVADOC.PJDC.IGNORE_LOCAL_CLASS-label=Ignore local classes (classes declared inside method body)
JAVADOC.PJDC.IGNORE_MEMBER_CLASS-label=Ignore member types (inner types)
JAVADOC.PJDC.JAVADOC.MCJCH-label=Check if javadoc description is missing
JAVADOC.PJDC.group.0-label=Scope of checking
JAVADOC.PJDC.group.1-label=Accessibility
JAVADOC.PJDC.group.2-label=Special case
JAVADOC.PJDC.msg.1=Missing Javadoc comment for ''{0}''.
JAVADOC.PJDC.msg.2=Missing description for ''{0}''.
JAVADOC.PJDF=Provide Javadoc comments and descriptions for fields
JAVADOC.PJDF.CHECK_MISSING_JAVADOC-label=Check if javadoc comment is missing
JAVADOC.PJDF.CHECK_PACKAGE-label=Check "package-private" fields
JAVADOC.PJDF.CHECK_PRIVATE-label=Check "private" fields
JAVADOC.PJDF.CHECK_PROTECTED-label=Check "protected" fields
JAVADOC.PJDF.CHECK_PUBLIC-label=Check "public" fields
JAVADOC.PJDF.IGNORE_LIST-label=Ignore fields with names (in regular expression)\:
JAVADOC.PJDF.JAVADOC.MFJCH-label=Check javadoc description is missing
JAVADOC.PJDF.group.0-label=Accessibility
JAVADOC.PJDF.group.1-label=Special case
JAVADOC.PJDF.group.2-label=Scope of checking
JAVADOC.PJDF.msg.1=Missing Javadoc comment for ''{0}''.
JAVADOC.PJDF.msg.2=Missing description for ''{0}''.
JAVADOC.PJDM=Provide Javadoc comments and descriptions for methods
JAVADOC.PJDM.CHECK_MISSING_JAVADOC-label=Check if javadoc comment is missing
JAVADOC.PJDM.CHECK_PACKAGE-label=Check "package-private" methods/annotation member types
JAVADOC.PJDM.CHECK_PRIVATE-label=Check "private" methods/annotation member types
JAVADOC.PJDM.CHECK_PROTECTED-label=Check "protected" methods/annotation member types
JAVADOC.PJDM.CHECK_PUBLIC-label=Check "public" methods/annotation member types
JAVADOC.PJDM.IGNORE_ABSTRACT_METHOD-label=Ignore "abstract" methods
JAVADOC.PJDM.IGNORE_INTERFACE_METHOD-label=Ignore method declarations within interfaces
JAVADOC.PJDM.IGNORE_LIST-label=Ignore methods/annotation member types with names (in regular expression)\:
JAVADOC.PJDM.IGNORE_LOCAL_AND_ANONYMOUS_METHOD-label=Ignore method declarations within local classes and anonymous classes
JAVADOC.PJDM.IGNORE_NOT_FROM_SOURCE-label=Ignore overriding methods where the source code for the overridden method is not available
JAVADOC.PJDM.IGNORE_OVERRIDING_METHOD-label=Ignore overriding methods
JAVADOC.PJDM.IGNORE_PRIVATE_MEMBER_METHOD-label=Ignore method declarations within private member classes
JAVADOC.PJDM.IGNORE_SETTER_GETTER-label=Ignore setter and getter methods
JAVADOC.PJDM.JAVADOC.MMJCH-label=Check if javadoc description is missing
JAVADOC.PJDM.group.0-label=Accessibility
JAVADOC.PJDM.group.1-label=Special case
JAVADOC.PJDM.group.2-label=Scope of checking
JAVADOC.PJDM.msg.1=Missing Javadoc comment for method ''{0}()''.
JAVADOC.PJDM.msg.2=Missing description for method ''{0}()''.
JAVADOC.SINGLE=Enforce restraint on number of lines used for Javadoc comments
JAVADOC.SINGLE.CHECK_OPTION-label=Javadoc format option\:
JAVADOC.SINGLE.CHECK_OPTION.0-label=Always use multiple lines for javadoc comments
JAVADOC.SINGLE.CHECK_OPTION.1-label=Always use single line for javadoc comments if they fit
JAVADOC.SINGLE.msg.1=Javadoc comment is placed on a single line, which should be avoided.
JAVADOC.SINGLE.msg.2=Javadoc comment could be refitted to a single line.
JAVADOC.SMJT=Use the '@concurrency' Javadoc tag on "synchronized" methods and blocks
JAVADOC.SMJT.CHECK_PACKAGE-label=Check "package-private" methods
JAVADOC.SMJT.CHECK_PRIVATE-label=Check "private" methods
JAVADOC.SMJT.CHECK_PROTECTED-label=Check "protected" methods
JAVADOC.SMJT.CHECK_PUBLIC-label=Check "public" methods
JAVADOC.SMJT.msg.1=Missing '@concurrency' Javadoc comment for "synchronized" method\: {0}.
JAVADOC.SMJT.msg.2=Missing '@concurrency' Javadoc comment for method with "synchronized" block\: {0}.
JAVADOC.SPELL=Avoid misspelling words in Javadoc comments and string literals.
JAVADOC.SPELL.IGNORE_ALL_UPPER-label=Ignore uppercase word
JAVADOC.SPELL.IGNORE_STR_LITERAL-label=Ignore words in string literal
JAVADOC.SPELL.MIN_SIZE-label=Ignore length of word less than
JAVADOC.SPELL.WORD_LIST-label=User-defined dictionary (share)
JAVADOC.SPELL.msg.1=Misspelled word ''{0}''.
JAVADOC.SRRP=Specify 'RUNTIME' as the retention policy when using the '@Documented' annotation.
JAVADOC.SRRP.msg.1=The '@Documented' annotation is used here without specifying 'RUNTIME' as the retention policy.
JAVADOC.THROW=Use the '@throws' or '@exception' Javadoc tag in methods
JAVADOC.THROW.CHECK_PACKAGE-label=Check "package-private" methods
JAVADOC.THROW.CHECK_PRIVATE-label=Check "private" methods
JAVADOC.THROW.CHECK_PROTECTED-label=Check "protected" methods
JAVADOC.THROW.CHECK_PUBLIC-label=Check "public" methods
JAVADOC.THROW.INHERITED_TAG-label=Use these tags for overriding and implementing methods\:
JAVADOC.THROW.msg.1=Method ''{0}'' is missing ''@throws {1}'' in Javadoc comment.
JAVADOC.TSMJT=Provide a Javadoc comment for 'toString()' methods.
JAVADOC.TSMJT.msg.1=Missing Javadoc for 'toString()'
JAVADOC.TSMJT.msg.2=Missing Javadoc header for 'toString()'
JAVADOC.TSOL=Ensure that certain Javadoc tags only span one line.
JAVADOC.TSOL.TAG_LIST-label=Tags which should not span multiple lines
JAVADOC.TSOL.msg.1=This ''{0}'' tag spans multiple lines. Ensure that this is correct.
JAVADOC.VMCR=Avoid using the '@return' Javadoc tag on "void" methods.
JAVADOC.VMCR.msg.1="void" method has ''@return'' tag\: ''{0} ()''.
JDBC=Java Database Connectivity
JDBC.BRSA=Ensure index is valid in JDBC method invocation.
JDBC.BRSA.msg.1=''{0}'' is not a valid index value for this method call.
JDBC.CDBC=Close JDBC connections in "finally" blocks
JDBC.CDBC.SKIP_LIST-label=Ignore JDBC connection is created by the following types\:
JDBC.CDBC.msg.1=JDBC connection ''{0}'' is not closed in a "finally" block.
JDBC.COCO=Close JDBC objects in the correct order.
JDBC.COCO.msg.1=Possible incorrect order\: {0} ''{1}'' closed after {2} ''{3}''.
JDBC.ODBIL=Do not open or close JDBC connections in loops
JDBC.ODBIL.ADDITIONAL_CLOSE_METHODS-label=Additional JDBC connection closing methods (in regular expression)
JDBC.ODBIL.ADDITIONAL_CLOSE_METHODS.JDBC__ODBIL__ADDITIONAL_CLOSE_METHODS__COLUMN1-label=Declaring type
JDBC.ODBIL.ADDITIONAL_CLOSE_METHODS.JDBC__ODBIL__ADDITIONAL_CLOSE_METHODS__COLUMN2-label=Method name
JDBC.ODBIL.ADDITIONAL_OPEN_METHODS-label=Additional JDBC connection opening methods (in regular expression)
JDBC.ODBIL.ADDITIONAL_OPEN_METHODS.JDBC__ODBIL__ADDITIONAL_OPEN_METHODS__COLUMN1-label=Declaring type
JDBC.ODBIL.ADDITIONAL_OPEN_METHODS.JDBC__ODBIL__ADDITIONAL_OPEN_METHODS__COLUMN2-label=Method name
JDBC.ODBIL.MAX_LEVEL-label=Maximum level of checking allowed
JDBC.ODBIL.msg.1=The method ''{0}'' opens a JDBC connection and is called in a loop.
JDBC.ODBIL.msg.2=The method ''{0}'' closes a JDBC connection and is called in a loop.
JDBC.RRWD=Close JDBC resources in "finally" blocks
JDBC.RRWD.SKIP_LIST-label=Ignore JDBC connection is created by the following types\:
JDBC.RRWD.msg.1=JDBC resource ''{0}'' is not closed in a "finally" block.
JDBC.UPSC=Use "PreparedStatements" correctly.
JDBC.UPSC.WRONG_ORDER-label=Check that 'set' methods are called in the correct order
JDBC.UPSC.msg.1=The query String for this "PreparedStatement" contains {0} ?''s, but there are {1} calls to ''set'' methods.
JDBC.UPSC.msg.2=The query String for this "PreparedStatement" contains {0} ?''s, but there is {1} call to ''set'' method.
JDBC.UPSC.msg.3=''set'' methods are called in the incorrect order\: ''set'' method with argument {0} comes after ''set'' method with argument {1}.
JDBC.UPSC.msg.4=Invalid argument\: the first argument to the ''{0}()'' method must be >\= 1.
JDBC.UPSC.msg.5=Invalid argument\: the first argument to ''{0}()'' is {1}, but there are only {2} ?''s in the corresponding query String.
JDBC.UPSC.msg.6=Misuse "PreparedStatement"\: missing '?' in query string.
JDBC.URSF=Use instance of RowSetFactory to create a RowSet object
JDBC.URSF.msg.1=Creating a RowSet object not using instance of RowSetFactory.
JUNIT=JUnit Test Case
JUNIT.AEAT=Prefer assertEquals and assertNotEquals over assertTrue and assertFalse
JUNIT.AEAT.msg.1=Consider using assertEquals() or assertNotEquals() method.
JUNIT.AHLOD=Do not hard code the location to data used by a unit test.
JUNIT.AHLOD.msg.1=The location of data file is hard coded.
JUNIT.ANAT=Prefer assertNull and assertNotNull over assertTrue and assertFalse
JUNIT.ANAT.msg.1=Consider using assertNull() or assertNotNull() here.
JUNIT.ANBA=Avoid negating boolean parameters to assertTrue() or assertFalse()
JUNIT.ANBA.msg.1=Consider using {0}() here.
JUNIT.ASAT=Prefer assertSame and assertNotSame over assertTrue and assertFalse
JUNIT.ASAT.msg.1=Consider using assertSame() or assertNotSame() here.
JUNIT.ASSERT=Include a message string in JUnit assertions
JUNIT.ASSERT.IGNORE_ASSERT_EQUALS-label=Ignore 'assertEquals()'
JUNIT.ASSERT.msg.1=No error message in ''{0}()'' in method ''{1}()''.
JUNIT.AST=Do not include assertion statements in threads other than the main thread.
JUNIT.AST.msg.1=This call to ''{0}()'' is in a thread other than the main thread, which may cause any exceptions which are thrown to be hidden.
JUNIT.AUL=Avoid using loops in JUnit tests
JUNIT.AUL.msg.1=Configure the test with the @RepeatedTest or @ParameterizedTest annotation to remove the loop.
JUNIT.AUL.msg.2=Consider using @RepeatedTest or @ParameterizedTest from JUnit 5 to remove the loop.
JUNIT.CBA=Avoid calling 'assert' methods in catch blocks
JUNIT.CBA.CHECK_JUNIT_3-label=Check JUnit 3 test methods
JUNIT.CBA.CHECK_JUNIT_4-label=Check JUnit 4 test methods
JUNIT.CBA.CHECK_JUNIT_5-label=Check JUnit 5 test methods
JUNIT.CBA.msg.1=''{0}'' called in catch block.
JUNIT.CSUTD=Ensure that 'setUp()' and 'tearDown()' methods are implemented correctly.
JUNIT.CSUTD.msg.1=This call to 'super.setUp()' should be placed first in the 'setUp()' method.
JUNIT.CSUTD.msg.2=Avoid catching exceptions thrown by 'super.setUp()'; thrown exceptions should cause the 'setUp()' method to fail.
JUNIT.CSUTD.msg.3=This call to 'super.tearDown()' should be placed in a "finally" block.
JUNIT.CSUTD.msg.4=The body of this 'tearDown()' method should be enclosed by a "try"/"finally" statement with a call to 'super.tearDown()' in the "finally" block.
JUNIT.DIR=Place each test class in the same location as the class that it tests
JUNIT.DIR.msg.1=Test class ''{0}'' is not in the same directory as class ''{1}''.
JUNIT.ETCTA=Avoid extending 'TestCase' in test classes which contain the '@Test' annotation.
JUNIT.ETCTA.msg.1=The class ''{0}'' extends ''TestCase'' and uses the ''@Test'' annotation.
JUNIT.FAIL=Use the fail() method instead of forcing a failed condition using the assertTrue(false) or assertFalse(true) method
JUNIT.FAIL.msg.1=Use the fail() method instead of assertTrue(false) or assertFalse(true) 
JUNIT.FICB=Do not invoke the 'fail()' method in a 'catch' block in a JUnit test method.
JUNIT.FICB.msg.1=''fail()'' method invoked in a ''catch'' block in a JUnit test method.
JUNIT.IGNORE=Ensure that JUnit 5 test classes that use @Ignore are annotated with @ExtendWith(IgnoreCondition.class) or @EnableJUnit4MigrationSupport
JUNIT.IGNORE.msg.1=The ''{0}'' method annotated with @Ignore is used in a JUnit 5 test class that does not support JUnit 4 annotations
JUNIT.OSIC=Do not use the constructor to set up test cases.
JUNIT.OSIC.msg.1=Constructor usage may obscure exception traces
JUNIT.OSIC.msg.2=Constructor missing call to the 'super ()' constructor call
JUNIT.OSUM=Ensure that a setup method is defined in the test class
JUNIT.OSUM.msg.1=Missing ''{0}'' method
JUNIT.OTDM=Ensure that a cleanup method is defined in the test class
JUNIT.OTDM.msg.1=Missing ''{0}'' method
JUNIT.RPL5=Do not use JUnit 4 annotations when migrating tests to JUnit 5
JUNIT.RPL5.ANNOTATIONS_TABLE-label=Replace the following JUnit 4 annotations
JUNIT.RPL5.ANNOTATIONS_TABLE.JUNIT__RPL5__ANNOTATIONS_TABLE__COLUMN1-label=JUnit 4
JUNIT.RPL5.ANNOTATIONS_TABLE.JUNIT__RPL5__ANNOTATIONS_TABLE__COLUMN2-label=JUnit 5
JUNIT.RPL5.msg.1=The ''{0}'' annotation should be replaced by the ''{1}'' annotation when migrating to JUnit 5
JUNIT.SIA=Ensure JUnit test cases include assertion methods
JUNIT.SIA.MAX_LEVEL_ALLOWED-label=Maximum level of checking allowed
JUNIT.SIA.msg.1=Missing assertion method within the JUnit test case method ''{0}()''.
JUNIT.SIFN=Set all fields which are initialized in the 'setUp()' method to "null" in the 'tearDown()' method.
JUNIT.SIFN.MAX_LEVEL-label=Maximum level of checking allowed
JUNIT.SIFN.msg.1=The field ''{0}'' is initialized in the ''{1}()'' method but never set to "null" in the tear-down method.
JUNIT.SIFN.msg.2=The field ''{0}'' is initialized in the ''{1}()'' method, but there is no tear-down method in the class ''{2}''.
JUNIT.SUITE=Make 'suite()' methods "public" and "static"
JUNIT.SUITE.msg.1=Method ''{0}'' is not "public" "static".
JUNIT.TATC=Use '@Test' annotation instead of extending 'TestCase'
JUNIT.TATC.CHECK_ORG_JUNIT-label=Only check files which import from the 'org.junit' package
JUNIT.TATC.msg.1=Class ''{0}'' extends ''TestCase''.
JUNIT.TDIR=Do not use the TemporaryFolder Rule in JUnit 5 tests
JUNIT.TDIR.msg.1=Configure the test with the @TempDir annotation, because the TemporaryFolder Rule is not supported in JUnit 5
JUNIT.TEST=Make sure all methods have at least one JUnit test method
JUNIT.TEST.CHECK_PACKAGE_CLASS-label=Check package-private classes
JUNIT.TEST.CHECK_PACKAGE_METHOD-label=Check package-private methods
JUNIT.TEST.CHECK_PRIVATE_CLASS-label=Check "private" classes
JUNIT.TEST.CHECK_PRIVATE_METHOD-label=Check "private" methods
JUNIT.TEST.CHECK_PROTECTED_CLASS-label=Check "protected" classes
JUNIT.TEST.CHECK_PROTECTED_METHOD-label=Check "protected" methods
JUNIT.TEST.CHECK_PUBLIC_CLASS-label=Check "public" classes
JUNIT.TEST.CHECK_PUBLIC_METHOD-label=Check "public" methods
JUNIT.TEST.IGNORE_CLASS-label=Ignore class list(in regular expression)
JUNIT.TEST.IGNORE_METHOD-label=Ignore method list(in regular expression)
JUNIT.TEST.TEST_CASE_PATTERN-label=Pattern for JUnit test class location
JUNIT.TEST.msg.1=No JUnit test method defined for ''{0}()''.
JUNIT.TEST.tab.CLASS_TAB-label=Class config
JUNIT.TEST.tab.METHOD_TAB-label=Method config
JUNIT.TEST.tab.PATTERN_TAB-label=JUnit test class pattern
JUNIT.UPJT=Include an appropriate Javadoc tag in the Javadoc for JUnit test methods
JUNIT.UPJT.CASE_SENSITIVE-label=Make tag checking case sensitive.
JUNIT.UPJT.REQUIRED_TAGS-label=Include one of the following tags in the Javadoc for each JUnit test method\:
JUNIT.UPJT.REQUIRE_TOKEN-label=Javadoc tag must be followed by a token.
JUNIT.UPJT.msg.1=Test method ''{0}'' does not contain any of the required tags in its Javadoc.
JUNIT.UPJT.msg.2=Test method ''{0}'' does not have any Javadoc.
JUNIT.UPJT.msg.3=The Javadoc for the test method ''{0}'' has one of the required Javadoc tags, but it is not followed by a token.
JUNIT.UPSS=Use the correct signature for the 'suite()' method in JUnit test classes.
JUNIT.UPSS.NO_PARAMS-label=Check that the method has no parameters
JUNIT.UPSS.PUBLIC-label=Check that the method is declared "public"
JUNIT.UPSS.RETURN_TYPE-label=Check that the return type is "junit.framework.Test"
JUNIT.UPSS.STATIC-label=Check that the method is declared "static"
JUNIT.UPSS.TYPO-label=Check that the method name does not contain a typo
JUNIT.UPSS.msg.1=Possible typo implementing method ''suite()''\: ''{0}()'' should be ''suite()''.
JUNIT.UPSS.msg.2='suite()' method should be "public".
JUNIT.UPSS.msg.3='suite()' method should be "static".
JUNIT.UPSS.msg.4='suite()' method should have no parameters.
JUNIT.UPSS.msg.5='suite()' method should have the return type "junit.framework.Test".
MOBILE=Embedded Devices
MOBILE.ACFM=Avoid accessing same fields and methods multiple times
MOBILE.ACFM.msg.1=field ''{0}'' is used multiple times.
MOBILE.ACFM.msg.2=method ''{0}'' is used multiple times.
MOBILE.AMA=Avoid using 'getter' and 'setter' methods
MOBILE.AMA.msg.1=setter method ''{0}'' is used.
MOBILE.AMA.msg.2=getter method ''{0}'' is used.
MOBILE.ANDROID=Google Android
MOBILE.ANDROID.AOSM=Always override 'onSaveInstanceState()'
MOBILE.ANDROID.AOSM.msg.1=Class ''{0}'' did not override ''onSaveInstanceState()'' method.
MOBILE.APTA=Avoid using array of primtive wrapper objects
MOBILE.APTA.msg.1=Use array of "int" instead.
MOBILE.APTA.msg.2=Use array of "long" instead.
MOBILE.APTA.msg.3=Use array of "float" instead.
MOBILE.APTA.msg.4=Use array of "double" instead.
MOBILE.APTA.msg.5=Use array of "char" instead.
MOBILE.APTA.msg.6=Use array of "byte" instead.
MOBILE.APTA.msg.7=Use array of "boolean" instead.
MOBILE.AUEF=Avoid using enhanced "for" loop to walk through a "java.lang.Iterable" object
MOBILE.AUEF.msg.1=Additional object will be created in enhanced "for" loop, should walk through "{0}" directly.
MOBILE.AUI=Avoid declaring "interface" types
MOBILE.AUI.CHECK_FIELD_DECLARATION-label=Check fields
MOBILE.AUI.CHECK_LOCAL_DECLARATION-label=Check local variables
MOBILE.AUI.CHECK_PARAM-label=Check parameters
MOBILE.AUI.CHECK_RETURN-label=Check method return types
MOBILE.AUI.msg.1=interface type ''{0}'' is used.
MOBILE.DARRAY=Avoid multiple dimension arrays
MOBILE.DARRAY.msg.1=Creating arrays that are greater than 1 dimension can be costly.
MOBILE.J2ME=Java 2 Micro Edition
MOBILE.J2ME.ACII=Do not use anonymous classes as interface implementors
MOBILE.J2ME.ACII.msg.1=Anonymous class implementing ''{0}'' should be merged with enclosing class.
MOBILE.J2ME.ARLL=Do not use an array length in a loop condition expression
MOBILE.J2ME.ARLL.msg.1=''{0}.length'' should not be used in a loop condition expression.
MOBILE.J2ME.CIPA=Avoid constant initializations of primitive arrays that exceed a certain size
MOBILE.J2ME.CIPA.msg.1=Array should be initialized from a binary file (estimated savings\: {0} KB).
MOBILE.J2ME.CIPA.msg.2=Array ''{0}'' should be initialized from a binary file (estimated savings\: {1} KB).
MOBILE.J2ME.CSOO=Avoid classes that are subclassed only once and are not publicly used
MOBILE.J2ME.CSOO.msg.1=Class ''{0}'' could potentially be merged with its subclass.
MOBILE.J2ME.EAOF=Do not access a field excessively
MOBILE.J2ME.EAOF.msg.1=Field ''{0}'' is accessed very frequently; try using a local variable as a buffer.
MOBILE.J2ME.EURP=Ensure methods use return parameters instead of returning new objects
MOBILE.J2ME.EURP.msg.1=Method ''{0}'' could use a return parameter instead of returning a new ''{1}'' object.
MOBILE.J2ME.OOME=Catch 'OutOfMemoryError' for large array allocations
MOBILE.J2ME.OOME.msg.1='OutOfMemoryError' should be caught for potentially large array allocations.
NAMING=Naming Conventions
NAMING.ANNS=Follow class name conventions defined for annotations
NAMING.ANNS.SET_CLASS_NAME-label=Configure expected name for class using annotation
NAMING.ANNS.SET_CLASS_NAME.NAMING__ANNS__SET_CLASS_NAME__COLUMN1-label=Expected class name
NAMING.ANNS.SET_CLASS_NAME.NAMING__ANNS__SET_CLASS_NAME__COLUMN2-label=Fully qualified name of annotation
NAMING.ANNS.msg.1=Your class should using regexp ''{0}'' convention because using ''{1}'' annotation.
NAMING.CVN=Use conventional variable names
NAMING.CVN.NAMING_TABLE-label=Local variable naming convention table
NAMING.CVN.NAMING_TABLE.NAMING__CVN__NAMING_TABLE__COLUMN1-label=
NAMING.CVN.NAMING_TABLE.NAMING__CVN__NAMING_TABLE__COLUMN2-label=Local variable
NAMING.CVN.NAMING_TABLE.NAMING__CVN__NAMING_TABLE__COLUMN3-label=Type
NAMING.CVN.msg.1=Variable name ''{0}'' is not of type "{1}".
NAMING.DJLO=Do not declare types with the same name as types in the Java platform.
NAMING.DJLO.CHECKED_PACKAGES-label=Packages in the Java platform which should be checked for duplicate type names
NAMING.DJLO.msg.1=The name of the type ''{0}'' matches that of a Java platform type.
NAMING.DSN=Avoid using dollar signs in names.
NAMING.DSN.CHECK_ANNOTATION-label=Check annotation declarations
NAMING.DSN.CHECK_CLASS-label=Check class declarations
NAMING.DSN.CHECK_ENUM-label=Check enum declarations
NAMING.DSN.CHECK_FIELD-label=Check field declarations
NAMING.DSN.CHECK_INTERFACE-label=Check interface declarations
NAMING.DSN.CHECK_LOCAL_VARIABLE-label=Check local variable declarations
NAMING.DSN.CHECK_METHOD-label=Check method declarations
NAMING.DSN.CHECK_PARAMETER-label=Check parameter declarations
NAMING.DSN.CHECK_TYPE-label=Check type declarations
NAMING.DSN.CHECK_VARIABLE-label=Check variable declarations
NAMING.DSN.group.0-label=What to check
NAMING.DSN.msg.1=Name ''{0}'' used here.
NAMING.ECN=Ensure class names reflect classes which they extend.
NAMING.ECN.CHECKED_TYPES-label=Check the following names and types\:
NAMING.ECN.CHECKED_TYPES.NAMING__ECN__CHECKED_TYPES__COLUMN1-label=Name of class (regular expression)
NAMING.ECN.CHECKED_TYPES.NAMING__ECN__CHECKED_TYPES__COLUMN2-label=Extended class (qualified name)
NAMING.ECN.msg.1=Class ''{0}'' does not extend ''{1}''.
NAMING.EXTENDS=Follow class name conventions defined for base classes
NAMING.EXTENDS.SET_CLASS_NAME-label=Configure expected name for class extends superclass
NAMING.EXTENDS.SET_CLASS_NAME.NAMING__EXTENDS__SET_CLASS_NAME__COLUMN1-label=Check hierarchy
NAMING.EXTENDS.SET_CLASS_NAME.NAMING__EXTENDS__SET_CLASS_NAME__COLUMN2-label=Expected class name
NAMING.EXTENDS.SET_CLASS_NAME.NAMING__EXTENDS__SET_CLASS_NAME__COLUMN3-label=Fully qualified name of superclass
NAMING.EXTENDS.msg.1=Your class should using regexp ''{0}'' convention because extends ''{1}'' class.
NAMING.GETA=Follow a naming convention for getter methods
NAMING.GETA.CHECK_PACKAGE-label=check package-private method.
NAMING.GETA.CHECK_PRIVATE-label=check "private" method.
NAMING.GETA.CHECK_PROTECTED-label=check "protected" method.
NAMING.GETA.CHECK_PUBLIC-label=check "public" method.
NAMING.GETA.IGNORE_CASE-label=Ignore case
NAMING.GETA.NEGATE-label=Negate regular expression
NAMING.GETA.REGULAR_EXPRESSION-label=regular expression
NAMING.GETA.msg.1=Name of getter method ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.GETA.msg.2=Name of getter method ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.GETB=Follow a naming convention for "boolean" getter methods
NAMING.GETB.CHECK_PACKAGE-label=check package-private method.
NAMING.GETB.CHECK_PRIVATE-label=check "private" method.
NAMING.GETB.CHECK_PROTECTED-label=check "protected" method.
NAMING.GETB.CHECK_PUBLIC-label=check "public" method.
NAMING.GETB.IGNORE_CASE-label=Ignore case
NAMING.GETB.NEGATE-label=Negate regular expression
NAMING.GETB.REGULAR_EXPRESSION-label=regular expression
NAMING.GETB.msg.1=Name of "boolean" getter method ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.GETB.msg.2=Name of "boolean" getter method ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.IMPLS=Follow class name conventions defined for implemented interfaces
NAMING.IMPLS.SET_CLASS_NAME-description=You can place here regex(ex. pattern that should follow the class name) or fully qualified class name.
NAMING.IMPLS.SET_CLASS_NAME-label=Configure expected name for class implements interface
NAMING.IMPLS.SET_CLASS_NAME.NAMING__IMPLS__SET_CLASS_NAME__COLUMN1-label=Check hierarchy
NAMING.IMPLS.SET_CLASS_NAME.NAMING__IMPLS__SET_CLASS_NAME__COLUMN2-label=Expected fully qualified class name
NAMING.IMPLS.SET_CLASS_NAME.NAMING__IMPLS__SET_CLASS_NAME__COLUMN3-label=Fully qualified name of interface
NAMING.IMPLS.msg.1=Your class should using regexp ''{0}'' convention because implements ''{1}'' interface.
NAMING.IRB=Use 'is...'  only for naming methods that return a "boolean"
NAMING.IRB.msg.1=''{0} ()'' starts with ''is'' but does not "return" a "boolean"
NAMING.LLI=Follow limits for the lengths of type, method, field, parameter, and variable names.
NAMING.LLI.CHECK_FIELD-label=Check field names
NAMING.LLI.CHECK_LOOP_INDEX-label=Check loop indices
NAMING.LLI.CHECK_METHOD-label=Check method names
NAMING.LLI.CHECK_PARAM-label=Check parameter names
NAMING.LLI.CHECK_TYPE-label=Check type names
NAMING.LLI.CHECK_VARIABLE-label=Check variable names
NAMING.LLI.FIELD_MAX_LENGTH-label=Maximum length
NAMING.LLI.FIELD_MIN_LENGTH-label=Minimum length
NAMING.LLI.IGNORE_FIELD-label=Ignore the following names\:
NAMING.LLI.IGNORE_METHOD-label=Ignore the following names\:
NAMING.LLI.IGNORE_PARAM-label=Ignore the following names\:
NAMING.LLI.IGNORE_TYPE-label=Ignore the following names\:
NAMING.LLI.IGNORE_VARIABLE-label=Ignore the following names\:
NAMING.LLI.LOOP_INDEX_MIN_LENGTH-label=Minimum length
NAMING.LLI.METHOD_MAX_LENGTH-label=Maximum length
NAMING.LLI.METHOD_MIN_LENGTH-label=Minimum length
NAMING.LLI.PARAM_MAX_LENGTH-label=Maximum length
NAMING.LLI.PARAM_MIN_LENGTH-label=Minimum length
NAMING.LLI.TYPE_MAX_LENGTH-label=Maximum length
NAMING.LLI.TYPE_MIN_LENGTH-label=Minimum length
NAMING.LLI.VAR_MAX_LENGTH-label=Maximum length
NAMING.LLI.VAR_MIN_LENGTH-label=Minimum length
NAMING.LLI.msg.1=The length of the identifier "{0}" is less than the minimum length ({1}).
NAMING.LLI.msg.2=The length of the identifier "{0}" exceeds the maximum length ({1}).
NAMING.LLI.tab.FIELD-label=Field
NAMING.LLI.tab.METHOD-label=Method
NAMING.LLI.tab.PARAMETER-label=Parameter
NAMING.LLI.tab.TYPE-label=Type
NAMING.LLI.tab.VARIABLE-label=Variable
NAMING.NA=Use a naming convention for annotations
NAMING.NA.CHECK_PACKAGE-label=check package-private annotation declaration.
NAMING.NA.CHECK_PRIVATE-label=check "private" annotation declaration.
NAMING.NA.CHECK_PROTECTED-label=check "protected" annotation declaration.
NAMING.NA.CHECK_PUBLIC-label=check "public" annotation declaration.
NAMING.NA.IGNORE_CASE-label=Ignore case
NAMING.NA.NEGATE-label=Negate regular expression
NAMING.NA.REGULAR_EXPRESSION-label=regular expression
NAMING.NA.msg.1=Name of annotation ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NA.msg.2=Name of annotation ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NAC=Use a naming convention for array and collection variables
NAMING.NAC.CHECK_PACKAGE-label=check package-private method.
NAMING.NAC.CHECK_PRIVATE-label=check "private" method.
NAMING.NAC.CHECK_PROTECTED-label=check "protected" method.
NAMING.NAC.CHECK_PUBLIC-label=check "public" method.
NAMING.NAC.IGNORE_CASE-label=Ignore case
NAMING.NAC.NEGATE-label=Negate regular expression
NAMING.NAC.REGULAR_EXPRESSION-label=regular expression
NAMING.NAC.msg.1=Variable name ''{0}'' does not match user-specified regular expression ''{1}'' for array and collection variables.
NAMING.NAC.msg.2=Variable name ''{0}'' matches user-specified regular expression ''{1}'' for array and collection variables.
NAMING.NACL=Use a naming convention for "abstract" classes
NAMING.NACL.CHECK_PACKAGE-label=check package-private class.
NAMING.NACL.CHECK_PRIVATE-label=check private class.
NAMING.NACL.CHECK_PROTECTED-label=check protected class.
NAMING.NACL.CHECK_PUBLIC-label=check public class.
NAMING.NACL.IGNORE_CASE-label=Ignore case
NAMING.NACL.NEGATE-label=Negate regular expression
NAMING.NACL.REGULAR_EXPRESSION-label=regular expression
NAMING.NACL.msg.1=Name of "abstract" class ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NACL.msg.2=Name of "abstract" class ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NCL=Use a naming convention for classes
NAMING.NCL.CHECK_PACKAGE-label=check package-private top-level class.
NAMING.NCL.CHECK_PUBLIC-label=check "public" top-level class.
NAMING.NCL.IGNORE_CASE_LOCAL-label=Ignore case
NAMING.NCL.IGNORE_CASE_MEMBER-label=Ignore case
NAMING.NCL.IGNORE_CASE_TOP_LEVEL-label=Ignore case
NAMING.NCL.INNER_CHECK_PACKAGE-label=check package-private member class.
NAMING.NCL.INNER_CHECK_PRIVATE-label=check "private" member class.
NAMING.NCL.INNER_CHECK_PROTECTED-label=check "protected" member class.
NAMING.NCL.INNER_CHECK_PUBLIC-label=check "public" member class.
NAMING.NCL.INNER_REGULAR_EXPRESSION-label=regular expression of member class
NAMING.NCL.LOCAL_CHECK_PACKAGE-label=check local class.
NAMING.NCL.LOCAL_REGULAR_EXPRESSION-label=regular expression of local class
NAMING.NCL.NEGATE_LOCAL-label=Negate regular expression
NAMING.NCL.NEGATE_MEMBER-label=Negate regular expression
NAMING.NCL.NEGATE_TOP_LEVEL-label=Negate regular expression
NAMING.NCL.REGULAR_EXPRESSION-label=regular expression of top-level class
NAMING.NCL.msg.1=Name of class ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NCL.msg.2=Name of class ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NCL.tab.INNER_LEVEL-label=Member class
NAMING.NCL.tab.LOCAL_LEVEL-label=Local class
NAMING.NCL.tab.TOP_LEVEL-label=Top-level class
NAMING.NE=Use a naming convention for exceptions
NAMING.NE.CHECK_PACKAGE-label=check package-private exception declaration.
NAMING.NE.CHECK_PRIVATE-label=check "private" exception declaration.
NAMING.NE.CHECK_PROTECTED-label=check "protected" exception declaration.
NAMING.NE.CHECK_PUBLIC-label=check "public" exception declaration.
NAMING.NE.IGNORE_CASE-label=Ignore case
NAMING.NE.NEGATE-label=Negate regular expression
NAMING.NE.REGULAR_EXPRESSION-label=regular expression
NAMING.NE.msg.1=Name of exception class ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NE.msg.2=Name of exception class ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NENUM=Use a naming convention for enum type declarations
NAMING.NENUM.CHECK_PACKAGE-label=check package-private enum declaration.
NAMING.NENUM.CHECK_PRIVATE-label=check "private" enum declaration.
NAMING.NENUM.CHECK_PROTECTED-label=check "protected" enum declaration.
NAMING.NENUM.CHECK_PUBLIC-label=check "public" enum declaration.
NAMING.NENUM.IGNORE_CASE-label=Ignore case
NAMING.NENUM.NEGATE-label=Negate regular expression
NAMING.NENUM.REGULAR_EXPRESSION-label=regular expression
NAMING.NENUM.msg.1=Name of enum ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NENUM.msg.2=Name of enum ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NFL=Use a naming convention for "final" local variables
NAMING.NFL.CHECK_PACKAGE-label=check package-private method.
NAMING.NFL.CHECK_PRIVATE-label=check "private" method.
NAMING.NFL.CHECK_PROTECTED-label=check "protected" method.
NAMING.NFL.CHECK_PUBLIC-label=check "public" method.
NAMING.NFL.IGNORE_CASE-label=Ignore case
NAMING.NFL.NEGATE-label=Negate regular expression
NAMING.NFL.REGULAR_EXPRESSION-label=regular expression
NAMING.NFL.msg.1=Name of "final" local variables ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NFL.msg.2=Name of "final" local variables ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NIF=Use a naming convention for non-"static" fields
NAMING.NIF.CHECK_PACKAGE-label=check package-private field.
NAMING.NIF.CHECK_PRIVATE-label=check "private" field.
NAMING.NIF.CHECK_PROTECTED-label=check "protected" field.
NAMING.NIF.CHECK_PUBLIC-label=check "public" field.
NAMING.NIF.IGNORE_CASE-label=Ignore case
NAMING.NIF.NEGATE-label=Negate regular expression
NAMING.NIF.REGULAR_EXPRESSION-label=regular expression
NAMING.NIF.msg.1=Name of non-"static" field ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NIF.msg.2=Name of non-"static" field ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NITF=Use a naming convention for interfaces
NAMING.NITF.CHECK_PACKAGE-label=check package-private top-level interface.
NAMING.NITF.CHECK_PUBLIC-label=check "public" top-level interface.
NAMING.NITF.IGNORE_CASE_MEMBER-label=Ignore case
NAMING.NITF.IGNORE_CASE_TOP_LEVEL-label=Ignore case
NAMING.NITF.INNER_CHECK_PACKAGE-label=check package-private member interface.
NAMING.NITF.INNER_CHECK_PRIVATE-label=check "private" member interface.
NAMING.NITF.INNER_CHECK_PROTECTED-label=check "protected" member interface.
NAMING.NITF.INNER_CHECK_PUBLIC-label=check "public" member interface.
NAMING.NITF.INNER_REGULAR_EXPRESSION-label=regular expression of member interface
NAMING.NITF.NEGATE_MEMBER-label=Negate regular expression
NAMING.NITF.NEGATE_TOP_LEVEL-label=Negate regular expression
NAMING.NITF.REGULAR_EXPRESSION-label=regular expression of top-level interface
NAMING.NITF.msg.1=Name of "interface" ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NITF.msg.2=Name of "interface" ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NITF.tab.INNER_LEVEL-label=Member interface
NAMING.NITF.tab.TOP_LEVEL-label=Top-level interface
NAMING.NLV=Use a naming convention for local variables
NAMING.NLV.CHECK_PACKAGE-label=check package-private method.
NAMING.NLV.CHECK_PRIVATE-label=check "private" method.
NAMING.NLV.CHECK_PROTECTED-label=check "protected" method.
NAMING.NLV.CHECK_PUBLIC-label=check "public" method.
NAMING.NLV.IGNORE_CASE-label=Ignore case
NAMING.NLV.IGNORE_FINAL-label=Ignore "final" local variables
NAMING.NLV.NEGATE-label=Negate regular expression
NAMING.NLV.REGULAR_EXPRESSION-label=regular expression
NAMING.NLV.msg.1=Name of local variable ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NLV.msg.2=Name of local variable ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NM=Use a naming convention for non-"static" methods
NAMING.NM.CHECK_PACKAGE-label=check package-private method.
NAMING.NM.CHECK_PRIVATE-label=check "private" method.
NAMING.NM.CHECK_PROTECTED-label=check "protected" method.
NAMING.NM.CHECK_PUBLIC-label=check "public" method.
NAMING.NM.IGNORE_CASE-label=Ignore case
NAMING.NM.NEGATE-label=Negate regular expression
NAMING.NM.REGULAR_EXPRESSION-label=regular expression
NAMING.NM.msg.1=Name of non-"static" method ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NM.msg.2=Name of non-"static" method ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NMP=Use a naming convention for method parameters
NAMING.NMP.CHECK_PACKAGE-label=check package-private method.
NAMING.NMP.CHECK_PRIVATE-label=check "private" method.
NAMING.NMP.CHECK_PROTECTED-label=check "protected" method.
NAMING.NMP.CHECK_PUBLIC-label=check "public" method.
NAMING.NMP.IGNORE_CASE-label=Ignore case
NAMING.NMP.NEGATE-label=Negate regular expression
NAMING.NMP.REGULAR_EXPRESSION-label=regular expression
NAMING.NMP.msg.1=Name of parameter ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NMP.msg.2=Name of parameter ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NPH=Use a naming convention for type parameters
NAMING.NPH.IGNORE_CASE-label=Ignore case
NAMING.NPH.NEGATE-label=Negate regular expression
NAMING.NPH.REGULAR_EXPRESSION-label=regular expression
NAMING.NPH.msg.1=Type parameter name ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NPH.msg.2=Type parameter name ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NSF=Use a naming convention for non-"final" "static" fields
NAMING.NSF.CHECK_PACKAGE-label=check package-private field.
NAMING.NSF.CHECK_PRIVATE-label=check "private" field.
NAMING.NSF.CHECK_PROTECTED-label=check "protected" field.
NAMING.NSF.CHECK_PUBLIC-label=check "public" field.
NAMING.NSF.IGNORE_CASE-label=Ignore case
NAMING.NSF.NEGATE-label=Negate regular expression
NAMING.NSF.REGULAR_EXPRESSION-label=regular expression
NAMING.NSF.msg.1=Name of non-"final" "static" field ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NSF.msg.2=Name of non-"final" "static" field ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NSM=Use a naming convention for "static" methods
NAMING.NSM.CHECK_PACKAGE-label=check package-private method.
NAMING.NSM.CHECK_PRIVATE-label=check "private" method.
NAMING.NSM.CHECK_PROTECTED-label=check "protected" method.
NAMING.NSM.CHECK_PUBLIC-label=check "public" method.
NAMING.NSM.IGNORE_CASE-label=Ignore case
NAMING.NSM.NEGATE-label=Negate regular expression
NAMING.NSM.REGULAR_EXPRESSION-label=regular expression
NAMING.NSM.msg.1=Name of "static" method ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NSM.msg.2=Name of "static" method ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NTEST=Use a naming convention for JUnit test classes
NAMING.NTEST.CHECK_PACKAGE-label=check package-private top-level class.
NAMING.NTEST.CHECK_PUBLIC-label=check "public" top-level class.
NAMING.NTEST.IGNORE_CASE_LOCAL-label=Ignore case
NAMING.NTEST.IGNORE_CASE_MEMBER-label=Ignore case
NAMING.NTEST.IGNORE_CASE_TOP_LEVEL-label=Ignore case
NAMING.NTEST.INNER_CHECK_PACKAGE-label=check package-private member class.
NAMING.NTEST.INNER_CHECK_PRIVATE-label=check "private" member class.
NAMING.NTEST.INNER_CHECK_PROTECTED-label=check "protected" member class.
NAMING.NTEST.INNER_CHECK_PUBLIC-label=check "public" member class.
NAMING.NTEST.INNER_REGULAR_EXPRESSION-label=regular expression of member class
NAMING.NTEST.LOCAL_CHECK_PACKAGE-label=check local class.
NAMING.NTEST.LOCAL_REGULAR_EXPRESSION-label=regular expression of local class
NAMING.NTEST.NEGATE_LOCAL-label=Negate regular expression
NAMING.NTEST.NEGATE_MEMBER-label=Negate regular expression
NAMING.NTEST.NEGATE_TOP_LEVEL-label=Negate regular expression
NAMING.NTEST.REGULAR_EXPRESSION-label=regular expression of top-level class
NAMING.NTEST.msg.1=Name of test class ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.NTEST.msg.2=Name of test class ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.NTEST.tab.INNER_LEVEL-label=Member class
NAMING.NTEST.tab.LOCAL_LEVEL-label=Local class
NAMING.NTEST.tab.TOP_LEVEL-label=Top-level class
NAMING.PKG=Use a naming convention for "package" names
NAMING.PKG.IGNORE_CASE-label=Ignore case
NAMING.PKG.NEGATE-label=Negate regular expression
NAMING.PKG.REGULAR_EXPRESSION-label=regular expression
NAMING.PKG.msg.1=Package ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.PKG.msg.2=Package ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.SETA=Follow a naming convention for setter methods
NAMING.SETA.CHECK_PACKAGE-label=check package-private method.
NAMING.SETA.CHECK_PRIVATE-label=check "private" method.
NAMING.SETA.CHECK_PROTECTED-label=check "protected" method.
NAMING.SETA.CHECK_PUBLIC-label=check "public" method.
NAMING.SETA.IGNORE_CASE-label=Ignore case
NAMING.SETA.NEGATE-label=Negate regular expression
NAMING.SETA.REGULAR_EXPRESSION-label=regular expression
NAMING.SETA.msg.1=Name of setter method ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.SETA.msg.2=Name of setter method ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.SINGLETON=Use a naming convention for singleton classes
NAMING.SINGLETON.REGULAR_EXPRESSION-label=regular expression
NAMING.SINGLETON.msg.1=Name of singleton class ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.SINGLETON.msg.2=The class ''{0}'' was probably intended to be a singleton but contains a non-"private" constructor.
NAMING.SINGLETON.msg.3=The class ''{0}'' was probably intended to be a singleton but does not contain a "static" accessor method that returns an instance of the class.
NAMING.SINGLETON.msg.4=The class ''{0}'' is a singleton, but the method ''{1}()'' to get the singleton instance is not "synchronized".
NAMING.THAC=Use a naming convention for tag handlers and associated classes
NAMING.THAC.CONVENTIONS_TABLE-label=Naming Conventions Table
NAMING.THAC.CONVENTIONS_TABLE.NAMING__THAC__CONVENTIONS_TABLE__COLUMN1-label=Type of Class
NAMING.THAC.CONVENTIONS_TABLE.NAMING__THAC__CONVENTIONS_TABLE__COLUMN2-label=Naming Convention (Regular Expression)
NAMING.THAC.IGNORE_CASE-label=Ignore case
NAMING.THAC.NEGATE-label=Negate regular expression
NAMING.THAC.msg.1=Type name ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.THAC.msg.2=Type name ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.UHN=Use Hungarian notation for variables
NAMING.UHN.HUNGARIAN_TABLE-label=Hungarian notation table
NAMING.UHN.HUNGARIAN_TABLE.NAMING__UHN__HUNGARIAN_TABLE__COLUMN1-label=Scope
NAMING.UHN.HUNGARIAN_TABLE.NAMING__UHN__HUNGARIAN_TABLE__COLUMN2-label=Type
NAMING.UHN.HUNGARIAN_TABLE.NAMING__UHN__HUNGARIAN_TABLE__COLUMN3-label=Hungarian notation
NAMING.UHN.HUNGARIAN_TABLE.NAMING__UHN__HUNGARIAN_TABLE__COLUMN4-label=prefix/postfix
NAMING.UHN.HUNGARIAN_TABLE.NAMING__UHN__HUNGARIAN_TABLE__COLUMN5-label=case sensitive
NAMING.UHN.msg.1=Variable ''{0}'' does not begin with ''{1}''.
NAMING.UHN.msg.2=Variable ''{0}'' does not end with ''{1}''.
NAMING.USF=Do not use lowercase letters in "final" "static" field names.
NAMING.USF.msg.1="final" "static" field ''{0}'' is not all uppercase.
NAMING.UTIL=Use a naming convention for utility classes
NAMING.UTIL.IGNORE_CASE-label=Ignore case
NAMING.UTIL.NAME_REG-label=Pattern of utility class names in regular expression\:  
NAMING.UTIL.NEGATE-label=Negate regular expression
NAMING.UTIL.msg.1=Name of utility class ''{0}'' does not match user-specified regular expression ''{1}''.
NAMING.UTIL.msg.2=Name of utility class ''{0}'' matches user-specified regular expression ''{1}''.
NAMING.UUVN=Do not use variables with identical names or names that differ only in case
NAMING.UUVN.msg.1=There is another variable in the scope that has the same name as ''{0}'' or differs only in case
OOP=Object Oriented Programming
OOP.ACST=Avoid casts to types which are more specific than necessary.
OOP.ACST.msg.1=This expression is cast to "{0}", but it only needs to be cast to "{1}".
OOP.ACST.msg.2=This expression is cast to "{0}", but no cast is necessary.
OOP.AF=Avoid "public"/"protected"/package-private fields
OOP.AF.CHECK_INSTANCE-label=Check instance fields.
OOP.AF.CHECK_PACKAGE_IN_CHILD_CLASS-label=Check member class
OOP.AF.CHECK_PACKAGE_IN_TOP_LEVEL_CLASS-label=Check top-level class
OOP.AF.CHECK_PROTECTED_IN_CHILD_CLASS-label=Check member class
OOP.AF.CHECK_PROTECTED_IN_TOP_LEVEL_CLASS-label=Check top-level class
OOP.AF.CHECK_PUBLIC_IN_CHILD_CLASS-label=Check member class
OOP.AF.CHECK_PUBLIC_IN_TOP_LEVEL_CLASS-label=Check top-level class
OOP.AF.CHECK_STATIC-label=Check non-final "static" fields.
OOP.AF.OOP.APF-label=Check "public" field
OOP.AF.OOP.APPF-label=Check package-private field
OOP.AF.OOP.APROF-label=Check "protected" field
OOP.AF.group.0-label=What to Check
OOP.AF.group.1-label=Accessibility
OOP.AF.msg.1={0} field is declared {1}\: {2}.
OOP.AHF=Do not hide inherited fields
OOP.AHF.CHECK_NON_STATIC_FIELD-label=Check non "static" (instance) fields
OOP.AHF.CHECK_PACKAGE_CHILD-label=Check package-private fields in child classes
OOP.AHF.CHECK_PACKAGE_PARENT-label=Check package-private fields in ancestor classes
OOP.AHF.CHECK_PACKAGE_PARENT_DIFFERENT_PACKAGE-label=ancestor class from a different package from child class
OOP.AHF.CHECK_PACKAGE_PARENT_SAME_PACKAGE-label=ancestor class from the same package as child class
OOP.AHF.CHECK_PRIVATE_CHILD-label=Check "private" fields in child classes
OOP.AHF.CHECK_PRIVATE_PARENT-label=Check "private" fields in ancestor classes
OOP.AHF.CHECK_PROTECTED_CHILD-label=Check "protected" fields in child classes
OOP.AHF.CHECK_PROTECTED_PARENT-label=Check "protected" fields in ancestor classes
OOP.AHF.CHECK_PUBLIC_CHILD-label=Check "public" fields in child classes
OOP.AHF.CHECK_PUBLIC_PARENT-label=Check "public" fields in ancestor classes
OOP.AHF.CHECK_STATIC_FIELD-label=Check "static" fields
OOP.AHF.FIELD_SKIP_LIST-label=Fields to be ignored\:
OOP.AHF.group.0-label=accessibility
OOP.AHF.group.1-label=static/non static
OOP.AHF.msg.1="{0}" field ''{1}'' hides a field in ancestor class ''{2}''.
OOP.AHSM=Do not hide inherited "static" member methods
OOP.AHSM.msg.1="static" method ''{0}()'' overrides "static" method in ancestor class ''{1}''.
OOP.AOA=Add the "@Override" annotation to overriding methods
OOP.AOA.msg.1=The overriding method ''{0}()'' does not have an "@Override" annotation.
OOP.AOCM=Always override certain methods when extending certain types.
OOP.AOCM.TYPE_TO_METHOD_MAP-label=Methods which should always be overridden
OOP.AOCM.TYPE_TO_METHOD_MAP.OOP.AOCM.TYPE_TO_METHOD_MAP.CHILDTABLE1-label=
OOP.AOCM.TYPE_TO_METHOD_MAP.OOP.AOCM.TYPE_TO_METHOD_MAP.CHILDTABLE1.OOP__AOCM__TYPE_TO_METHOD_MAP__COLUMN2-description=&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;,...)
OOP.AOCM.TYPE_TO_METHOD_MAP.OOP.AOCM.TYPE_TO_METHOD_MAP.CHILDTABLE1.OOP__AOCM__TYPE_TO_METHOD_MAP__COLUMN2-label=Method Signature
OOP.AOCM.TYPE_TO_METHOD_MAP.OOP__AOCM__TYPE_TO_METHOD_MAP__COLUMN1-label=Declaring Class (Specify fully qualified name)
OOP.AOCM.msg.1=The type ''{0}'' should override the method ''{1}''.
OOP.ASFI=Redeclare a class with only "abstract" methods and "static final" fields as an "interface"
OOP.ASFI.IGNORE_NONPUBLIC-label=ignore classes with non-public members
OOP.ASFI.msg.1=Class ''{0}'' should be declared as "interface".
OOP.AUASI=Do not implement or extend annotations.
OOP.AUASI.msg.1=The type ''{0}'' should not implement the annotation type ''{1}''.
OOP.AUASI.msg.2=The interface ''{0}'' should not extend the annotation type ''{1}''.
OOP.AUO=Do not use an object to access "static" fields or methods
OOP.AUO.ALLOW_CHAINED-label=Allow use of an object to access "static" methods for chained method calls.
OOP.AUO.msg.1="static" field ''{0}'' should be accessed as ''{1}''.
OOP.AUO.msg.2="static" method ''{0}'' should be accessed as ''{1}''.
OOP.CQS=Ensure methods are either a command(change state) or a query(get state).
OOP.CQS.ALLOW_LAZY_INIT-label=Allow lazy initialization.
OOP.CQS.CHECK_PACKAGE_PRIVATE-label=Check "package-private" methods.
OOP.CQS.CHECK_PRIVATE-label=Check "private" methods.
OOP.CQS.CHECK_PROTECTED-label=Check "protected" methods.
OOP.CQS.CHECK_PUBLIC-label=Check "public" methods.
OOP.CQS.IGNORED_METHODS-label=Ignore the following methods\:
OOP.CQS.group.0-label=Check the following accessibilities\:
OOP.CQS.msg.1=Method ''{0}'' returns a value, but ''{1}'' changes state on line\: ''{2}''.
OOP.HIF=Do not hide fields and local variables declared in enclosing scopes
OOP.HIF.msg.1=The field ''{0}'' hides a field declared in the enclosing type ''{1}''.
OOP.HIF.msg.2=The {0} ''{1}'' uses the same name as a {2} declared in an enclosing scope, which may cause confusion.
OOP.HMF=Do not give method local variables and parameters the same name as class fields.
OOP.HMF.CHECK_LOCAL-label=Check local variables
OOP.HMF.CHECK_PARAM-label=Check parameters
OOP.HMF.msg.1=Parameter ''{0}'' has the same name as a field.
OOP.HMF.msg.2=Local variable ''{0}'' has the same name as a field.
OOP.IDOM=Avoid declaring methods inherited from class "Object" in an interface.
OOP.IDOM.msg.1=The method ''{0}'' should not be declared in an interface because it is inherited from class "Object".
OOP.IIAC=Avoid implementing interfaces only to access constants
OOP.IIAC.msg.1=The interface "{0}" declares only constants, so it does not need to be implemented.
OOP.INSOF=Use "instanceof" only on interfaces.
OOP.INSOF.IGNORE_IN_EQUALS-label=Ignore usages of "instanceof" in 'equals()' methods
OOP.INSOF.msg.1="instanceof" operator not used on an "interface", type ''{0}'' is not an interface.
OOP.MFP=Give "finalize()" methods "protected" access.
OOP.MFP.msg.1=This "finalize()" method has "public" access
OOP.MI=Avoid interfaces with no fields or methods (marker interfaces)
OOP.MI.MAX_EXTENDED_INTERF-label=Ignore interfaces which extend at least this many other interfaces\:
OOP.MI.MAX_EXTENDED_INTERF.OOP__MI__MAX_EXTENDED_INTERF__COLUMN1-label=
OOP.MI.MAX_EXTENDED_INTERF.OOP__MI__MAX_EXTENDED_INTERF__COLUMN2-label=
OOP.MI.msg.1=Interface "{0}" is a marker interface.
OOP.MUCOP=Provide mutable classes with copy functionality
OOP.MUCOP.COPY_CONSTRUCTOR-label=Provide a copy constructor
OOP.MUCOP.PUBLIC_CLONE-label=Provide a public clone method(relevant for final classes)
OOP.MUCOP.STATIC_CREATION-label=Provide a static creation method
OOP.MUCOP.group.0-label=Select which options to require
OOP.MUCOP.msg.1={0} missing.
OOP.NAM=Avoid "abstract" classes without "abstract" methods.
OOP.NAM.msg.1=The "abstract" class "{0}" does not contain any "abstract" methods.
OOP.NOMA=Declare methods in "abstract" classes with empty bodies "abstract".
OOP.NOMA.CHECK_PACKAGE-label=Check "package-private" methods
OOP.NOMA.CHECK_PROTECTED-label=Check "protected" methods
OOP.NOMA.CHECK_PUBLIC-label=Check "public" methods
OOP.NOMA.msg.1=The method ''{0}()'' could be declared "abstract".
OOP.NPAC=Do not declare "public" or package-private constructors in "abstract" classes.
OOP.NPAC.CHECK_PP-label=Check for package-private constructors
OOP.NPAC.CHECK_PUBLIC-label=Check for "public" constructors
OOP.NPAC.msg.1="public" constructor is used in "abstract" class ''{0}''.
OOP.NPAC.msg.2=package-private constructor is used in "abstract" class ''{0}''.
OOP.OPM=Do not override an instance "private" method
OOP.OPM.msg.1=Private method ''{0}'' also declared in class ''{1}''.
OOP.PMPC=Ensure 'public' classes have at least one 'public' or 'protected' member
OOP.PMPC.msg.1=No 'public' or 'protected' member in class ''{0}''.
OOP.PSDF=Do not declare "private" or "static" methods as "final".
OOP.PSDF.CHECK_PRIVATE-label=Check "private" methods
OOP.PSDF.CHECK_STATIC-label=Check "static" methods
OOP.PSDF.msg.1=The "private" method ''{0}()'' is unnecessarily declared "final".
OOP.PSDF.msg.2=The "static" method ''{0}()'' is declared "final".
OOP.PSDF.msg.3=The "private static" method ''{0}()'' is unnecessarily declared "final".
OOP.RI=Do not declare a class as implementing an interface if a superclass already implements that interface
OOP.RI.msg.1=The interface ''{0}'' is already implemented by a superclass of this class.
OOP.RSFC=Avoid referencing a class' subclasses from itself.
OOP.RSFC.msg.1=The class "{0}" references its subclass "{1}".
OOP.SNGL=Use a naming convention for singleton classes
OOP.SNGL.CHECK_SYNCHRONIZED-label=Check that the method to get the singleton instance is "synchronized" for classes which match the singleton pattern
OOP.SNGL.REGULAR_EXPRESSION-label=regular expression
OOP.SNGL.msg.1=The class ''{0}'' was probably intended to be a singleton but contains a non-"private" constructor.
OOP.SNGL.msg.2=The class ''{0}'' was probably intended to be a singleton but does not contain a "static" accessor method that returns an instance of the class.
OOP.SNGL.msg.3=The class ''{0}'' is a singleton, but the method ''{1}()'' to get the singleton instance is not "synchronized".
OOP.SVHM=Specify which version of potentially ambiguous methods you wish to call for method calls in inner classes
OOP.SVHM.msg.1=This call to the method ''{0}()'' does not specify which version of the method should be called.
OOP.THRECL=Use getContextClassLoader() instead of getClassLoader()
OOP.THRECL.msg.1=getClassLoader() used instead of getContextClassLoader().
OPT=Optimization
OPT.AAM=Change non-"private" members to "private" in anonymous classes
OPT.AAM.msg.1=Method ''{0}()'' should be declared "private".
OPT.AAM.msg.2=Field ''{0}'' should be declared "private".
OPT.AAM.msg.3=Fields ''{0}'' should be declared "private".
OPT.AAS=Use abbreviated assignment operators
OPT.AAS.msg.1="{0}\=" abbreviated assignment operator not used.
OPT.ANIPW=Avoid new instantiations of primitive wrapper objects, whose values are cached
OPT.ANIPW.msg.1=''{0}'' instantiates a cached primitive wrapper.
OPT.AUMO=Avoid unnecessary Map operations.
OPT.AUMO.msg.1=''{0}'' calls "containsKey()" and then "get()".
OPT.AUMO.msg.2=''{0}'' calls "get()" and then "remove()".
OPT.CCR=Close all "java.io.Closeable" resources in a "finally" block.
OPT.CCR.IGNORE_TYPES-label=Ignored types (Specify fully qualified names)
OPT.CCR.msg.1=Resource ''{0}'' is opened but is not closed in a "finally" block.
OPT.CEIL=Avoid putting constant expressions inside loops
OPT.CEIL.msg.1=Consider simplifying this constant expression or moving it outside the body of the loop.
OPT.CEL=Do not call methods in loop condition statements.
OPT.CEL.IGNORE_CLASSES-label=Ignore types and subclasses (in regular expression)
OPT.CEL.IGNORE_LIST-label=Ignore method in loop condition statement, if method is invoked in loop body.
OPT.CEL.IGNORE_LIST.OPT__CEL__IGNORE_LIST__CHILDTABLE1-label=
OPT.CEL.IGNORE_LIST.OPT__CEL__IGNORE_LIST__CHILDTABLE1.OPT__CEL__IGNORE_LIST__COLUMN2-label=Invoked method
OPT.CEL.IGNORE_LIST.OPT__CEL__IGNORE_LIST__COLUMN1-label=Ignore method
OPT.CEL.msg.1=Method called in condition statement of "for" loop.
OPT.CEL.msg.2=Method called in condition statement of "while" loop.
OPT.CEL.msg.3=Method called in condition statement of "do" loop.
OPT.CEL.tab.METHOD_TAB-label=Method
OPT.CEL.tab.TYPE_TAB-label=Type
OPT.CIO=Close input and output resources in "finally" blocks
OPT.CIO.IGNORE_TYPES-label=Ignored types (Specify fully qualified names)
OPT.CIO.msg.1=Variable ''{0}'' is not closed within a "finally" block.
OPT.CLL=Check the logging level before calling potentially expensive logging operations.
OPT.CLL.CONFIG-label=CONFIG
OPT.CLL.DEBUG-label=DEBUG
OPT.CLL.ERROR-label=ERROR
OPT.CLL.FATAL-label=FATAL
OPT.CLL.FINE-label=FINE
OPT.CLL.FINER-label=FINER
OPT.CLL.FINEST-label=FINEST
OPT.CLL.INFO-label=INFO
OPT.CLL.INFO_UTIL-label=INFO
OPT.CLL.LEVEL_CHECK_METHS-description=Level checking methods (in form of &lt;regular expression for fully qualified type&gt;\#&lt;regular expression for method name&gt;)
OPT.CLL.LEVEL_CHECK_METHS-label=Level checking methods
OPT.CLL.LOGGING_METHS-description=Logging methods to be checked (in form of &lt;regular expression for fully qualified type&gt;\#&lt;regular expression for method name&gt;)
OPT.CLL.LOGGING_METHS-label=Logging methods to be checked
OPT.CLL.SEVERE-label=SEVERE
OPT.CLL.TRACE-label=TRACE
OPT.CLL.WARN-label=WARN
OPT.CLL.WARN_UTIL-label=WARNING
OPT.CLL.group.0-label=java.util.logging Levels which require checking
OPT.CLL.group.1-label=Apache Log and Log4j logging Levels which require checking
OPT.CLL.msg.1=This call to the logging method ''{0}()'' contains an embedded method call.  It may be more efficient to check the logging level first.
OPT.CLL.tab.CUSTOM_LOGS-label=Customized logging systems
OPT.CPTS=Do not convert a value to a String by concatenating the empty String.
OPT.CPTS.CHECK_TYPE-label=What to check
OPT.CPTS.CHECK_TYPE.0-label=Check all types
OPT.CPTS.CHECK_TYPE.1-label=Check primitive types
OPT.CPTS.msg.1=The value ''{0}'' is converted to a String here by concatenation with the empty String.
OPT.CRSG=Avoid duplicate calls to the "get" methods of "ResultSet"
OPT.CRSG.msg.1=The method ''{0}()'' has already been called on the "ResultSet" "{1}" with the same argument.
OPT.CRSG.msg.2=The method ''{0}()'' has already been called on the "ResultSet" "{1}" with the same arguments.
OPT.CRWD=Close resources as early as possible
OPT.CRWD.msg.1=It may be possible to move this call to "close" earlier in the method.
OPT.CTLV=Do not use a "private" field that is accessed in only one method; change it to a local variable
OPT.CTLV.IGNORE_CONST-label=Ignore fields which are used in a constructor.
OPT.CTLV.msg.1=Field ''{0}'' is used only in method ''{1}''.
OPT.CTLV.msg.2=Field ''{0}'' is used only in one constructor.
OPT.EES=Use 'String.length() \=\= 0' instead of 'String.equals("")'
OPT.EES.msg.1=Consider using ''String.length() {0} 0'' here instead of the ''String.equals()'' method.
OPT.EIC=Use 'equalsIgnoreCase()' instead of calls to 'toLowerCase()' or 'toUpperCase()'
OPT.EIC.msg.1=''{0}()'' called here.
OPT.EOIL=Avoid calling expensive operations in the body of a loop.
OPT.EOIL.EXPENSE_OPERS-description=Methods which should not be called in loops (in form of &lt;regular expression for qualified name of declaring type&gt;\#&lt;regular expression for method name&gt;)
OPT.EOIL.EXPENSE_OPERS-label=Methods which should not be called in loops
OPT.EOIL.msg.1=It may be possible to take this call to the method ''{0}'' out of its enclosing loop(s).
OPT.ICDPC=When calling "Math.ceil()", do not pass in an integer that has been cast to a floating point type
OPT.ICDPC.msg.1=Calling "Math.ceil()" with this argument is not necessary since the argument is guaranteed to have no fractional part.
OPT.ICGA=Avoid accessing members which will require synthetic accessor methods
OPT.ICGA.FIELD_ACCESSES-label=Field Accesses
OPT.ICGA.METHOD_ACCESSES-label=Method Invocations
OPT.ICGA.OBJECT_INST-label=Object Instantiations
OPT.ICGA.group.0-label=What to Check
OPT.ICGA.msg.1=The method ''{0}'' will require a generated accessor to access.
OPT.ICGA.msg.2=The field ''{0}'' will require a generated accessor to access.
OPT.ICGA.msg.3=Instantiation of the class ''{0}'' needs a generated accessor.
OPT.ILUG=Do not iterate through Lists using the 'get()' method
OPT.ILUG.msg.1=The list ''{0}'' is iterated through using the ''get()'' method.  This may be inefficient.
OPT.ISC=Do not instantiate a class which contains only static fields and methods
OPT.ISC.msg.1=This instantiation may be unnecessary since all the methods and fields of the class are static.
OPT.LIOL=Move invariants outside of loops wherever possible.
OPT.LIOL.CONSTANT_METHODS-label=Specify method calls which should be considered constant.
OPT.LIOL.CONSTANT_METHODS.OPT__LIOL__CONSTANT_METHODS__COLUMN1-label=Type (regular expression)
OPT.LIOL.CONSTANT_METHODS.OPT__LIOL__CONSTANT_METHODS__COLUMN2-label=Method (regular expression)
OPT.LIOL.msg.1=It may be possible to move this assignment to the variable ''{0}'' outside of the enclosing loop.
OPT.LIOL.msg.2=It may be possible to move the declaration of the variable ''{0}'' outside of the enclosing loop.
OPT.LIOL.msg.3=It may be possible to move this assignment to the field ''{0}'' outside of the enclosing loop.
OPT.LIOL.msg.4=It may be possible to move this expression outside of the enclosing loop.
OPT.LOOP=Do not instantiate variables in a loop body.
OPT.LOOP.msg.1=Object creation in a loop body\: {0}.
OPT.MUNC=Avoid unnecessary comparisons to "null"
OPT.MUNC.msg.1=This comparison to "null" may be unnecessary because ''{0}'' is always "null".
OPT.MUNC.msg.2=This comparison to "null" may be unnecessary because ''{0}'' is never "null".
OPT.NCIO=Avoid 'null' check before 'instanceof'
OPT.NCIO.msg.1=''{0}'' checks ''null'' before ''instanceof'' here.
OPT.NIVND=Use the 'nextInt()' method to generate a random integer
OPT.NIVND.msg.1=Consider using the 'Random.nextInt()' method here instead of 'Random.nextDouble()' to generate a random integer.
OPT.NIW=Avoid creating new instances of BigInteger and BigDecimal
OPT.NIW.msg.1=''{0}'' already exists in ''{1}''.
OPT.PRIM=Do not instantiate the wrapper classes for primitive types.
OPT.PRIM.BOOLEAN-label=Boolean
OPT.PRIM.BYTE-label=Byte
OPT.PRIM.CHARACTER-label=Character
OPT.PRIM.CHECK_ARRAY-label=Check arrays of primitive wrappers
OPT.PRIM.DOUBLE-label=Double
OPT.PRIM.FLOAT-label=Float
OPT.PRIM.INTEGER-label=Integer
OPT.PRIM.LONG-label=Long
OPT.PRIM.SHORT-label=Short
OPT.PRIM.group.0-label=Types to Check
OPT.PRIM.msg.1=Unnecessary instantiation of ''{0}'' object.
OPT.PRIM.msg.2=Unnecessary instantiation of ''{0}'' array.
OPT.SBL=Avoid converting StringBuffer or StringBuilder to String to check length
OPT.SBL.msg.1=''{0}()'' called here.
OPT.SBS=Use 'StringBuilder' instead of 'StringBuffer' when synchronization is not required.
OPT.SBS.msg.1=Consider using "StringBuilder" for ''{0}''.
OPT.SDLS=Avoid using synchronized data structures for local variables
OPT.SDLS.IGNORE_NON_TRIVIAL-label=Ignore cases where converting from a Vector to an ArrayList is not trivial
OPT.SDLS.msg.1=Consider using a ''{0}'' instead of a ''{1}'' here for efficiency.
OPT.SDLS.msg.2=Consider using an ''{0}'' instead of a ''{1}'' here for efficiency.
OPT.SRA=Avoid using 'String.replaceAll()' with literal values.
OPT.SRA.msg.1={0} is a literal value.
OPT.STCA=Do not call ''String.toCharArray()'' unnecessarily.
OPT.STCA.msg.1=This call to ''toCharArray()'' may be unnecessary.
OPT.STR=Use single quotes instead of double quotes for single character string concatenation
OPT.STR.msg.1=Single character ''{0}'' using double quotes in string concatenation.
OPT.STRBUF=Simplify methods that return strings that are always concatenated
OPT.STRBUF.msg.1=Returned string always concatenated.
OPT.STS=Avoid unnecessary calls to 'String' methods
OPT.STS.SUBSTRING-label=Check for calls to 'substring(0)' on 'java.lang.String' objects
OPT.STS.TO_STRING-label=Check for invocations of 'toString()' on 'java.lang.String' objects
OPT.STS.msg.1='toString()' is invoked on a 'String' object.
OPT.STS.msg.2=Unnecessary call to 'substring(0)'.
OPT.SWIF=Avoid use of if statements if they can be replaced with switch statements
OPT.SWIF.NUMBER_LEVELS-label=Number of consecutive if statements before it should be flagged.
OPT.SWIF.msg.1=This if statement would be more efficient if it was replaced with a switch statement.
OPT.SWIF.tab.Type-label=Type
OPT.SYN=Do not call a synchronized method inside of a loop
OPT.SYN.msg.1=Calling synchronized method ''{0}'' inside of a loop.
OPT.UISO=Avoid unnecessary "instanceof" evaluations
OPT.UISO.msg.1=Unnecessary "instanceof" evaluation on variable ''{0}''.
OPT.UISO.msg.2=Unnecessary "instanceof" evaluation on expression ''{0}''.
OPT.UMATH=Do not call the methods from 'java.lang.Math' if the result is a constant which can be easily determined
OPT.UMATH.msg.1=The result of this call to ''{0}'' with argument ''{1}'' should be calculated statically.
OPT.UMATH.msg.2=The result of this call to ''{0}'' with arguments ''{1}'' and ''{2}'' should be calculated statically.
OPT.UNC=Avoid unnecessary casting
OPT.UNC.msg.1=Unnecessary cast to ''{0}''.
OPT.USB=Use 'StringBuffer' instead of 'String' when concatenating strings.
OPT.USB.WHAT_TO_CHECK-label=What to Flag
OPT.USB.WHAT_TO_CHECK.0-label=Only cases where the same String may be appended to more than once
OPT.USB.WHAT_TO_CHECK.1-label=Any case where a String is appended to
OPT.USB.msg.1=String concatenation is performed here on the String "{0}".
OPT.USB.msg.2=''{0}'' appends a String concatenation.
OPT.USB.msg.3=''{0}'' initialized to a String concatenation.
OPT.USC=Use 'String' instead of 'StringBuffer' for constant strings.
OPT.USC.msg.1=''StringBuffer'' value never modified \: {0}.
OPT.USCL=Avoid questionable uses of non-short-circuit logic
OPT.USCL.IGNORE_IF_COMMENT-label=Ignore if the operator is directly followed by a comment, or the line ends with a comment
OPT.USCL.IGNORE_IF_COMMENT_ABOVE-label=Ignore if the line above the operator contains a comment
OPT.USCL.IGNORE_METHODS-label=Ignore methods that match the regular expression
OPT.USCL.msg.1=Usage of non-short-circuit logic\: replace ''{0}'' with ''{1}'' unless you want both sides to always be evaluated.
OPT.USCL.msg.2=Usage of non-short-circuit logic\: use assignment with ''{0}'' instead of ''{1}'' unless you want both sides to always be evaluated.
OPT.USCL.tab.Type-label=Type
OWASP2017=OWASP Top 10 Most Critical Web Application Security Risks (2017)
OWASP2017.A1=A1-Injection
OWASP2017.A1.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
OWASP2017.A1.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
OWASP2017.A10=A10-Insufficient Logging&Monitoring
OWASP2017.A10.ENFL=Ensure all sensitive method invocations are logged
OWASP2017.A10.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP2017.A10.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP2017.A10.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
OWASP2017.A10.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
OWASP2017.A10.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
OWASP2017.A10.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
OWASP2017.A10.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
OWASP2017.A10.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
OWASP2017.A10.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
OWASP2017.A10.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
OWASP2017.A10.ENFL.tab.LOG_TAG-label=Loggers
OWASP2017.A10.ENFL.tab.POST_LOG_TAG-label=Next statement
OWASP2017.A10.ENFL.tab.PRE_LOG_TAG-label=Previous statement
OWASP2017.A10.LGE=Ensure all exceptions are either logged with a standard logger or rethrown
OWASP2017.A10.LGE.CHECK_EXCEPT_FULL_PASSED-label=Check if the exception passed to the logging method is complete
OWASP2017.A10.LGE.CHECK_EXCEPT_LOGGED-label=Check if the exception is passed into the logging method call
OWASP2017.A10.LGE.CHECK_EXCEPT_THROW-label=Check if the caught exception is passed to a new exception or rethrown
OWASP2017.A10.LGE.FLAG_LEVEL-label=Catch clause should contain\:
OWASP2017.A10.LGE.FLAG_LEVEL.0-label=Logging method.
OWASP2017.A10.LGE.FLAG_LEVEL.1-label=Logging method or "throw" exception statement.
OWASP2017.A10.LGE.FLAG_LEVEL.2-label=Logging method, comment, or "throw" exception statement.
OWASP2017.A10.LGE.IGNORE_LIST-label=Ignore exception variables matching the following regular expression(s)\:
OWASP2017.A10.LGE.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP2017.A10.LGE.LOG_METHOD_EXPRESSION-label=Logging method name in regular expression
OWASP2017.A10.LGE.msg.1=The exception is not logged in the "catch" clause.
OWASP2017.A10.LGE.msg.2=The exception is neither logged nor rethrown in the "catch" clause.
OWASP2017.A10.LGE.msg.3=The exception is neither logged nor rethrown in the "catch" clause. Add a comment to the clause if this is expected.
OWASP2017.A10.LGE.msg.4=The ''{0}'' exception is not passed to the logging method called in the "catch" clause.
OWASP2017.A10.LGE.msg.5=The information passed from the ''{0}'' exception to the logging method may be incomplete.
OWASP2017.A10.LGE.msg.6=The ''{0}'' exception is not rethrown in the "catch" block or passed to the new exception as an argument.
OWASP2017.A10.LGE.tab.IGNORE_LIST_TAB-label=Ignore List
OWASP2017.A10.LGE.tab.LOGGERS_TAB-label=Loggers
OWASP2017.A2=A2-Broken Authentication
OWASP2017.A2.HGRSI=Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class
OWASP2017.A2.HGRSI.msg.1=The 'getRequestedSessionId' method may return untrusted data
OWASP2017.A2.HTTPRHA=Do not rely on IP addresses obtained from HTTP request headers for authentication
OWASP2017.A2.HTTPRHA.msg.1=The IP address retrieved from the HTTP request header is used for authentication
OWASP2017.A2.HTTPRHA.msg.2=The IP address retrieved from the header using the 'getRemoteAddr()' method is used for authentication
OWASP2017.A2.ISL=Always call 'HttpSession.invalidate()' before 'LoginContext.login()'
OWASP2017.A2.ISL.msg.1=Login without session invalidation.
OWASP2017.A2.RUIM=Ensure proper session expiration
OWASP2017.A2.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
OWASP2017.A2.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
OWASP2017.A3=A3-Sensitive Data Exposure
OWASP2017.A3.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP2017.A3.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP2017.A3.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP2017.A3.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP2017.A3.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP2017.A3.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP2017.A3.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP2017.A3.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
OWASP2017.A3.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
OWASP2017.A3.CONSEN=Do not log confidential or sensitive information
OWASP2017.A3.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP2017.A3.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP2017.A3.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
OWASP2017.A3.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
OWASP2017.A3.ENPP=Ensure arguments passed to certain methods come from predefined methods list.
OWASP2017.A3.ENPP.PAIRS_TABLE_HEADER-label=Methods and arguments configuration
OWASP2017.A3.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN1-label=Method to be checked (&lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,...)
OWASP2017.A3.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN2-label=Argument Index to Check (''0''-based)
OWASP2017.A3.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN3-label=Allowed method name (in Regular Expressions)
OWASP2017.A3.ENPP.msg.1=Argument number {0} passed to method ''{1}'' is not an allowed method call.
OWASP2017.A3.HCCK=Avoid using hard-coded cryptographic keys
OWASP2017.A3.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
OWASP2017.A3.HCCK.msg.1=Hard-coded cryptographic key here.
OWASP2017.A3.HCNA=Do not hard-code IP addresses and port numbers.
OWASP2017.A3.HCNA.IP-label=Do not hard-code IP addresses
OWASP2017.A3.HCNA.PORT-label=Do not hard-code port numbers
OWASP2017.A3.HCNA.msg.1=Hard-coded IP address ''{0}''.
OWASP2017.A3.HCNA.msg.2=Hard-coded port number ''{0}''.
OWASP2017.A3.HV=Ensure the HostnameVerifier.verify() method validates the certificate
OWASP2017.A3.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
OWASP2017.A3.ICA=Avoid using insecure algorithms for cryptography.
OWASP2017.A3.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP2017.A3.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP2017.A3.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP2017.A3.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP2017.A3.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP2017.A3.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP2017.A3.IVR=Avoid non-random "byte[]" when using IvParameterSpec.
OWASP2017.A3.IVR.msg.1=IvParameterSpec instantiated with non-random value ''{0}''.
OWASP2017.A3.MCMDU=MessageDigest objects must process the data with the 'update' method
OWASP2017.A3.MCMDU.msg.1=The 'update' method is not called on the ''{0}'' variable after the message digest object is obtained
OWASP2017.A3.MDSALT=Use hash functions with a salt
OWASP2017.A3.MDSALT.msg.1=A salt is not added to the digest
OWASP2017.A3.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
OWASP2017.A3.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
OWASP2017.A3.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
OWASP2017.A3.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
OWASP2017.A3.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
OWASP2017.A3.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
OWASP2017.A3.SIKG=Initialize KeyGenerator instances 
OWASP2017.A3.SIKG.msg.1=The ''{0}'' object of the KeyGenerator class is created but not initialized
OWASP2017.A3.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP2017.A3.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP2017.A3.USC=Use the SSL-enabled version of classes when possible.
OWASP2017.A3.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP2017.A3.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP2017.A3.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP2017.A3.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP2017.A3.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP2017.A3.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP2017.A3.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP2017.A3.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP2017.A3.VJFS=Always verify JarFile signatures
OWASP2017.A3.VJFS.msg.1=Consider using a JarFile constructor with verification enabled.
OWASP2017.A3.VSI=Properly validate server identity
OWASP2017.A3.VSI.msg.1=SMTP SSL does not check server identity.
OWASP2017.A3.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
OWASP2017.A4=A4-XML External Entities (XXE)
OWASP2017.A4.DXXE=Disable XML external entity injection.
OWASP2017.A4.DXXE.msg.1=XXE injection has not been disabled.
OWASP2017.A4.DXXE.msg.2=XXE injection has not been disabled. Ensure your parser version allows you to configure the required options.
OWASP2017.A6=A6-Security Misconfiguration
OWASP2017.A6.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
OWASP2017.A6.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
OWASP2017.A6.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
OWASP2017.A6.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
OWASP2017.A6.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
OWASP2017.A6.AECB.CHECK_CATCH-label=Check "catch" block.
OWASP2017.A6.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
OWASP2017.A6.AECB.CHECK_FINALLY-label=Check "finally" block.
OWASP2017.A6.AECB.CHECK_TRY-label=Check "try" block.
OWASP2017.A6.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
OWASP2017.A6.AECB.msg.1="try" block has an empty body.
OWASP2017.A6.AECB.msg.2="catch" block has an empty body.
OWASP2017.A6.AECB.msg.3="finally" block has an empty body.
OWASP2017.A6.DCSRFJAVA=Do not disable CSRF protection
OWASP2017.A6.DCSRFJAVA.msg.1=CSRF protection is disabled.
OWASP2017.A6.DMDS=Avoid using the DriverManagerDataSource class in production code
OWASP2017.A6.DMDS.msg.1=The DriverManagerDataSource class is not a pooled data source and should not be used in production code.
OWASP2017.A6.EWSSEC=Avoid debug information from Spring Security framework to logs
OWASP2017.A6.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
OWASP2017.A6.JXCORS=Restrict cross-origin resource sharing to secure origins
OWASP2017.A6.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
OWASP2017.A6.NCE=Do not catch exception types which are too general or are unchecked exceptions.
OWASP2017.A6.NCE.GENERAL-label=Check for general exception types.
OWASP2017.A6.NCE.IGNORE_EXCEPTIONS-label=Ignore exceptions with names matching the following regular expression(s)\:
OWASP2017.A6.NCE.NUM_CHILDREN-label=Check for parent exceptions caught where number of child exceptions thrown is less than
OWASP2017.A6.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN1-label=
OWASP2017.A6.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN2-label=
OWASP2017.A6.NCE.UNCHECKED-label=Check for unchecked exception types.
OWASP2017.A6.NCE.msg.1="catch" statement directly catches the general exception type ''{0}''.
OWASP2017.A6.NCE.msg.2="catch" statement directly catches the unchecked exception type ''{0}''.
OWASP2017.A6.NCE.msg.3="catch" statement catches general parent exception type\: ''{0}''.
OWASP2017.A6.NCNPE=Do not catch 'NullPointerException'
OWASP2017.A6.NCNPE.msg.1=Avoid catching 'NullPointerException'
OWASP2017.A6.NTERR=Do not throw exception types which are too general or are unchecked exceptions.
OWASP2017.A6.NTERR.CHECKED_EXCEPTS-label=Exception types which should not be thrown (fully qualified names)
OWASP2017.A6.NTERR.msg.1=Avoid throwing ''{0}''.
OWASP2017.A6.NTX=Avoid declaring methods to throw general or unchecked Exception types
OWASP2017.A6.NTX.CHECKED_EXCEPTS-label=Exception types which should not be declared to be thrown (fully qualified names)
OWASP2017.A6.NTX.IGNORE_OVERRIDING-label=Ignore overriding methods.
OWASP2017.A6.NTX.IGNORE_PROPAGATED-label=Ignore methods which propagate exception types of called methods.
OWASP2017.A6.NTX.SKIP_JUNIT-label=Skip JUnit classes.
OWASP2017.A6.NTX.SUBCLASSES-label=Check for exceptions which are subclasses of 'Error' and 'RuntimeException'.
OWASP2017.A6.NTX.msg.1=Throwing explicit ''{0}'' object in ''{1}()''.
OWASP2017.A6.SIO=Avoid calling print methods of 'System.err' or 'System.out'
OWASP2017.A6.SIO.METHOD_SKIP_LIST-label=Exclude methods
OWASP2017.A6.SIO.SCANNED_CLASS_TABLE-label=Include classes
OWASP2017.A6.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
OWASP2017.A6.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
OWASP2017.A6.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
OWASP2017.A7=A7-Cross-Site Scripting (XSS)
OWASP2017.A7.CDBV=Canonicalize data before validation.
OWASP2017.A7.CDBV.CANON_METHS-description=Canonicalization method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2017.A7.CDBV.CANON_METHS-label=Canonicalization method names (in regular expressions)
OWASP2017.A7.CDBV.CHECK_TYPES-description=Only check calls with the following argument types [regular expressions for fully qualified class name]
OWASP2017.A7.CDBV.CHECK_TYPES-label=Only check calls with the following argument types
OWASP2017.A7.CDBV.VALID_CLASSES-description=Only check calls within the following classes [regular expressions for fully qualified class name]
OWASP2017.A7.CDBV.VALID_CLASSES-label=Only check calls within the following classes
OWASP2017.A7.CDBV.VALID_METHS-description=Validation method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2017.A7.CDBV.VALID_METHS-label=Validation method names (in regular expressions)
OWASP2017.A7.CDBV.msg.1=The data in ''{0}'' may not have been canonicalized before being validated.
OWASP2017.A7.CDBV.msg.2=The return value of this call to ''{0}'' may not have been canonicalized before being validated.
OWASP2017.A8=A8-Insecure Deserialization
OWASP2017.A8.AUXD=Avoid parsing untrusted data with XMLDecoder
OWASP2017.A8.AUXD.msg.1=The XMLDecoder class is used.
OWASP2017.A8.DUID=Create a 'serialVersionUID' for all 'Serializable' classes.
OWASP2017.A8.DUID.CHECK_PRIVATE-label=Check if serialVersionUID is "private"
OWASP2017.A8.DUID.msg.1=No 'serialVersionUID' declared in class ''{0}''.
OWASP2017.A8.DUID.msg.2='serialVersionUID' must be declared "static final long", otherwise it will not be used.
OWASP2017.A8.DUID.msg.3='serialVersionUID' should be declared "private".
OWASP2017.A8.OROM=Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes.
OWASP2017.A8.OROM.CHECK_FOR_READ-label=Check that the 'readObject()' method is implemented in all serializable classes.
OWASP2017.A8.OROM.CHECK_FOR_WRITE-label=Check that the 'writeObject()' method is implemented in all serializable classes.
OWASP2017.A8.OROM.IGNORE_TYPES-label=Ignore types extending or implementing the following types (Specify fully qualified names)\:
OWASP2017.A8.OROM.MUST_BE_FINAL-label=Make sure the 'readObject()' method is 'final'.
OWASP2017.A8.OROM.msg.1=Serializable class ''{0}'' does not implement 'readObject()'.
OWASP2017.A8.OROM.msg.2=Serializable class ''{0}'' implements 'readObject()', but this method is not 'final'.
OWASP2017.A8.OROM.msg.3=Serializable class ''{0}'' does not implement 'writeObject()'.
OWASP2017.A8.RRSC=Define a "readResolve" method for all instances of Serializable types.
OWASP2017.A8.RRSC.CHECK_PACKAGE_PRIVATE-label=a "package-private" constructor
OWASP2017.A8.RRSC.CHECK_PRIVATE-label=a "private" constructor
OWASP2017.A8.RRSC.CHECK_PROTECTED-label=a "protected" constructor
OWASP2017.A8.RRSC.CHECK_PUBLIC-label=a "public" constructor
OWASP2017.A8.RRSC.group.0-label=Check classes with\:
OWASP2017.A8.RRSC.msg.1=The class ''{0}'' implements ''Serializable'' but does not define a "readResolve()" method.
OWASP2017.A8.RRSC.msg.2=The "readResolve()" method of the class ''{0}'' may have a return value other than the Serializable instance.
OWASP2017.A8.RRSC.msg.3=The "readResolve()" method of the class ''{0}'' does not have the correct signature.
OWASP2017.A8.RWAF=Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method
OWASP2017.A8.RWAF.CHECK_READ-label=Check 'readObject' methods
OWASP2017.A8.RWAF.CHECK_WRITE-label=Check 'writeObject' methods
OWASP2017.A8.RWAF.MAX_LEVEL-label=Maximum level of checking allowed
OWASP2017.A8.RWAF.msg.1=The ''{0}'' field is not read by the ''readObject()'' method.
OWASP2017.A8.RWAF.msg.2=The ''{0}'' field is not written out by the ''writeObject()'' method.
OWASP2017.A8.SC=Disable LDAP deserialization
OWASP2017.A8.SC.msg.1=The SearchControls object allows deserialization
OWASP2017.A8.SCBNP=Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents
OWASP2017.A8.SCBNP.msg.1=Class has a non-serializable parent but implements Serializable without specifying readObject or WriteObject methods.
OWASP2017.A8.SCBNP.msg.2=Class has a non-serializable parent but implements Serializable without specifying readObject method.
OWASP2017.A8.SCBNP.msg.3=Class has a non-serializable parent but implements Serializable without specifying WriteObject method.
OWASP2017.A8.SROS=Do not declare the 'readObject()' method as "synchronized"
OWASP2017.A8.SROS.msg.1=Method readObject()  is synchronized.
OWASP2017.A8.VOBD=Validate objects before deserialization
OWASP2017.A8.VOBD.msg.1=The object read from the ObjectInputStream is not validated before deserialization
OWASP2019=OWASP API Security Top 10 (2019)
OWASP2019.API10=API10-Insufficient Logging & Monitoring
OWASP2019.API10.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
OWASP2019.API10.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
OWASP2019.API10.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
OWASP2019.API10.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
OWASP2019.API10.ACW=Avoid writing to Consoles
OWASP2019.API10.ACW.msg.1=Method ''{0}'' writes to Console ''{1}''.
OWASP2019.API10.ACW.msg.2=Method ''{0}'' writes to Console.
OWASP2019.API10.AUML=Avoid using multiple loggers, use logging levels instead
OWASP2019.API10.AUML.TYPES_TO_CHECK-label=Logger Types to Check (Specify Fully Qualified Names)\:
OWASP2019.API10.AUML.msg.1=Class ''{0}'' defines multiple loggers\: ''{1}''.
OWASP2019.API10.CONSEN=Do not log confidential or sensitive information
OWASP2019.API10.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP2019.API10.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP2019.API10.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
OWASP2019.API10.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
OWASP2019.API10.ENFL=Ensure all sensitive method invocations are logged
OWASP2019.API10.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP2019.API10.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP2019.API10.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
OWASP2019.API10.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
OWASP2019.API10.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
OWASP2019.API10.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
OWASP2019.API10.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
OWASP2019.API10.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
OWASP2019.API10.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
OWASP2019.API10.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
OWASP2019.API10.ENFL.tab.LOG_TAG-label=Loggers
OWASP2019.API10.ENFL.tab.POST_LOG_TAG-label=Next statement
OWASP2019.API10.ENFL.tab.PRE_LOG_TAG-label=Previous statement
OWASP2019.API10.LGE=Ensure all exceptions are either logged with a standard logger or rethrown
OWASP2019.API10.LGE.CHECK_EXCEPT_FULL_PASSED-label=Check if the exception passed to the logging method is complete
OWASP2019.API10.LGE.CHECK_EXCEPT_LOGGED-label=Check if the exception is passed into the logging method call
OWASP2019.API10.LGE.CHECK_EXCEPT_THROW-label=Check if the caught exception is passed to a new exception or rethrown
OWASP2019.API10.LGE.FLAG_LEVEL-label=Catch clause should contain\:
OWASP2019.API10.LGE.FLAG_LEVEL.0-label=Logging method.
OWASP2019.API10.LGE.FLAG_LEVEL.1-label=Logging method or "throw" exception statement.
OWASP2019.API10.LGE.FLAG_LEVEL.2-label=Logging method, comment, or "throw" exception statement.
OWASP2019.API10.LGE.IGNORE_LIST-label=Ignore exception variables matching the following regular expression(s)\:
OWASP2019.API10.LGE.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP2019.API10.LGE.LOG_METHOD_EXPRESSION-label=Logging method name in regular expression
OWASP2019.API10.LGE.msg.1=The exception is not logged in the "catch" clause.
OWASP2019.API10.LGE.msg.2=The exception is neither logged nor rethrown in the "catch" clause.
OWASP2019.API10.LGE.msg.3=The exception is neither logged nor rethrown in the "catch" clause. Add a comment to the clause if this is expected.
OWASP2019.API10.LGE.msg.4=The ''{0}'' exception is not passed to the logging method called in the "catch" clause.
OWASP2019.API10.LGE.msg.5=The information passed from the ''{0}'' exception to the logging method may be incomplete.
OWASP2019.API10.LGE.msg.6=The ''{0}'' exception is not rethrown in the "catch" block or passed to the new exception as an argument.
OWASP2019.API10.LGE.tab.IGNORE_LIST_TAB-label=Ignore List
OWASP2019.API10.LGE.tab.LOGGERS_TAB-label=Loggers
OWASP2019.API10.LLM=Ensure that the logging level checked matches the level of the called logging method.
OWASP2019.API10.LLM.msg.1=The logging level checked in this method call is "{0}", but the logging method called has the level "{1}".
OWASP2019.API10.LLM.msg.2=The logging level checked in this comparison is "{0}", but the logging method called has the level "{1}".
OWASP2019.API10.SIO=Avoid calling print methods of 'System.err' or 'System.out'
OWASP2019.API10.SIO.METHOD_SKIP_LIST-label=Exclude methods
OWASP2019.API10.SIO.SCANNED_CLASS_TABLE-label=Include classes
OWASP2019.API10.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
OWASP2019.API10.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
OWASP2019.API10.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
OWASP2019.API2=API2-Broken User Authentication
OWASP2019.API2.AHCA=Avoid hard-coding the arguments to certain methods
OWASP2019.API2.AHCA.DANGEROUS_METHODS-label=Methods to Check
OWASP2019.API2.AHCA.DANGEROUS_METHODS.SECURITY__WSC__AHCA__DANGEROUS_METHODS__COLUMN1-description=Specify &lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;,...)
OWASP2019.API2.AHCA.DANGEROUS_METHODS.SECURITY__WSC__AHCA__DANGEROUS_METHODS__COLUMN1-label=Method
OWASP2019.API2.AHCA.DANGEROUS_METHODS.SECURITY__WSC__AHCA__DANGEROUS_METHODS__COLUMN2-label=Argument Index to Check ("0"-based)
OWASP2019.API2.AHCA.msg.1=Argument \# {0} to the method ''{1}()'' should not be hard-coded.
OWASP2019.API2.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP2019.API2.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP2019.API2.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP2019.API2.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP2019.API2.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP2019.API2.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP2019.API2.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP2019.API2.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
OWASP2019.API2.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
OWASP2019.API2.CAM=Keep all authentication methods centralized to enforce consistency
OWASP2019.API2.CAM.DANGEROUS_METHOD_LIST-description=Authentication method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API2.CAM.DANGEROUS_METHOD_LIST-label=Authentication method names (in regular expressions)
OWASP2019.API2.CAM.ENCLOSING_METHOD_LIST-description=Centralized authentication method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API2.CAM.ENCLOSING_METHOD_LIST-label=Centralized authentication method names (in regular expressions)
OWASP2019.API2.CAM.msg.1=''{0}()'' is not allowed to be invoked within ''{1}()'', it should only be invoked inside centralized authentication method declarations.
OWASP2019.API2.CAM.msg.2=''{0}()'' is not allowed to be invoked unless enclosed by centralized access control methods.
OWASP2019.API2.CKTS=Avoid using cryptographic keys which are too short.
OWASP2019.API2.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
OWASP2019.API2.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
OWASP2019.API2.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
OWASP2019.API2.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
OWASP2019.API2.CSD=Clear sensitive data after use.
OWASP2019.API2.CSD.msg.1=''{0}'' is assigned sensitive data but never cleared.
OWASP2019.API2.HCCK=Avoid using hard-coded cryptographic keys
OWASP2019.API2.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
OWASP2019.API2.HCCK.msg.1=Hard-coded cryptographic key here.
OWASP2019.API2.HCCS=Avoid passing hardcoded usernames/passwords/URLs to database connection methods.
OWASP2019.API2.HCCS.CONNECT_METHS-description=Additional Database Connection Methods (in form of &lt;qualified name of declaring type&gt;\#&lt;method name&gt;)
OWASP2019.API2.HCCS.CONNECT_METHS-label=Additional Database Connection Methods
OWASP2019.API2.HCCS.msg.1=This call to ''{0}()'' may be dangerous because it passes in only hard-coded Strings.
OWASP2019.API2.HCCS.msg.2=This call to ''{0}()'' may be dangerous because it uses a hard-coded password.
OWASP2019.API2.HGRSI=Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class
OWASP2019.API2.HGRSI.msg.1=The 'getRequestedSessionId' method may return untrusted data
OWASP2019.API2.ICA=Avoid using insecure algorithms for cryptography.
OWASP2019.API2.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP2019.API2.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP2019.API2.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP2019.API2.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP2019.API2.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP2019.API2.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP2019.API2.MDSALT=Use hash functions with a salt
OWASP2019.API2.MDSALT.msg.1=A salt is not added to the digest
OWASP2019.API2.PAC=Call authentication methods to enforce consistency
OWASP2019.API2.PAC.DANGEROUS_METHOD_LIST-description=Authentication checking method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API2.PAC.DANGEROUS_METHOD_LIST-label=Authentication checking method names (in regular expressions)
OWASP2019.API2.PAC.ENFORCED_METHOD_LIST-description=Centralized authentication method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API2.PAC.ENFORCED_METHOD_LIST-label=Centralized authentication method names (in regular expressions)
OWASP2019.API2.PAC.msg.1=''{0}()'' does not invoke authentication checking method.
OWASP2019.API2.PACC=Call access control methods to enforce consistency
OWASP2019.API2.PACC.DANGEROUS_METHOD_LIST-description=Access checking method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API2.PACC.DANGEROUS_METHOD_LIST-label=Access checking method names (in regular expressions)
OWASP2019.API2.PACC.ENFORCED_METHOD_LIST-description=Centralized access control method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API2.PACC.ENFORCED_METHOD_LIST-label=Centralized access control method names (in regular expressions)
OWASP2019.API2.PACC.msg.1=''{0}()'' does not invoke access control method.
OWASP2019.API2.PERMIT=Avoid EJB 3 methods without security annotations
OWASP2019.API2.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
OWASP2019.API2.PLC=Avoid storing sensitive data in plaintext in a cookie
OWASP2019.API2.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
OWASP2019.API2.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
OWASP2019.API2.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
OWASP2019.API2.PLC.msg.1=Do not store important to safety data in cookie.
OWASP2019.API2.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
OWASP2019.API2.SCHTTP=Mark cookies as HttpOnly
OWASP2019.API2.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
OWASP2019.API2.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
OWASP2019.API3=API3-Excessive Data Exposure
OWASP2019.API3.CETS=Catch all exceptions which may be thrown within Servlet methods
OWASP2019.API3.CETS.msg.1=The method ''{0}()'' is declared to throw the exception type ''{1}'', but this exception is not caught.
OWASP2019.API3.DPAM=Declare package-private methods as inaccessible as possible
OWASP2019.API3.DPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
OWASP2019.API3.DPAM.CHECK_LOCAL-label=Check methods in local classes
OWASP2019.API3.DPAM.msg.1=Method ''{0}()'' should be declared {1}.
OWASP2019.API3.DPAM.msg.2=Constructor ''{0}()'' should be declared {1}.
OWASP2019.API3.FOLLOW=Ensure that file target paths retrieved by resolving symbolic links are safe
OWASP2019.API3.FOLLOW.msg.1=Verify that the path retrieved by using FileVisitOption.FOLLOW_LINKS is within the intended control sphere
OWASP2019.API3.NSSS=Do not use static variables in servlets without synchronization
OWASP2019.API3.NSSS.msg.1=Static variable ''{0}'' used in servlet without synchronization
OWASP2019.API3.NTNPE=Do not throw 'NullPointerException'.
OWASP2019.API3.NTNPE.msg.1=Avoid throwing 'NullPointerException'
OWASP2019.API3.PAF=Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' "final"
OWASP2019.API3.PAF.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
OWASP2019.API3.PAF.CHECK_PAE-label=Check subclasses of "java.security.PrivilegedActionException"
OWASP2019.API3.PAF.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
OWASP2019.API3.PAF.IGNORE_ENCLOSED_FINAL-label=Ignore subclasses which are enclosed by a "final" outer class
OWASP2019.API3.PAF.msg.1=Class ''{0}'' extends ''{1}'' and should be declared "final".
OWASP2019.API3.PAF.msg.2=Class ''{0}'' implements ''{1}'' and should be declared "final".
OWASP2019.API3.PBPSF=Declare subclasses of 'Permission' and 'BasicPermission' "final".
OWASP2019.API3.PBPSF.CHECK_BASICPERMISSION-label=Check implementations of "java.security.BasicPermission"
OWASP2019.API3.PBPSF.CHECK_PERMISSION-label=Check subclasses of "java.security.Permission"
OWASP2019.API3.PBPSF.IGNORE_ENCLOSED_FINAL-label=Ignore subclasses which are enclosed by a "final" outer class
OWASP2019.API3.PBPSF.msg.1=Class ''{0}'' extends ''{1}'' and should be declared "final".
OWASP2019.API3.PBRTE=Always specify absolute paths to execute commands
OWASP2019.API3.PBRTE.msg.1=The specified command is not an absolute path with separators
OWASP2019.API3.PDLC=Avoid using dynamically loaded classes in "privileged" code blocks.
OWASP2019.API3.PDLC.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
OWASP2019.API3.PDLC.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
OWASP2019.API3.PDLC.msg.1=Method ''{0}'' may dynamically load an untrusted class.
OWASP2019.API3.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
OWASP2019.API3.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
OWASP2019.API3.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
OWASP2019.API3.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
OWASP2019.API3.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
OWASP2019.API3.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
OWASP2019.API3.PRMF=Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations "final"
OWASP2019.API3.PRMF.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
OWASP2019.API3.PRMF.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
OWASP2019.API3.PRMF.IGNORE_FINAL_CLASS-label=Ignore "final" classes
OWASP2019.API3.PRMF.msg.1="run()" method of class ''{0}'' should be declared "final".
OWASP2019.API3.SCF=Enforce 'SecurityManager' checks before setting or getting fields
OWASP2019.API3.SCF.CHECK_NON_FINAL_METHOD-label=Ensure methods containing 'SecurityManager' checks are declared "final"
OWASP2019.API3.SCF.FINAL_CLASS-label=Check non-"final" classes only
OWASP2019.API3.SCF.PARAM_LEVEL-label=Maximum depth to look for 'SecurityManager' check
OWASP2019.API3.SCF.msg.1=Missing ''SecurityManager'' check before setting field in method ''{0}()''.
OWASP2019.API3.SCF.msg.2=Missing ''SecurityManager'' check before getting field in method ''{0}()''.
OWASP2019.API3.SCF.msg.3=Method ''{0}'' is not declared "final".
OWASP2019.API3.SCLONE=Enforce 'SecurityManager' checks in methods of 'Cloneable' classes
OWASP2019.API3.SCLONE.PARAM_LEVEL-label=Maximum depth to look for 'SecurityManager' checks
OWASP2019.API3.SCLONE.SUPER_CLASS_CHECK-label=Check indirect 'SecurityManager' checks in super constructor(s)
OWASP2019.API3.SCLONE.msg.1=Missing 'SecurityManager' check in clone() method.
OWASP2019.API3.SCLONE.msg.2=Missing 'SecurityManager' check in constructor.
OWASP2019.API3.SCSER=Enforce 'SecurityManager' checks in methods of 'Serializable' classes
OWASP2019.API3.SCSER.PARAM_LEVEL-label=Maximum depth to look for 'SecurityManager' check
OWASP2019.API3.SCSER.SUPER_CLASS_CHECK-label=Check indirect 'SecurityManager' checks in super constructor(s)
OWASP2019.API3.SCSER.msg.1=Missing 'SecurityManager' check in readObject() method.
OWASP2019.API3.SCSER.msg.2=Missing 'SecurityManager' check in readObjectNoData() method.
OWASP2019.API3.SCSER.msg.3=Missing 'SecurityManager' check in writeObject() method.
OWASP2019.API3.SCSER.msg.4=Missing 'SecurityManager' check in constructor.
OWASP2019.API3.SCSM=Ensure 'SecurityManager' check in constructor of "public" non-"final" sensitive type
OWASP2019.API3.SCSM.JAVA_OPTION-label=Use normal style or Java 6 style
OWASP2019.API3.SCSM.JAVA_OPTION.0-label=Ensure that the final constructor performs a SecurityManager check
OWASP2019.API3.SCSM.JAVA_OPTION.1-label=Enforce Java 6 style, requiring the 'SecurityManager' check to be first.  If Java 6 is not in use then nothing is flagged
OWASP2019.API3.SCSM.msg.1=Constructor ''{0}'' does not perform a SecurityManager check.
OWASP2019.API3.SDM=Store sensitive data in mutable objects.
OWASP2019.API3.SDM.CHECKED_METHODS-label=Methods returning "char[]" password\:
OWASP2019.API3.SDM.CHECKED_METHODS.SECURITY__ESD__SDM__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
OWASP2019.API3.SDM.CHECKED_METHODS.SECURITY__ESD__SDM__CHECKED_METHODS__COLUMN2-label=Method (regular expression)
OWASP2019.API3.SDM.CHECK_JPASSWORDFIELD_STRING-label=Check JPasswordField methods which return a String value
OWASP2019.API3.SDM.CHECK_STRING_INITIALIZE-label=Check Strings initialized with a "char[]" password
OWASP2019.API3.SDM.msg.1=''{0}'' returns a String, should use "getPassword()" instead.
OWASP2019.API3.SDM.msg.2=String initialized with password here, should leave as "char[]".
OWASP2019.API3.SDM.msg.3=String initialized with password ''{0}'' here, should leave as "char[]".
OWASP2019.API3.SERIALIZABLE=Ensure that JavaBean classes implement 'java.io.Serializable'
OWASP2019.API3.SERIALIZABLE.msg.1=Bean class does not implement 'java.io.Serializable'\: ''{0}''
OWASP2019.API3.SMSTR=Ensure 'SecurityManager' checks before 'Socket' transfers or retrievals
OWASP2019.API3.SMSTR.msg.1=Missing "SecurityManager" check before call to ''{0}''.
OWASP2019.API3.SOP=Minimize usage of System.out and System.err in Servlets
OWASP2019.API3.SOP.msg.1=System.out or System.err used in a Servlet
OWASP2019.API3.SPAM=Declare a package-private method "final" if it is not overridden
OWASP2019.API3.SPAM.CHECK_ABSTRACT-label=Check methods in abstract classes
OWASP2019.API3.SPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
OWASP2019.API3.SPAM.CHECK_LOCAL-label=Check methods in local classes
OWASP2019.API3.SPAM.CHECK_STATIC_METHOD-label=Check static methods
OWASP2019.API3.SPAM.CHECK_UNUSED-label=Check unused methods
OWASP2019.API3.SPAM.msg.1=Method ''{0}()'' should be declared "final".
OWASP2019.API3.SPF=Declare 'serialPersistentFields' "private static final"
OWASP2019.API3.SPF.msg.1="serialPersistentFields" of class ''{0}'' should be declared "private static final".
OWASP2019.API3.SPI=Do not interrogate or modify security policy information in a web component
OWASP2019.API3.SPI.DEPTH-label=Maximum depth to look for Policy usage
OWASP2019.API3.SPI.msg.1=Call to ''Policy.{0}()'' in a web component.
OWASP2019.API3.SPI.msg.2=Method ''{0}'' indirectly calls "getPolicy()" or "setPolicy()" in a web component.
OWASP2019.API3.TFP=Declare "transient" fields "private".
OWASP2019.API3.TFP.msg.1="transient" field ''{0}'' should be declared private
OWASP2019.API3.TSPF=Avoid "transient" fields in serialPersistentFields array.
OWASP2019.API3.TSPF.msg.1=Referenced field ''{0}'' of serialPersistentFields array is "transient".
OWASP2019.API3.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP2019.API3.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP2019.API3.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP2019.API3.UPSC=Use "PreparedStatements" correctly.
OWASP2019.API3.UPSC.WRONG_ORDER-label=Check that 'set' methods are called in the correct order
OWASP2019.API3.UPSC.msg.1=The query String for this "PreparedStatement" contains {0} ?''s, but there are {1} calls to ''set'' methods.
OWASP2019.API3.UPSC.msg.2=The query String for this "PreparedStatement" contains {0} ?''s, but there is {1} call to ''set'' method.
OWASP2019.API3.UPSC.msg.3=''set'' methods are called in the incorrect order\: ''set'' method with argument {0} comes after ''set'' method with argument {1}.
OWASP2019.API3.UPSC.msg.4=Invalid argument\: the first argument to the ''{0}()'' method must be >\= 1.
OWASP2019.API3.UPSC.msg.5=Invalid argument\: the first argument to ''{0}()'' is {1}, but there are only {2} ?''s in the corresponding query String.
OWASP2019.API3.UPSC.msg.6=Misuse "PreparedStatement"\: missing '?' in query string.
OWASP2019.API3.VRD=Encapsulate all redirect and forward URLs with a validation function
OWASP2019.API3.VRD.VALIDATE_METHODS-description=Validation methods (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API3.VRD.VALIDATE_METHODS-label=Validation methods (in regular expressions)
OWASP2019.API3.VRD.msg.1=No validation check in redirect URL.
OWASP2019.API3.VRD.msg.2=No validation check in forward URL.
OWASP2019.API3.VSI=Properly validate server identity
OWASP2019.API3.VSI.msg.1=SMTP SSL does not check server identity.
OWASP2019.API3.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
OWASP2019.API4=API4-Lack of Resources & Rate Limiting
OWASP2019.API4.CRWD=Close resources as early as possible
OWASP2019.API4.CRWD.msg.1=It may be possible to move this call to "close" earlier in the method.
OWASP2019.API4.DMDS=Avoid using the DriverManagerDataSource class in production code
OWASP2019.API4.DMDS.msg.1=The DriverManagerDataSource class is not a pooled data source and should not be used in production code.
OWASP2019.API4.ISTART=Do not call the 'start()' method directly on Thread class instances 
OWASP2019.API4.ISTART.CHECK_ONLY_IN_LOOPS-label=Ignore method calls outside of loops
OWASP2019.API4.ISTART.msg.1=A call to the Thread.start() method.
OWASP2019.API4.NSYN=Ensure 'wait()', 'notify()' and 'notifyAll()' are invoked on an object that is clearly synchronized in its enclosing mod scope.
OWASP2019.API4.NSYN.msg.1=''{0}()'' might throw ''IllegalMonitorStateException'' as it's not enclosed in corresponding "synchronized" block or method.
OWASP2019.API4.ODBIL=Do not open or close JDBC connections in loops
OWASP2019.API4.ODBIL.ADDITIONAL_CLOSE_METHODS-label=Additional JDBC connection closing methods (in regular expression)
OWASP2019.API4.ODBIL.ADDITIONAL_CLOSE_METHODS.JDBC__ODBIL__ADDITIONAL_CLOSE_METHODS__COLUMN1-label=Declaring type
OWASP2019.API4.ODBIL.ADDITIONAL_CLOSE_METHODS.JDBC__ODBIL__ADDITIONAL_CLOSE_METHODS__COLUMN2-label=Method name
OWASP2019.API4.ODBIL.ADDITIONAL_OPEN_METHODS-label=Additional JDBC connection opening methods (in regular expression)
OWASP2019.API4.ODBIL.ADDITIONAL_OPEN_METHODS.JDBC__ODBIL__ADDITIONAL_OPEN_METHODS__COLUMN1-label=Declaring type
OWASP2019.API4.ODBIL.ADDITIONAL_OPEN_METHODS.JDBC__ODBIL__ADDITIONAL_OPEN_METHODS__COLUMN2-label=Method name
OWASP2019.API4.ODBIL.MAX_LEVEL-label=Maximum level of checking allowed
OWASP2019.API4.ODBIL.msg.1=The method ''{0}'' opens a JDBC connection and is called in a loop.
OWASP2019.API4.ODBIL.msg.2=The method ''{0}'' closes a JDBC connection and is called in a loop.
OWASP2019.API4.PBFA=Ensure sufficient protection against multiple failed authentication attempts
OWASP2019.API4.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
OWASP2019.API4.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP2019.API4.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP2019.API4.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
OWASP2019.API5=API5-Broken Function Level Authorization
OWASP2019.API5.CACM=Keep all access control methods centralized to enforce consistency
OWASP2019.API5.CACM.DANGEROUS_METHOD_LIST-description=Access control method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API5.CACM.DANGEROUS_METHOD_LIST-label=Access control method names (in regular expressions)
OWASP2019.API5.CACM.ENCLOSING_METHOD_LIST-description=Centralized access control method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API5.CACM.ENCLOSING_METHOD_LIST-label=Centralized access control method names (in regular expressions)
OWASP2019.API5.CACM.msg.1=''{0}()'' is not allowed to be invoked within ''{1}()'', it should only be invoked inside centralized access control method declarations.
OWASP2019.API5.CACM.msg.2=''{0}()'' is not allowed to be invoked unless enclosed by centralized access control methods.
OWASP2019.API7=API7-Security Misconfiguration
OWASP2019.API7.ACMD=Avoid using custom MessageDigest implementations
OWASP2019.API7.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
OWASP2019.API7.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
OWASP2019.API7.AECB.CHECK_CATCH-label=Check "catch" block.
OWASP2019.API7.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
OWASP2019.API7.AECB.CHECK_FINALLY-label=Check "finally" block.
OWASP2019.API7.AECB.CHECK_TRY-label=Check "try" block.
OWASP2019.API7.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
OWASP2019.API7.AECB.msg.1="try" block has an empty body.
OWASP2019.API7.AECB.msg.2="catch" block has an empty body.
OWASP2019.API7.AECB.msg.3="finally" block has an empty body.
OWASP2019.API7.AMSC=Do not access or modify security configuration objects.
OWASP2019.API7.AMSC.msg.1=Security method was called
OWASP2019.API7.DCSRFJAVA=Do not disable CSRF protection
OWASP2019.API7.DCSRFJAVA.msg.1=CSRF protection is disabled.
OWASP2019.API7.ENPP=Ensure arguments passed to certain methods come from predefined methods list.
OWASP2019.API7.ENPP.PAIRS_TABLE_HEADER-label=Methods and arguments configuration
OWASP2019.API7.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN1-label=Method to be checked (&lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,...)
OWASP2019.API7.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN2-label=Argument Index to Check (''0''-based)
OWASP2019.API7.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN3-label=Allowed method name (in Regular Expressions)
OWASP2019.API7.ENPP.msg.1=Argument number {0} passed to method ''{1}'' is not an allowed method call.
OWASP2019.API7.EWSSEC=Avoid debug information from Spring Security framework to logs
OWASP2019.API7.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
OWASP2019.API7.HV=Ensure the HostnameVerifier.verify() method validates the certificate
OWASP2019.API7.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
OWASP2019.API7.IVR=Avoid non-random "byte[]" when using IvParameterSpec.
OWASP2019.API7.IVR.msg.1=IvParameterSpec instantiated with non-random value ''{0}''.
OWASP2019.API7.JDBCTEMPLATE=Avoid using native JDBC
OWASP2019.API7.JDBCTEMPLATE.CHECK_SIMPLE_JDBC_TEMPLATE-label=Avoid using SimpleJdbcTemplate (From Spring Framework 3.0.1 is deprecated)
OWASP2019.API7.JDBCTEMPLATE.msg.1=Avoid using native jdbc to open connection.
OWASP2019.API7.JDBCTEMPLATE.msg.2=Avoid using native jdbc to prepare statement.
OWASP2019.API7.JDBCTEMPLATE.msg.3=Avoid using native jdbc to execute statement.
OWASP2019.API7.JDBCTEMPLATE.msg.4=Avoid using native jdbc to close connection.
OWASP2019.API7.JDBCTEMPLATE.msg.5=Avoid using deprecated SimpleJdbcTemplate class.
OWASP2019.API7.JXCORS=Restrict cross-origin resource sharing to secure origins
OWASP2019.API7.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
OWASP2019.API7.MCMDU=MessageDigest objects must process the data with the 'update' method
OWASP2019.API7.MCMDU.msg.1=The 'update' method is not called on the ''{0}'' variable after the message digest object is obtained
OWASP2019.API7.NCNPE=Do not catch 'NullPointerException'
OWASP2019.API7.NCNPE.msg.1=Avoid catching 'NullPointerException'
OWASP2019.API7.NTERR=Do not throw exception types which are too general or are unchecked exceptions.
OWASP2019.API7.NTERR.CHECKED_EXCEPTS-label=Exception types which should not be thrown (fully qualified names)
OWASP2019.API7.NTERR.msg.1=Avoid throwing ''{0}''.
OWASP2019.API7.NTX=Avoid declaring methods to throw general or unchecked Exception types
OWASP2019.API7.NTX.CHECKED_EXCEPTS-label=Exception types which should not be declared to be thrown (fully qualified names)
OWASP2019.API7.NTX.IGNORE_OVERRIDING-label=Ignore overriding methods.
OWASP2019.API7.NTX.IGNORE_PROPAGATED-label=Ignore methods which propagate exception types of called methods.
OWASP2019.API7.NTX.SKIP_JUNIT-label=Skip JUnit classes.
OWASP2019.API7.NTX.SUBCLASSES-label=Check for exceptions which are subclasses of 'Error' and 'RuntimeException'.
OWASP2019.API7.NTX.msg.1=Throwing explicit ''{0}'' object in ''{1}()''.
OWASP2019.API7.PACC=Call access control methods to enforce consistency
OWASP2019.API7.PACC.DANGEROUS_METHOD_LIST-description=Access checking method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API7.PACC.DANGEROUS_METHOD_LIST-label=Access checking method names (in regular expressions)
OWASP2019.API7.PACC.ENFORCED_METHOD_LIST-description=Centralized access control method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API7.PACC.ENFORCED_METHOD_LIST-label=Centralized access control method names (in regular expressions)
OWASP2019.API7.PACC.msg.1=''{0}()'' does not invoke access control method.
OWASP2019.API7.SIKG=Initialize KeyGenerator instances 
OWASP2019.API7.SIKG.msg.1=The ''{0}'' object of the KeyGenerator class is created but not initialized
OWASP2019.API7.SMSN=Do not set or create a new SecurityManager in EJBs
OWASP2019.API7.SMSN.DEPTH-label=Maximum depth to check for SecurityManager setting or creation
OWASP2019.API7.SMSN.msg.1="System.setSecurityManager()" called in bean class.
OWASP2019.API7.SMSN.msg.2=New ''{0}'' created in bean class.
OWASP2019.API7.SMSN.msg.3=Call to ''{0}'' indirectly sets or creates a SecurityManager.
OWASP2019.API7.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP2019.API7.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP2019.API7.USC=Use the SSL-enabled version of classes when possible.
OWASP2019.API7.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP2019.API7.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP2019.API7.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP2019.API7.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP2019.API7.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP2019.API7.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP2019.API7.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP2019.API7.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP2019.API8=API8-Injection
OWASP2019.API8.AEAF=Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'.
OWASP2019.API8.AEAF.msg.1=Consider extending 'DynaValidatorForm' or 'DynaValidatorActionForm'
OWASP2019.API8.AEAF.msg.2=Consider extending 'ValidatorForm' or 'ValidatorActionForm'
OWASP2019.API8.ARM=Avoid using reflection methods
OWASP2019.API8.ARM.CHECKED_METHODS-label=Check the following methods\:
OWASP2019.API8.ARM.CHECKED_METHODS.CODSTA__BP__ARM__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
OWASP2019.API8.ARM.CHECKED_METHODS.CODSTA__BP__ARM__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
OWASP2019.API8.ARM.msg.1=Reflection method ''{0}'' called.
OWASP2019.API8.ASAPI=Prevent the scripting API from executing untrusted code
OWASP2019.API8.ASAPI.REPORT_ON_EVAL-label=Report violation on eval method invocation
OWASP2019.API8.ASAPI.msg.1=Ensure that the use of the scripting API does not allow untrusted dynamic code execution.
OWASP2019.API8.ASAPI.msg.2=The eval() method is called on the scriptEngine object and may execute untrusted dynamic code.
OWASP2019.API8.AUXD=Avoid parsing untrusted data with XMLDecoder
OWASP2019.API8.AUXD.msg.1=The XMLDecoder class is used.
OWASP2019.API8.CDBV=Canonicalize data before validation.
OWASP2019.API8.CDBV.CANON_METHS-description=Canonicalization method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API8.CDBV.CANON_METHS-label=Canonicalization method names (in regular expressions)
OWASP2019.API8.CDBV.CHECK_TYPES-description=Only check calls with the following argument types [regular expressions for fully qualified class name]
OWASP2019.API8.CDBV.CHECK_TYPES-label=Only check calls with the following argument types
OWASP2019.API8.CDBV.VALID_CLASSES-description=Only check calls within the following classes [regular expressions for fully qualified class name]
OWASP2019.API8.CDBV.VALID_CLASSES-label=Only check calls within the following classes
OWASP2019.API8.CDBV.VALID_METHS-description=Validation method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2019.API8.CDBV.VALID_METHS-label=Validation method names (in regular expressions)
OWASP2019.API8.CDBV.msg.1=The data in ''{0}'' may not have been canonicalized before being validated.
OWASP2019.API8.CDBV.msg.2=The return value of this call to ''{0}'' may not have been canonicalized before being validated.
OWASP2019.API8.DCEMSL=Avoid untrusted input when logging messages with Seam Logging API
OWASP2019.API8.DCEMSL.CLASS_FIELDS_ARE_SAFE-label=Consider class fields to be secure
OWASP2019.API8.DCEMSL.msg.1=The ''{0}'' method called on the object of the Log class takes a dangerous argument.
OWASP2019.API8.DXXE=Disable XML external entity injection.
OWASP2019.API8.DXXE.msg.1=XXE injection has not been disabled.
OWASP2019.API8.DXXE.msg.2=XXE injection has not been disabled. Ensure your parser version allows you to configure the required options.
OWASP2019.API8.EDPM=Encapsulate constructor arguments with a validation function
OWASP2019.API8.EDPM.DANGEROUS_TYPES_LIST-label=User-defined types to be inspected (in regular expressions)<BR/>[qualified name of declaring type]
OWASP2019.API8.EDPM.ENCAPSULATE_METHOD_LIST-label=Validation method names (in regular expressions)<BR/>[qualified name of declaring type and method name]
OWASP2019.API8.EDPM.ENCAPSULATE_METHOD_LIST.SECURITY__IBA__EDPM__ENCAPSULATE_METHOD_LIST__COLUMN1-label=Additional dangerous types
OWASP2019.API8.EDPM.ENCAPSULATE_METHOD_LIST.SECURITY__IBA__EDPM__ENCAPSULATE_METHOD_LIST__COLUMN2-label=Validation Methods
OWASP2019.API8.EDPM.msg.1=The constructor for "{0}" returns dangerous data and its arguments should be encapsulated by a validation method.
OWASP2019.API8.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
OWASP2019.API8.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
OWASP2019.API8.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
OWASP2019.API8.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
OWASP2019.API8.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
OWASP2019.API8.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
OWASP2019.API8.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
OWASP2019.API8.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
OWASP2019.API8.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
OWASP2019.API8.VJFS=Always verify JarFile signatures
OWASP2019.API8.VJFS.msg.1=Consider using a JarFile constructor with verification enabled.
OWASP2019.API8.XPIJ=Avoid XPath injection when evaluating XPath queries
OWASP2019.API8.XPIJ.CHECK_VAR_RESOLVER-label=Check if 'XPathVariableResolver' is not set in XPath objects
OWASP2019.API8.XPIJ.msg.1=Avoid using variable ''{0}'' in XPath query.
OWASP2019.API8.XPIJ.msg.2='XPathVariableResolver' is not set in XPath variable ''{0}''.
OWASP2019.API9=API9-Improper Assets Management
OWASP2019.API9.DPMT=Avoid unused Javadoc tags
OWASP2019.API9.DPMT.CHECK_PARAM-label=Check unused @param tags
OWASP2019.API9.DPMT.CHECK_RETURN-label=Check unused @return tags
OWASP2019.API9.DPMT.CHECK_SEE-label=Check unused @see and @link tags
OWASP2019.API9.DPMT.CHECK_THROWS-label=Check unused @throws and @exception tags
OWASP2019.API9.DPMT.IGNORE_RUNTIME_EXCEPTION-label=Ignore @throws and @exception tags of 'RuntimeException'
OWASP2019.API9.DPMT.msg.1=''{0}'' doesn''t match the return type of ''{1}''.
OWASP2019.API9.DPMT.msg.2=''{0}'' doesn''t match any Java element.
OWASP2019.API9.DPMT.msg.3=''{0}'' doesn''t match any parameter in ''{1}''.
OWASP2019.API9.DPMT.msg.4=''{0}'' doesn''t match any exception thrown by ''{1}''.
OWASP2019.API9.JNJD=Do not insert non-Javadoc comments between Javadoc comments and declarations
OWASP2019.API9.JNJD.msg.1=Avoid inserting non-Javadoc comments between Javadoc comments and declarations.
OWASP2019.API9.MISFORMAT=Avoid misformatted Javadoc tags
OWASP2019.API9.MISFORMAT.JAVADOC.MISFORMAT.PACKAGE-label=Check "package-private" methods
OWASP2019.API9.MISFORMAT.JAVADOC.MISFORMAT.PRIVATE-label=Check "private" methods
OWASP2019.API9.MISFORMAT.JAVADOC.MISFORMAT.PROTECTED-label=Check "protected" methods
OWASP2019.API9.MISFORMAT.JAVADOC.MISFORMAT.PUBLIC-label=Check "public" methods
OWASP2019.API9.MISFORMAT.msg.1=Probably ''{0}'' is misformatted Javadoc tag.
OWASP2019.API9.ORDER=Order Javadoc tags appropriately
OWASP2019.API9.ORDER.ORDER_LIST-label=Javadoc tag table
OWASP2019.API9.ORDER.ORDER_LIST.JAVADOC__ORDER__ORDER_LIST__COLUMN1-label=Ignore tag
OWASP2019.API9.ORDER.ORDER_LIST.JAVADOC__ORDER__ORDER_LIST__COLUMN2-label=Javadoc Tag Order
OWASP2019.API9.ORDER.msg.1=Invalid Javadoc tag order in ''{0}''.
OWASP2019.API9.ORDER.msg.2=''{0}'' tag should be placed before ''{1}'' tag in ''{2}()''.
OWASP2019.API9.SMJT=Use the '@concurrency' Javadoc tag on "synchronized" methods and blocks
OWASP2019.API9.SMJT.CHECK_PACKAGE-label=Check "package-private" methods
OWASP2019.API9.SMJT.CHECK_PRIVATE-label=Check "private" methods
OWASP2019.API9.SMJT.CHECK_PROTECTED-label=Check "protected" methods
OWASP2019.API9.SMJT.CHECK_PUBLIC-label=Check "public" methods
OWASP2019.API9.SMJT.msg.1=Missing '@concurrency' Javadoc comment for "synchronized" method\: {0}.
OWASP2019.API9.SMJT.msg.2=Missing '@concurrency' Javadoc comment for method with "synchronized" block\: {0}.
OWASP2019.API9.SRRP=Specify 'RUNTIME' as the retention policy when using the '@Documented' annotation.
OWASP2019.API9.SRRP.msg.1=The '@Documented' annotation is used here without specifying 'RUNTIME' as the retention policy.
OWASP2019.API9.THROW=Use the '@throws' or '@exception' Javadoc tag in methods
OWASP2019.API9.THROW.CHECK_PACKAGE-label=Check "package-private" methods
OWASP2019.API9.THROW.CHECK_PRIVATE-label=Check "private" methods
OWASP2019.API9.THROW.CHECK_PROTECTED-label=Check "protected" methods
OWASP2019.API9.THROW.CHECK_PUBLIC-label=Check "public" methods
OWASP2019.API9.THROW.INHERITED_TAG-label=Use these tags for overriding and implementing methods\:
OWASP2019.API9.THROW.msg.1=Method ''{0}'' is missing ''@throws {1}'' in Javadoc comment.
OWASP2019.API9.TSMJT=Provide a Javadoc comment for 'toString()' methods.
OWASP2019.API9.TSMJT.msg.1=Missing Javadoc for 'toString()'
OWASP2019.API9.TSMJT.msg.2=Missing Javadoc header for 'toString()'
OWASP2019.API9.TSOL=Ensure that certain Javadoc tags only span one line.
OWASP2019.API9.TSOL.TAG_LIST-label=Tags which should not span multiple lines
OWASP2019.API9.TSOL.msg.1=This ''{0}'' tag spans multiple lines. Ensure that this is correct.
OWASP2019.API9.UPJT=Include an appropriate Javadoc tag in the Javadoc for JUnit test methods
OWASP2019.API9.UPJT.CASE_SENSITIVE-label=Make tag checking case sensitive.
OWASP2019.API9.UPJT.REQUIRED_TAGS-label=Include one of the following tags in the Javadoc for each JUnit test method\:
OWASP2019.API9.UPJT.REQUIRE_TOKEN-label=Javadoc tag must be followed by a token.
OWASP2019.API9.UPJT.msg.1=Test method ''{0}'' does not contain any of the required tags in its Javadoc.
OWASP2019.API9.UPJT.msg.2=Test method ''{0}'' does not have any Javadoc.
OWASP2019.API9.UPJT.msg.3=The Javadoc for the test method ''{0}'' has one of the required Javadoc tags, but it is not followed by a token.
OWASP2019.API9.VMCR=Avoid using the '@return' Javadoc tag on "void" methods.
OWASP2019.API9.VMCR.msg.1="void" method has ''@return'' tag\: ''{0} ()''.
OWASP2021=OWASP Top 10 Most Critical Web Application Security Risks (2021)
OWASP2021.A2=A2-Cryptographic Failures
OWASP2021.A2.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP2021.A2.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP2021.A2.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP2021.A2.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP2021.A2.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP2021.A2.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP2021.A2.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP2021.A2.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
OWASP2021.A2.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
OWASP2021.A2.CONSEN=Do not log confidential or sensitive information
OWASP2021.A2.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP2021.A2.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP2021.A2.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
OWASP2021.A2.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
OWASP2021.A2.ENPP=Ensure arguments passed to certain methods come from predefined methods list.
OWASP2021.A2.ENPP.PAIRS_TABLE_HEADER-label=Methods and arguments configuration
OWASP2021.A2.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN1-label=Method to be checked (&lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,...)
OWASP2021.A2.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN2-label=Argument Index to Check (''0''-based)
OWASP2021.A2.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN3-label=Allowed method name (in Regular Expressions)
OWASP2021.A2.ENPP.msg.1=Argument number {0} passed to method ''{1}'' is not an allowed method call.
OWASP2021.A2.HCCK=Avoid using hard-coded cryptographic keys
OWASP2021.A2.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
OWASP2021.A2.HCCK.msg.1=Hard-coded cryptographic key here.
OWASP2021.A2.HCNA=Do not hard-code IP addresses and port numbers.
OWASP2021.A2.HCNA.IP-label=Do not hard-code IP addresses
OWASP2021.A2.HCNA.PORT-label=Do not hard-code port numbers
OWASP2021.A2.HCNA.msg.1=Hard-coded IP address ''{0}''.
OWASP2021.A2.HCNA.msg.2=Hard-coded port number ''{0}''.
OWASP2021.A2.HV=Ensure the HostnameVerifier.verify() method validates the certificate
OWASP2021.A2.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
OWASP2021.A2.ICA=Avoid using insecure algorithms for cryptography.
OWASP2021.A2.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP2021.A2.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP2021.A2.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP2021.A2.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP2021.A2.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP2021.A2.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP2021.A2.IVR=Avoid non-random "byte[]" when using IvParameterSpec.
OWASP2021.A2.IVR.msg.1=IvParameterSpec instantiated with non-random value ''{0}''.
OWASP2021.A2.MCMDU=MessageDigest objects must process the data with the 'update' method
OWASP2021.A2.MCMDU.msg.1=The 'update' method is not called on the ''{0}'' variable after the message digest object is obtained
OWASP2021.A2.MDSALT=Use hash functions with a salt
OWASP2021.A2.MDSALT.msg.1=A salt is not added to the digest
OWASP2021.A2.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
OWASP2021.A2.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
OWASP2021.A2.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
OWASP2021.A2.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
OWASP2021.A2.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
OWASP2021.A2.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
OWASP2021.A2.SIKG=Initialize KeyGenerator instances 
OWASP2021.A2.SIKG.msg.1=The ''{0}'' object of the KeyGenerator class is created but not initialized
OWASP2021.A2.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP2021.A2.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP2021.A2.USC=Use the SSL-enabled version of classes when possible.
OWASP2021.A2.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP2021.A2.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP2021.A2.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP2021.A2.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP2021.A2.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP2021.A2.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP2021.A2.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP2021.A2.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP2021.A2.VSI=Properly validate server identity
OWASP2021.A2.VSI.msg.1=SMTP SSL does not check server identity.
OWASP2021.A2.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
OWASP2021.A3=A3-Injection
OWASP2021.A3.CDBV=Canonicalize data before validation.
OWASP2021.A3.CDBV.CANON_METHS-description=Canonicalization method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2021.A3.CDBV.CANON_METHS-label=Canonicalization method names (in regular expressions)
OWASP2021.A3.CDBV.CHECK_TYPES-description=Only check calls with the following argument types [regular expressions for fully qualified class name]
OWASP2021.A3.CDBV.CHECK_TYPES-label=Only check calls with the following argument types
OWASP2021.A3.CDBV.VALID_CLASSES-description=Only check calls within the following classes [regular expressions for fully qualified class name]
OWASP2021.A3.CDBV.VALID_CLASSES-label=Only check calls within the following classes
OWASP2021.A3.CDBV.VALID_METHS-description=Validation method names (in regular expressions) [qualified name of declaring type\#method name]
OWASP2021.A3.CDBV.VALID_METHS-label=Validation method names (in regular expressions)
OWASP2021.A3.CDBV.msg.1=The data in ''{0}'' may not have been canonicalized before being validated.
OWASP2021.A3.CDBV.msg.2=The return value of this call to ''{0}'' may not have been canonicalized before being validated.
OWASP2021.A3.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
OWASP2021.A3.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
OWASP2021.A4=A4-Insecure Design
OWASP2021.A4.DNSL=Avoid DNS lookups for decision making
OWASP2021.A4.DNSL.msg.1=DNS lookup checked here.
OWASP2021.A4.ONS=Ensure method arguments are serializable
OWASP2021.A4.ONS.CHECK_INTERFACES-label=Check implementations of interface method arguments (slow)
OWASP2021.A4.ONS.IGNORE_PARAM_COLLECTION-label=Ignore Collections or Maps with Serializable type arguments
OWASP2021.A4.ONS.IGNORE_TYPE_LIST-label=Ignore method arguments of the following types (specify as regular expression)\:
OWASP2021.A4.ONS.SERIAL_LIST-label=List of methods to be checked\: 
OWASP2021.A4.ONS.SERIAL_LIST.PB__API__ONS__SERIAL_LIST__COLUMN1-label=Type
OWASP2021.A4.ONS.SERIAL_LIST.PB__API__ONS__SERIAL_LIST__COLUMN2-label=Method
OWASP2021.A4.ONS.msg.1=This object of type ''{0}'' may not be serializable.
OWASP2021.A4.ONS.msg.2=This object of type ''{0}'' may not be completely serializable.
OWASP2021.A4.PBFA=Ensure sufficient protection against multiple failed authentication attempts
OWASP2021.A4.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
OWASP2021.A4.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP2021.A4.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP2021.A4.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
OWASP2021.A4.PLC=Avoid storing sensitive data in plaintext in a cookie
OWASP2021.A4.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
OWASP2021.A4.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
OWASP2021.A4.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
OWASP2021.A4.PLC.msg.1=Do not store important to safety data in cookie.
OWASP2021.A4.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
OWASP2021.A4.SNSO=Do not store non-serializable objects as HttpSession attributes
OWASP2021.A4.SNSO.CHECK_ABSTRACT-label=Check abstract classes
OWASP2021.A4.SNSO.CHECK_COLLECTION-label=Check Collections
OWASP2021.A4.SNSO.CHECK_INTERFACE-label=Check interfaces
OWASP2021.A4.SNSO.CHECK_MAP-label=Check Maps
OWASP2021.A4.SNSO.IGNORE_NULL-label=Ignore "null" values
OWASP2021.A4.SNSO.msg.1=Argument ''{0}'' to method "setAttribute" is non-serializable.
OWASP2021.A4.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP2021.A4.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP2021.A4.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP2021.A5=A5-Security Misconfiguration
OWASP2021.A5.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
OWASP2021.A5.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
OWASP2021.A5.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
OWASP2021.A5.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
OWASP2021.A5.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
OWASP2021.A5.AECB.CHECK_CATCH-label=Check "catch" block.
OWASP2021.A5.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
OWASP2021.A5.AECB.CHECK_FINALLY-label=Check "finally" block.
OWASP2021.A5.AECB.CHECK_TRY-label=Check "try" block.
OWASP2021.A5.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
OWASP2021.A5.AECB.msg.1="try" block has an empty body.
OWASP2021.A5.AECB.msg.2="catch" block has an empty body.
OWASP2021.A5.AECB.msg.3="finally" block has an empty body.
OWASP2021.A5.DCSRFJAVA=Do not disable CSRF protection
OWASP2021.A5.DCSRFJAVA.msg.1=CSRF protection is disabled.
OWASP2021.A5.DMDS=Avoid using the DriverManagerDataSource class in production code
OWASP2021.A5.DMDS.msg.1=The DriverManagerDataSource class is not a pooled data source and should not be used in production code.
OWASP2021.A5.DXXE=Disable XML external entity injection.
OWASP2021.A5.DXXE.msg.1=XXE injection has not been disabled.
OWASP2021.A5.DXXE.msg.2=XXE injection has not been disabled. Ensure your parser version allows you to configure the required options.
OWASP2021.A5.EWSSEC=Avoid debug information from Spring Security framework to logs
OWASP2021.A5.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
OWASP2021.A5.JXCORS=Restrict cross-origin resource sharing to secure origins
OWASP2021.A5.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
OWASP2021.A5.NCE=Do not catch exception types which are too general or are unchecked exceptions.
OWASP2021.A5.NCE.GENERAL-label=Check for general exception types.
OWASP2021.A5.NCE.IGNORE_EXCEPTIONS-label=Ignore exceptions with names matching the following regular expression(s)\:
OWASP2021.A5.NCE.NUM_CHILDREN-label=Check for parent exceptions caught where number of child exceptions thrown is less than
OWASP2021.A5.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN1-label=
OWASP2021.A5.NCE.NUM_CHILDREN.CODSTA__EPC__NCE__NUM_CHILDREN__COLUMN2-label=
OWASP2021.A5.NCE.UNCHECKED-label=Check for unchecked exception types.
OWASP2021.A5.NCE.msg.1="catch" statement directly catches the general exception type ''{0}''.
OWASP2021.A5.NCE.msg.2="catch" statement directly catches the unchecked exception type ''{0}''.
OWASP2021.A5.NCE.msg.3="catch" statement catches general parent exception type\: ''{0}''.
OWASP2021.A5.NCNPE=Do not catch 'NullPointerException'
OWASP2021.A5.NCNPE.msg.1=Avoid catching 'NullPointerException'
OWASP2021.A5.NTERR=Do not throw exception types which are too general or are unchecked exceptions.
OWASP2021.A5.NTERR.CHECKED_EXCEPTS-label=Exception types which should not be thrown (fully qualified names)
OWASP2021.A5.NTERR.msg.1=Avoid throwing ''{0}''.
OWASP2021.A5.NTX=Avoid declaring methods to throw general or unchecked Exception types
OWASP2021.A5.NTX.CHECKED_EXCEPTS-label=Exception types which should not be declared to be thrown (fully qualified names)
OWASP2021.A5.NTX.IGNORE_OVERRIDING-label=Ignore overriding methods.
OWASP2021.A5.NTX.IGNORE_PROPAGATED-label=Ignore methods which propagate exception types of called methods.
OWASP2021.A5.NTX.SKIP_JUNIT-label=Skip JUnit classes.
OWASP2021.A5.NTX.SUBCLASSES-label=Check for exceptions which are subclasses of 'Error' and 'RuntimeException'.
OWASP2021.A5.NTX.msg.1=Throwing explicit ''{0}'' object in ''{1}()''.
OWASP2021.A5.SIO=Avoid calling print methods of 'System.err' or 'System.out'
OWASP2021.A5.SIO.METHOD_SKIP_LIST-label=Exclude methods
OWASP2021.A5.SIO.SCANNED_CLASS_TABLE-label=Include classes
OWASP2021.A5.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
OWASP2021.A5.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
OWASP2021.A5.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
OWASP2021.A7=A7-Identification and Authentication Failures
OWASP2021.A7.HGRSI=Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class
OWASP2021.A7.HGRSI.msg.1=The 'getRequestedSessionId' method may return untrusted data
OWASP2021.A7.HTTPRHA=Do not rely on IP addresses obtained from HTTP request headers for authentication
OWASP2021.A7.HTTPRHA.msg.1=The IP address retrieved from the HTTP request header is used for authentication
OWASP2021.A7.HTTPRHA.msg.2=The IP address retrieved from the header using the 'getRemoteAddr()' method is used for authentication
OWASP2021.A7.ISL=Always call 'HttpSession.invalidate()' before 'LoginContext.login()'
OWASP2021.A7.ISL.msg.1=Login without session invalidation.
OWASP2021.A7.RUIM=Ensure proper session expiration
OWASP2021.A7.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
OWASP2021.A7.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
OWASP2021.A8=A8-Software and Data Integrity Failures
OWASP2021.A8.AUXD=Avoid parsing untrusted data with XMLDecoder
OWASP2021.A8.AUXD.msg.1=The XMLDecoder class is used.
OWASP2021.A8.DUID=Create a 'serialVersionUID' for all 'Serializable' classes.
OWASP2021.A8.DUID.CHECK_PRIVATE-label=Check if serialVersionUID is "private"
OWASP2021.A8.DUID.msg.1=No 'serialVersionUID' declared in class ''{0}''.
OWASP2021.A8.DUID.msg.2='serialVersionUID' must be declared "static final long", otherwise it will not be used.
OWASP2021.A8.DUID.msg.3='serialVersionUID' should be declared "private".
OWASP2021.A8.MASP=Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes
OWASP2021.A8.MASP.msg.1=Method is not "protected"\: ''{0}''
OWASP2021.A8.OROM=Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes.
OWASP2021.A8.OROM.CHECK_FOR_READ-label=Check that the 'readObject()' method is implemented in all serializable classes.
OWASP2021.A8.OROM.CHECK_FOR_WRITE-label=Check that the 'writeObject()' method is implemented in all serializable classes.
OWASP2021.A8.OROM.IGNORE_TYPES-label=Ignore types extending or implementing the following types (Specify fully qualified names)\:
OWASP2021.A8.OROM.MUST_BE_FINAL-label=Make sure the 'readObject()' method is 'final'.
OWASP2021.A8.OROM.msg.1=Serializable class ''{0}'' does not implement 'readObject()'.
OWASP2021.A8.OROM.msg.2=Serializable class ''{0}'' implements 'readObject()', but this method is not 'final'.
OWASP2021.A8.OROM.msg.3=Serializable class ''{0}'' does not implement 'writeObject()'.
OWASP2021.A8.PBRTE=Always specify absolute paths to execute commands
OWASP2021.A8.PBRTE.msg.1=The specified command is not an absolute path with separators
OWASP2021.A8.RRSC=Define a "readResolve" method for all instances of Serializable types.
OWASP2021.A8.RRSC.CHECK_PACKAGE_PRIVATE-label=a "package-private" constructor
OWASP2021.A8.RRSC.CHECK_PRIVATE-label=a "private" constructor
OWASP2021.A8.RRSC.CHECK_PROTECTED-label=a "protected" constructor
OWASP2021.A8.RRSC.CHECK_PUBLIC-label=a "public" constructor
OWASP2021.A8.RRSC.group.0-label=Check classes with\:
OWASP2021.A8.RRSC.msg.1=The class ''{0}'' implements ''Serializable'' but does not define a "readResolve()" method.
OWASP2021.A8.RRSC.msg.2=The "readResolve()" method of the class ''{0}'' may have a return value other than the Serializable instance.
OWASP2021.A8.RRSC.msg.3=The "readResolve()" method of the class ''{0}'' does not have the correct signature.
OWASP2021.A8.RWAF=Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method
OWASP2021.A8.RWAF.CHECK_READ-label=Check 'readObject' methods
OWASP2021.A8.RWAF.CHECK_WRITE-label=Check 'writeObject' methods
OWASP2021.A8.RWAF.MAX_LEVEL-label=Maximum level of checking allowed
OWASP2021.A8.RWAF.msg.1=The ''{0}'' field is not read by the ''readObject()'' method.
OWASP2021.A8.RWAF.msg.2=The ''{0}'' field is not written out by the ''writeObject()'' method.
OWASP2021.A8.SC=Disable LDAP deserialization
OWASP2021.A8.SC.msg.1=The SearchControls object allows deserialization
OWASP2021.A8.SCBNP=Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents
OWASP2021.A8.SCBNP.msg.1=Class has a non-serializable parent but implements Serializable without specifying readObject or WriteObject methods.
OWASP2021.A8.SCBNP.msg.2=Class has a non-serializable parent but implements Serializable without specifying readObject method.
OWASP2021.A8.SCBNP.msg.3=Class has a non-serializable parent but implements Serializable without specifying WriteObject method.
OWASP2021.A8.SROS=Do not declare the 'readObject()' method as "synchronized"
OWASP2021.A8.SROS.msg.1=Method readObject()  is synchronized.
OWASP2021.A8.VJFS=Always verify JarFile signatures
OWASP2021.A8.VJFS.msg.1=Consider using a JarFile constructor with verification enabled.
OWASP2021.A8.VOBD=Validate objects before deserialization
OWASP2021.A8.VOBD.msg.1=The object read from the ObjectInputStream is not validated before deserialization
OWASP2021.A9=A9-Security Logging and Monitoring Failures
OWASP2021.A9.ENFL=Ensure all sensitive method invocations are logged
OWASP2021.A9.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP2021.A9.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP2021.A9.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
OWASP2021.A9.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
OWASP2021.A9.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
OWASP2021.A9.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
OWASP2021.A9.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
OWASP2021.A9.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
OWASP2021.A9.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
OWASP2021.A9.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
OWASP2021.A9.ENFL.tab.LOG_TAG-label=Loggers
OWASP2021.A9.ENFL.tab.POST_LOG_TAG-label=Next statement
OWASP2021.A9.ENFL.tab.PRE_LOG_TAG-label=Previous statement
OWASP2021.A9.LGE=Ensure all exceptions are either logged with a standard logger or rethrown
OWASP2021.A9.LGE.CHECK_EXCEPT_FULL_PASSED-label=Check if the exception passed to the logging method is complete
OWASP2021.A9.LGE.CHECK_EXCEPT_LOGGED-label=Check if the exception is passed into the logging method call
OWASP2021.A9.LGE.CHECK_EXCEPT_THROW-label=Check if the caught exception is passed to a new exception or rethrown
OWASP2021.A9.LGE.FLAG_LEVEL-label=Catch clause should contain\:
OWASP2021.A9.LGE.FLAG_LEVEL.0-label=Logging method.
OWASP2021.A9.LGE.FLAG_LEVEL.1-label=Logging method or "throw" exception statement.
OWASP2021.A9.LGE.FLAG_LEVEL.2-label=Logging method, comment, or "throw" exception statement.
OWASP2021.A9.LGE.IGNORE_LIST-label=Ignore exception variables matching the following regular expression(s)\:
OWASP2021.A9.LGE.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP2021.A9.LGE.LOG_METHOD_EXPRESSION-label=Logging method name in regular expression
OWASP2021.A9.LGE.msg.1=The exception is not logged in the "catch" clause.
OWASP2021.A9.LGE.msg.2=The exception is neither logged nor rethrown in the "catch" clause.
OWASP2021.A9.LGE.msg.3=The exception is neither logged nor rethrown in the "catch" clause. Add a comment to the clause if this is expected.
OWASP2021.A9.LGE.msg.4=The ''{0}'' exception is not passed to the logging method called in the "catch" clause.
OWASP2021.A9.LGE.msg.5=The information passed from the ''{0}'' exception to the logging method may be incomplete.
OWASP2021.A9.LGE.msg.6=The ''{0}'' exception is not rethrown in the "catch" block or passed to the new exception as an argument.
OWASP2021.A9.LGE.tab.IGNORE_LIST_TAB-label=Ignore List
OWASP2021.A9.LGE.tab.LOGGERS_TAB-label=Loggers
OWASP_ASVS_403=OWASP Application Security Verification Standard 4.0.3
OWASP_ASVS_403.V10_1_1=Verify that a code analysis tool is in use that can detect potentially malicious code, such as time functions, unsafe file operations and network connections.
OWASP_ASVS_403.V10_1_1.DPAM=Declare package-private methods as inaccessible as possible
OWASP_ASVS_403.V10_1_1.DPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
OWASP_ASVS_403.V10_1_1.DPAM.CHECK_LOCAL-label=Check methods in local classes
OWASP_ASVS_403.V10_1_1.DPAM.msg.1=Method ''{0}()'' should be declared {1}.
OWASP_ASVS_403.V10_1_1.DPAM.msg.2=Constructor ''{0}()'' should be declared {1}.
OWASP_ASVS_403.V10_1_1.DPPM=Declare "public/protected" methods as inaccessible as possible
OWASP_ASVS_403.V10_1_1.DPPM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
OWASP_ASVS_403.V10_1_1.DPPM.CHECK_LOCAL-label=Check methods in local classes
OWASP_ASVS_403.V10_1_1.DPPM.IGNORE_OVERLOADED-label=Ignore "overloaded" methods
OWASP_ASVS_403.V10_1_1.DPPM.IGNORE_PROTECTED_PP-label=Ignore "protected" methods which can be made package-private
OWASP_ASVS_403.V10_1_1.DPPM.msg.1=Method ''{0}()'' should be declared {1}.
OWASP_ASVS_403.V10_1_1.DPPM.msg.2=Constructor ''{0}()'' should be declared {1}.
OWASP_ASVS_403.V10_1_1.SPAM=Declare a package-private method "final" if it is not overridden
OWASP_ASVS_403.V10_1_1.SPAM.CHECK_ABSTRACT-label=Check methods in abstract classes
OWASP_ASVS_403.V10_1_1.SPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
OWASP_ASVS_403.V10_1_1.SPAM.CHECK_LOCAL-label=Check methods in local classes
OWASP_ASVS_403.V10_1_1.SPAM.CHECK_STATIC_METHOD-label=Check static methods
OWASP_ASVS_403.V10_1_1.SPAM.CHECK_UNUSED-label=Check unused methods
OWASP_ASVS_403.V10_1_1.SPAM.msg.1=Method ''{0}()'' should be declared "final".
OWASP_ASVS_403.V10_2_1=Verify that the application source code and third party libraries do not contain unauthorized phone home or data collection capabilities. Where such functionality exists, obtain the user's permission for it to operate before collecting any data.
OWASP_ASVS_403.V10_2_1.CONSEN=Do not log confidential or sensitive information
OWASP_ASVS_403.V10_2_1.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP_ASVS_403.V10_2_1.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP_ASVS_403.V10_2_1.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
OWASP_ASVS_403.V10_2_1.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
OWASP_ASVS_403.V10_2_4=Verify that the application source code and third party libraries do not contain time bombs by searching for date and time related functions.
OWASP_ASVS_403.V10_2_4.RDM=Inspect 'Random' objects or 'Math.random()' methods that could indicate areas where malicious code has been placed.
OWASP_ASVS_403.V10_2_4.RDM.msg.1=Inspect usage of 'Random' object or method that might lead to unpredictable behavior
OWASP_ASVS_403.V10_2_5=Verify that the application source code and third party libraries do not contain malicious code, such as salami attacks, logic bypasses, or logic bombs.
OWASP_ASVS_403.V10_2_5.RDM=Inspect 'Random' objects or 'Math.random()' methods that could indicate areas where malicious code has been placed.
OWASP_ASVS_403.V10_2_5.RDM.msg.1=Inspect usage of 'Random' object or method that might lead to unpredictable behavior
OWASP_ASVS_403.V10_3_3=Verify that the application has protection from subdomain takeovers if the application relies upon DNS entries or DNS subdomains, such as expired domain names, out of date DNS pointers or CNAMEs, expired projects at public source code repos, or transient cloud APIs, serverless functions, or storage buckets (*autogen-bucket-id*.cloud.example.com) or similar. Protections can include ensuring that DNS names used by applications are regularly checked for expiry or change.
OWASP_ASVS_403.V10_3_3.DNSL=Avoid DNS lookups for decision making
OWASP_ASVS_403.V10_3_3.DNSL.msg.1=DNS lookup checked here.
OWASP_ASVS_403.V11_1_1=Verify that the application will only process business logic flows for the same user in sequential step order and without skipping steps.
OWASP_ASVS_403.V11_1_1.PERMIT=Avoid EJB 3 methods without security annotations
OWASP_ASVS_403.V11_1_1.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
OWASP_ASVS_403.V11_1_2=Verify that the application will only process business logic flows with all steps being processed in realistic human time, i.e. transactions are not submitted too quickly.
OWASP_ASVS_403.V11_1_2.PBFA=Ensure sufficient protection against multiple failed authentication attempts
OWASP_ASVS_403.V11_1_2.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
OWASP_ASVS_403.V11_1_2.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V11_1_2.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V11_1_2.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V11_1_3=Verify the application has appropriate limits for specific business actions or transactions which are correctly enforced on a per user basis.
OWASP_ASVS_403.V11_1_3.ISTART=Do not call the 'start()' method directly on Thread class instances 
OWASP_ASVS_403.V11_1_3.ISTART.CHECK_ONLY_IN_LOOPS-label=Ignore method calls outside of loops
OWASP_ASVS_403.V11_1_3.ISTART.msg.1=A call to the Thread.start() method.
OWASP_ASVS_403.V11_1_4=Verify that the application has anti-automation controls to protect against excessive calls such as mass data exfiltration, business logic requests, file uploads or denial of service attacks.
OWASP_ASVS_403.V11_1_4.ISTART=Do not call the 'start()' method directly on Thread class instances 
OWASP_ASVS_403.V11_1_4.ISTART.CHECK_ONLY_IN_LOOPS-label=Ignore method calls outside of loops
OWASP_ASVS_403.V11_1_4.ISTART.msg.1=A call to the Thread.start() method.
OWASP_ASVS_403.V11_1_5=Verify the application has business logic limits or validation to protect against likely business risks or threats, identified using threat modeling or similar methodologies.
OWASP_ASVS_403.V11_1_5.PERMIT=Avoid EJB 3 methods without security annotations
OWASP_ASVS_403.V11_1_5.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
OWASP_ASVS_403.V11_1_6=Verify that the application does not suffer from "Time Of Check to Time Of Use" (TOCTOU) issues or other race conditions for sensitive operations.
OWASP_ASVS_403.V11_1_6.TOCTOU=Avoid Time-of-check Time-of-use (TOCTOU) Race Condition
OWASP_ASVS_403.V11_1_6.TOCTOU.BLOCKING_TABLE_HEADER-label=Blocking instructions
OWASP_ASVS_403.V11_1_6.TOCTOU.BLOCKING_TABLE_HEADER.PB__CUB__TOCTOU__BLOCKING_TABLE_HEADER__COLUMN1-label=Blocking instruction
OWASP_ASVS_403.V11_1_6.TOCTOU.MAX_INSTRUCTIONS_COUNT-label=Maximum number of method calls between the pairs of methods
OWASP_ASVS_403.V11_1_6.TOCTOU.PAIRS_TABLE_HEADER-label=Pairs of methods
OWASP_ASVS_403.V11_1_6.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN1-label=First instruction
OWASP_ASVS_403.V11_1_6.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN2-label=Second instruction
OWASP_ASVS_403.V11_1_6.TOCTOU.msg.1=This call is not preceeded by\: ''{0}'' within {1} method calls.
OWASP_ASVS_403.V11_1_6.TOCTOU.msg.2=This call is not preceeded by\: ''{0}'' before calling blocking instruction\: ''{1}''.
OWASP_ASVS_403.V11_1_6.TOCTOU.msg.3=This call is not preceeded by\: ''{0}'' within block scope.
OWASP_ASVS_403.V11_1_7=Verify that the application monitors for unusual events or activity from a business logic perspective. For example, attempts to perform actions out of order or actions which a normal user would never attempt. ([C9](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V11_1_7.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
OWASP_ASVS_403.V11_1_7.AECB.CHECK_CATCH-label=Check "catch" block.
OWASP_ASVS_403.V11_1_7.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
OWASP_ASVS_403.V11_1_7.AECB.CHECK_FINALLY-label=Check "finally" block.
OWASP_ASVS_403.V11_1_7.AECB.CHECK_TRY-label=Check "try" block.
OWASP_ASVS_403.V11_1_7.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
OWASP_ASVS_403.V11_1_7.AECB.msg.1="try" block has an empty body.
OWASP_ASVS_403.V11_1_7.AECB.msg.2="catch" block has an empty body.
OWASP_ASVS_403.V11_1_7.AECB.msg.3="finally" block has an empty body.
OWASP_ASVS_403.V11_1_7.CRRV=Check the return value of methods which read or skip input
OWASP_ASVS_403.V11_1_7.CRRV.CHECKED_METHOD_LIST-description=Methods to be checked\: (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
OWASP_ASVS_403.V11_1_7.CRRV.CHECKED_METHOD_LIST-label=Methods to be checked\:
OWASP_ASVS_403.V11_1_7.CRRV.msg.1=The return value of this call to ''{0}()'' is not checked.
OWASP_ASVS_403.V11_1_8=Verify that the application has configurable alerting when automated attacks or unusual activity is detected.
OWASP_ASVS_403.V11_1_8.LGE=Ensure all exceptions are either logged with a standard logger or rethrown
OWASP_ASVS_403.V11_1_8.LGE.CHECK_EXCEPT_FULL_PASSED-label=Check if the exception passed to the logging method is complete
OWASP_ASVS_403.V11_1_8.LGE.CHECK_EXCEPT_LOGGED-label=Check if the exception is passed into the logging method call
OWASP_ASVS_403.V11_1_8.LGE.CHECK_EXCEPT_THROW-label=Check if the caught exception is passed to a new exception or rethrown
OWASP_ASVS_403.V11_1_8.LGE.FLAG_LEVEL-label=Catch clause should contain\:
OWASP_ASVS_403.V11_1_8.LGE.FLAG_LEVEL.0-label=Logging method.
OWASP_ASVS_403.V11_1_8.LGE.FLAG_LEVEL.1-label=Logging method or "throw" exception statement.
OWASP_ASVS_403.V11_1_8.LGE.FLAG_LEVEL.2-label=Logging method, comment, or "throw" exception statement.
OWASP_ASVS_403.V11_1_8.LGE.IGNORE_LIST-label=Ignore exception variables matching the following regular expression(s)\:
OWASP_ASVS_403.V11_1_8.LGE.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP_ASVS_403.V11_1_8.LGE.LOG_METHOD_EXPRESSION-label=Logging method name in regular expression
OWASP_ASVS_403.V11_1_8.LGE.msg.1=The exception is not logged in the "catch" clause.
OWASP_ASVS_403.V11_1_8.LGE.msg.2=The exception is neither logged nor rethrown in the "catch" clause.
OWASP_ASVS_403.V11_1_8.LGE.msg.3=The exception is neither logged nor rethrown in the "catch" clause. Add a comment to the clause if this is expected.
OWASP_ASVS_403.V11_1_8.LGE.msg.4=The ''{0}'' exception is not passed to the logging method called in the "catch" clause.
OWASP_ASVS_403.V11_1_8.LGE.msg.5=The information passed from the ''{0}'' exception to the logging method may be incomplete.
OWASP_ASVS_403.V11_1_8.LGE.msg.6=The ''{0}'' exception is not rethrown in the "catch" block or passed to the new exception as an argument.
OWASP_ASVS_403.V11_1_8.LGE.tab.IGNORE_LIST_TAB-label=Ignore List
OWASP_ASVS_403.V11_1_8.LGE.tab.LOGGERS_TAB-label=Loggers
OWASP_ASVS_403.V12_1_1=Verify that the application will not accept large files that could fill up storage or cause a denial of service.
OWASP_ASVS_403.V12_1_1.DMDS=Avoid using the DriverManagerDataSource class in production code
OWASP_ASVS_403.V12_1_1.DMDS.msg.1=The DriverManagerDataSource class is not a pooled data source and should not be used in production code.
OWASP_ASVS_403.V12_1_1.ISTART=Do not call the 'start()' method directly on Thread class instances 
OWASP_ASVS_403.V12_1_1.ISTART.CHECK_ONLY_IN_LOOPS-label=Ignore method calls outside of loops
OWASP_ASVS_403.V12_1_1.ISTART.msg.1=A call to the Thread.start() method.
OWASP_ASVS_403.V12_1_3=Verify that a file size quota and maximum number of files per user is enforced to ensure that a single user cannot fill up the storage with too many files, or excessively large files.
OWASP_ASVS_403.V12_1_3.ISTART=Do not call the 'start()' method directly on Thread class instances 
OWASP_ASVS_403.V12_1_3.ISTART.CHECK_ONLY_IN_LOOPS-label=Ignore method calls outside of loops
OWASP_ASVS_403.V12_1_3.ISTART.msg.1=A call to the Thread.start() method.
OWASP_ASVS_403.V12_3_2=Verify that user-submitted filename metadata is validated or ignored to prevent the disclosure, creation, updating or removal of local files (LFI).
OWASP_ASVS_403.V12_3_2.APIBS=Inspect usage of standard API calls that bypass security
OWASP_ASVS_403.V12_3_2.APIBS.CHECKED_METHODS-label=Check the following methods\:
OWASP_ASVS_403.V12_3_2.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
OWASP_ASVS_403.V12_3_2.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
OWASP_ASVS_403.V12_3_2.APIBS.msg.1=API call ''{0}'' has potential to bypass security.
OWASP_ASVS_403.V13_1_1=Verify that all application components use the same encodings and parsers to avoid parsing attacks that exploit different URI or file parsing behavior that could be used in SSRF and RFI attacks.
OWASP_ASVS_403.V13_1_1.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
OWASP_ASVS_403.V13_1_1.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
OWASP_ASVS_403.V13_1_1.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
OWASP_ASVS_403.V13_1_1.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
OWASP_ASVS_403.V13_1_1.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V13_1_1.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V13_1_1.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V13_1_4=Verify that authorization decisions are made at both the URI, enforced by programmatic or declarative security at the controller or router, and at the resource level, enforced by model-based permissions.
OWASP_ASVS_403.V13_1_4.IDP=Avoid setting the write or execute file permissions to unintended users
OWASP_ASVS_403.V13_1_4.IDP.msg.1=The ''{0}'' method is set to grant the {1} permissions to everybody.
OWASP_ASVS_403.V13_1_4.PERMIT=Avoid EJB 3 methods without security annotations
OWASP_ASVS_403.V13_1_4.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
OWASP_ASVS_403.V13_1_4.SCHTTP=Mark cookies as HttpOnly
OWASP_ASVS_403.V13_1_4.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
OWASP_ASVS_403.V13_1_4.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
OWASP_ASVS_403.V13_2_3=Verify that RESTful web services that utilize cookies are protected from Cross-Site Request Forgery via the use of at least one or more of the following\: double submit cookie pattern, CSRF nonces, or Origin request header checks.
OWASP_ASVS_403.V13_2_3.DCSRFJAVA=Do not disable CSRF protection
OWASP_ASVS_403.V13_2_3.DCSRFJAVA.msg.1=CSRF protection is disabled.
OWASP_ASVS_403.V13_2_3.REQMAP=Ensure that methods annotated with @RequestMapping specify the HTTP request method they call
OWASP_ASVS_403.V13_2_3.REQMAP.msg.1=The ''{0}'' method annotated with @RequestMapping does not explicitly specify the HTTP request method it calls
OWASP_ASVS_403.V13_2_3.REQMAP.msg.2=The ''{0}'' method annotated with @RequestMapping calls more than one HTTP request method.
OWASP_ASVS_403.V13_2_3.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP_ASVS_403.V13_2_3.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP_ASVS_403.V13_2_3.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP_ASVS_403.V13_2_6=Verify that the message headers and payload are trustworthy and not modified in transit. Requiring strong encryption for transport (TLS only) may be sufficient in many cases as it provides both confidentiality and integrity protection. Per-message digital signatures can provide additional assurance on top of the transport protections for high-security applications but bring with them additional complexity and risks to weigh against the benefits.
OWASP_ASVS_403.V13_2_6.DCSRFJAVA=Do not disable CSRF protection
OWASP_ASVS_403.V13_2_6.DCSRFJAVA.msg.1=CSRF protection is disabled.
OWASP_ASVS_403.V13_2_6.JXCORS=Restrict cross-origin resource sharing to secure origins
OWASP_ASVS_403.V13_2_6.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
OWASP_ASVS_403.V13_2_6.REQMAP=Ensure that methods annotated with @RequestMapping specify the HTTP request method they call
OWASP_ASVS_403.V13_2_6.REQMAP.msg.1=The ''{0}'' method annotated with @RequestMapping does not explicitly specify the HTTP request method it calls
OWASP_ASVS_403.V13_2_6.REQMAP.msg.2=The ''{0}'' method annotated with @RequestMapping calls more than one HTTP request method.
OWASP_ASVS_403.V13_2_6.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP_ASVS_403.V13_2_6.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP_ASVS_403.V13_2_6.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP_ASVS_403.V13_2_6.VJFS=Always verify JarFile signatures
OWASP_ASVS_403.V13_2_6.VJFS.msg.1=Consider using a JarFile constructor with verification enabled.
OWASP_ASVS_403.V13_2_6.WS=Use secure communication with 'wss' (WebSocket Secure) instead of 'ws'.
OWASP_ASVS_403.V13_2_6.WS.msg.1=Consider using 'wss' instead of 'ws'
OWASP_ASVS_403.V13_4_2=Verify that GraphQL or other data layer authorization logic should be implemented at the business logic layer instead of the GraphQL layer.
OWASP_ASVS_403.V13_4_2.IDP=Avoid setting the write or execute file permissions to unintended users
OWASP_ASVS_403.V13_4_2.IDP.msg.1=The ''{0}'' method is set to grant the {1} permissions to everybody.
OWASP_ASVS_403.V13_4_2.PERMIT=Avoid EJB 3 methods without security annotations
OWASP_ASVS_403.V13_4_2.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
OWASP_ASVS_403.V13_4_2.SCHTTP=Mark cookies as HttpOnly
OWASP_ASVS_403.V13_4_2.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
OWASP_ASVS_403.V13_4_2.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
OWASP_ASVS_403.V14_3_2=Verify that web or application server and application framework debug modes are disabled in production to eliminate debug features, developer consoles, and unintended security disclosures.
OWASP_ASVS_403.V14_3_2.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
OWASP_ASVS_403.V14_3_2.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
OWASP_ASVS_403.V14_3_2.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
OWASP_ASVS_403.V14_3_2.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
OWASP_ASVS_403.V14_3_2.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
OWASP_ASVS_403.V14_3_2.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
OWASP_ASVS_403.V14_4_1=Verify that every HTTP response contains a Content-Type header. Also specify a safe character set (e.g., UTF-8, ISO-8859-1) if the content types are text/*, /+xml and application/xml. Content must match with the provided Content-Type header.
OWASP_ASVS_403.V14_4_1.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
OWASP_ASVS_403.V14_4_1.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
OWASP_ASVS_403.V14_4_1.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
OWASP_ASVS_403.V14_4_1.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
OWASP_ASVS_403.V14_4_1.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V14_4_1.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V14_4_1.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V14_4_5=Verify that a Strict-Transport-Security header is included on all responses and for all subdomains, such as Strict-Transport-Security\: max-age\=15724800; includeSubdomains.
OWASP_ASVS_403.V14_4_5.USC=Use the SSL-enabled version of classes when possible.
OWASP_ASVS_403.V14_4_5.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V14_4_5.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V14_4_5.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP_ASVS_403.V14_4_5.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V14_4_5.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V14_4_5.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V14_4_5.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V14_4_5.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP_ASVS_403.V14_4_6=Verify that a suitable Referrer-Policy header is included to avoid exposing sensitive information in the URL through the Referer header to untrusted parties.
OWASP_ASVS_403.V14_4_6.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
OWASP_ASVS_403.V14_4_6.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
OWASP_ASVS_403.V14_4_6.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
OWASP_ASVS_403.V14_4_6.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
OWASP_ASVS_403.V14_4_6.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V14_4_6.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V14_4_6.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V14_5_1=Verify that the application server only accepts the HTTP methods in use by the application/API, including pre-flight OPTIONS, and logs/alerts on any requests that are not valid for the application context.
OWASP_ASVS_403.V14_5_1.DPAM=Declare package-private methods as inaccessible as possible
OWASP_ASVS_403.V14_5_1.DPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
OWASP_ASVS_403.V14_5_1.DPAM.CHECK_LOCAL-label=Check methods in local classes
OWASP_ASVS_403.V14_5_1.DPAM.msg.1=Method ''{0}()'' should be declared {1}.
OWASP_ASVS_403.V14_5_1.DPAM.msg.2=Constructor ''{0}()'' should be declared {1}.
OWASP_ASVS_403.V14_5_1.DPPM=Declare "public/protected" methods as inaccessible as possible
OWASP_ASVS_403.V14_5_1.DPPM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
OWASP_ASVS_403.V14_5_1.DPPM.CHECK_LOCAL-label=Check methods in local classes
OWASP_ASVS_403.V14_5_1.DPPM.IGNORE_OVERLOADED-label=Ignore "overloaded" methods
OWASP_ASVS_403.V14_5_1.DPPM.IGNORE_PROTECTED_PP-label=Ignore "protected" methods which can be made package-private
OWASP_ASVS_403.V14_5_1.DPPM.msg.1=Method ''{0}()'' should be declared {1}.
OWASP_ASVS_403.V14_5_1.DPPM.msg.2=Constructor ''{0}()'' should be declared {1}.
OWASP_ASVS_403.V14_5_1.SPAM=Declare a package-private method "final" if it is not overridden
OWASP_ASVS_403.V14_5_1.SPAM.CHECK_ABSTRACT-label=Check methods in abstract classes
OWASP_ASVS_403.V14_5_1.SPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
OWASP_ASVS_403.V14_5_1.SPAM.CHECK_LOCAL-label=Check methods in local classes
OWASP_ASVS_403.V14_5_1.SPAM.CHECK_STATIC_METHOD-label=Check static methods
OWASP_ASVS_403.V14_5_1.SPAM.CHECK_UNUSED-label=Check unused methods
OWASP_ASVS_403.V14_5_1.SPAM.msg.1=Method ''{0}()'' should be declared "final".
OWASP_ASVS_403.V14_5_2=Verify that the supplied Origin header is not used for authentication or access control decisions, as the Origin header can easily be changed by an attacker.
OWASP_ASVS_403.V14_5_2.JXCORS=Restrict cross-origin resource sharing to secure origins
OWASP_ASVS_403.V14_5_2.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
OWASP_ASVS_403.V14_5_2.WS=Use secure communication with 'wss' (WebSocket Secure) instead of 'ws'.
OWASP_ASVS_403.V14_5_2.WS.msg.1=Consider using 'wss' instead of 'ws'
OWASP_ASVS_403.V14_5_3=Verify that the Cross-Origin Resource Sharing (CORS) Access-Control-Allow-Origin header uses a strict allow list of trusted domains and subdomains to match against and does not support the "null" origin.
OWASP_ASVS_403.V14_5_3.JXCORS=Restrict cross-origin resource sharing to secure origins
OWASP_ASVS_403.V14_5_3.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
OWASP_ASVS_403.V14_5_3.WS=Use secure communication with 'wss' (WebSocket Secure) instead of 'ws'.
OWASP_ASVS_403.V14_5_3.WS.msg.1=Consider using 'wss' instead of 'ws'
OWASP_ASVS_403.V14_5_4=Verify that HTTP headers added by a trusted proxy or SSO devices, such as a bearer token, are authenticated by the application.
OWASP_ASVS_403.V14_5_4.SSM=Ensure that an appropriate security manager is set
OWASP_ASVS_403.V14_5_4.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
OWASP_ASVS_403.V1_11_2=Verify that all high-value business logic flows, including authentication, session management and access control, do not share unsynchronized state.
OWASP_ASVS_403.V1_11_2.DCL=Avoid unsafe implementations of the "double-checked locking" pattern.
OWASP_ASVS_403.V1_11_2.DCL.msg.1=The "double-checked locking" pattern is used; this pattern can cause unexpected problems when compiler optimizations are performed.
OWASP_ASVS_403.V1_11_2.TOCTOU=Avoid Time-of-check Time-of-use (TOCTOU) Race Condition
OWASP_ASVS_403.V1_11_2.TOCTOU.BLOCKING_TABLE_HEADER-label=Blocking instructions
OWASP_ASVS_403.V1_11_2.TOCTOU.BLOCKING_TABLE_HEADER.PB__CUB__TOCTOU__BLOCKING_TABLE_HEADER__COLUMN1-label=Blocking instruction
OWASP_ASVS_403.V1_11_2.TOCTOU.MAX_INSTRUCTIONS_COUNT-label=Maximum number of method calls between the pairs of methods
OWASP_ASVS_403.V1_11_2.TOCTOU.PAIRS_TABLE_HEADER-label=Pairs of methods
OWASP_ASVS_403.V1_11_2.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN1-label=First instruction
OWASP_ASVS_403.V1_11_2.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN2-label=Second instruction
OWASP_ASVS_403.V1_11_2.TOCTOU.msg.1=This call is not preceeded by\: ''{0}'' within {1} method calls.
OWASP_ASVS_403.V1_11_2.TOCTOU.msg.2=This call is not preceeded by\: ''{0}'' before calling blocking instruction\: ''{1}''.
OWASP_ASVS_403.V1_11_2.TOCTOU.msg.3=This call is not preceeded by\: ''{0}'' within block scope.
OWASP_ASVS_403.V1_11_3=Verify that all high-value business logic flows, including authentication, session management and access control are thread safe and resistant to time-of-check and time-of-use race conditions.
OWASP_ASVS_403.V1_11_3.TOCTOU=Avoid Time-of-check Time-of-use (TOCTOU) Race Condition
OWASP_ASVS_403.V1_11_3.TOCTOU.BLOCKING_TABLE_HEADER-label=Blocking instructions
OWASP_ASVS_403.V1_11_3.TOCTOU.BLOCKING_TABLE_HEADER.PB__CUB__TOCTOU__BLOCKING_TABLE_HEADER__COLUMN1-label=Blocking instruction
OWASP_ASVS_403.V1_11_3.TOCTOU.MAX_INSTRUCTIONS_COUNT-label=Maximum number of method calls between the pairs of methods
OWASP_ASVS_403.V1_11_3.TOCTOU.PAIRS_TABLE_HEADER-label=Pairs of methods
OWASP_ASVS_403.V1_11_3.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN1-label=First instruction
OWASP_ASVS_403.V1_11_3.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN2-label=Second instruction
OWASP_ASVS_403.V1_11_3.TOCTOU.msg.1=This call is not preceeded by\: ''{0}'' within {1} method calls.
OWASP_ASVS_403.V1_11_3.TOCTOU.msg.2=This call is not preceeded by\: ''{0}'' before calling blocking instruction\: ''{1}''.
OWASP_ASVS_403.V1_11_3.TOCTOU.msg.3=This call is not preceeded by\: ''{0}'' within block scope.
OWASP_ASVS_403.V1_14_1=Verify the segregation of components of differing trust levels through well-defined security controls, firewall rules, API gateways, reverse proxies, cloud-based security groups, or similar mechanisms.
OWASP_ASVS_403.V1_14_1.VSI=Properly validate server identity
OWASP_ASVS_403.V1_14_1.VSI.msg.1=SMTP SSL does not check server identity.
OWASP_ASVS_403.V1_14_1.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
OWASP_ASVS_403.V1_14_6=Verify the application does not use unsupported, insecure, or deprecated client-side technologies such as NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.
OWASP_ASVS_403.V1_14_6.DPRAPI=Do not use deprecated APIs
OWASP_ASVS_403.V1_14_6.DPRAPI.CHECK_SEE-label=Check for usage of deprecated APIs in Javadoc "@see" tags
OWASP_ASVS_403.V1_14_6.DPRAPI.CLASS_LIST-label=Deprecated class/interface list
OWASP_ASVS_403.V1_14_6.DPRAPI.FIELD_LIST-description=Deprecated field list (in form of &lt;fully qualified type name&gt;\#&lt;field name&gt;)
OWASP_ASVS_403.V1_14_6.DPRAPI.FIELD_LIST-label=Deprecated field list
OWASP_ASVS_403.V1_14_6.DPRAPI.IGNORE_NOT_LISTED-label=Ignore all types, methods, and fields not listed above
OWASP_ASVS_403.V1_14_6.DPRAPI.IGNORE_USER_DEFINED-label=Ignore user-defined types, methods, and fields
OWASP_ASVS_403.V1_14_6.DPRAPI.METHOD_LIST-description=Deprecated method list (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
OWASP_ASVS_403.V1_14_6.DPRAPI.METHOD_LIST-label=Deprecated method list
OWASP_ASVS_403.V1_14_6.DPRAPI.msg.1=Using deprecated {0}\: ''{1}''.
OWASP_ASVS_403.V1_14_6.DPRAPI.tab.CLASS-label=Class/Interface
OWASP_ASVS_403.V1_14_6.DPRAPI.tab.FIELD-label=Field
OWASP_ASVS_403.V1_14_6.DPRAPI.tab.METHOD-label=Method
OWASP_ASVS_403.V1_2_1=Verify the use of unique or special low-privilege operating system accounts for all application components, services, and servers. ([C3](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V1_2_1.LDP=Limit the number of "AccessController.doPrivileged" calls per class.
OWASP_ASVS_403.V1_2_1.LDP.MAX_CALLS-label=Limit the number of 'AccessController.doPrivileged' calls per class to
OWASP_ASVS_403.V1_2_1.LDP.msg.1=Class ''{0}'' has greater than ''{1}'' calls to "AccessController.doPrivileged".
OWASP_ASVS_403.V1_2_1.PCL=Limit the number of lines in "privileged" code blocks.
OWASP_ASVS_403.V1_2_1.PCL.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
OWASP_ASVS_403.V1_2_1.PCL.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
OWASP_ASVS_403.V1_2_1.PCL.NUMBER_LINES-label=Limit number of lines in "run()" method to
OWASP_ASVS_403.V1_2_1.PCL.msg.1="run()" method of class ''{0}'' has greater than ''{1}'' lines.
OWASP_ASVS_403.V1_2_2=Verify that communications between application components, including APIs, middleware and data layers, are authenticated. Components should have the least necessary privileges needed. ([C3](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V1_2_2.SSM=Ensure that an appropriate security manager is set
OWASP_ASVS_403.V1_2_2.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
OWASP_ASVS_403.V1_2_3=Verify that the application uses a single vetted authentication mechanism that is known to be secure, can be extended to include strong authentication, and has sufficient logging and monitoring to detect account abuse or breaches.
OWASP_ASVS_403.V1_2_3.SSM=Ensure that an appropriate security manager is set
OWASP_ASVS_403.V1_2_3.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
OWASP_ASVS_403.V1_2_4=Verify that all authentication pathways and identity management APIs implement consistent authentication security control strength, such that there are no weaker alternatives per the risk of the application.
OWASP_ASVS_403.V1_2_4.SSM=Ensure that an appropriate security manager is set
OWASP_ASVS_403.V1_2_4.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
OWASP_ASVS_403.V1_4_4=Verify the application uses a single and well-vetted access control mechanism for accessing protected data and resources. All requests must pass through this single mechanism to avoid copy and paste or insecure alternative paths. ([C7](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V1_4_4.CKTS=Avoid using cryptographic keys which are too short.
OWASP_ASVS_403.V1_4_4.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
OWASP_ASVS_403.V1_4_4.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
OWASP_ASVS_403.V1_4_4.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
OWASP_ASVS_403.V1_4_4.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
OWASP_ASVS_403.V1_4_4.DNSL=Avoid DNS lookups for decision making
OWASP_ASVS_403.V1_4_4.DNSL.msg.1=DNS lookup checked here.
OWASP_ASVS_403.V1_4_4.HCCK=Avoid using hard-coded cryptographic keys
OWASP_ASVS_403.V1_4_4.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
OWASP_ASVS_403.V1_4_4.HCCK.msg.1=Hard-coded cryptographic key here.
OWASP_ASVS_403.V1_4_4.HCCS=Avoid passing hardcoded usernames/passwords/URLs to database connection methods.
OWASP_ASVS_403.V1_4_4.HCCS.CONNECT_METHS-description=Additional Database Connection Methods (in form of &lt;qualified name of declaring type&gt;\#&lt;method name&gt;)
OWASP_ASVS_403.V1_4_4.HCCS.CONNECT_METHS-label=Additional Database Connection Methods
OWASP_ASVS_403.V1_4_4.HCCS.msg.1=This call to ''{0}()'' may be dangerous because it passes in only hard-coded Strings.
OWASP_ASVS_403.V1_4_4.HCCS.msg.2=This call to ''{0}()'' may be dangerous because it uses a hard-coded password.
OWASP_ASVS_403.V1_4_4.HTTPRHA=Do not rely on IP addresses obtained from HTTP request headers for authentication
OWASP_ASVS_403.V1_4_4.HTTPRHA.msg.1=The IP address retrieved from the HTTP request header is used for authentication
OWASP_ASVS_403.V1_4_4.HTTPRHA.msg.2=The IP address retrieved from the header using the 'getRemoteAddr()' method is used for authentication
OWASP_ASVS_403.V1_4_4.HV=Ensure the HostnameVerifier.verify() method validates the certificate
OWASP_ASVS_403.V1_4_4.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
OWASP_ASVS_403.V1_4_4.IDP=Avoid setting the write or execute file permissions to unintended users
OWASP_ASVS_403.V1_4_4.IDP.msg.1=The ''{0}'' method is set to grant the {1} permissions to everybody.
OWASP_ASVS_403.V1_4_4.JXCORS=Restrict cross-origin resource sharing to secure origins
OWASP_ASVS_403.V1_4_4.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
OWASP_ASVS_403.V1_4_4.LDP=Limit the number of "AccessController.doPrivileged" calls per class.
OWASP_ASVS_403.V1_4_4.LDP.MAX_CALLS-label=Limit the number of 'AccessController.doPrivileged' calls per class to
OWASP_ASVS_403.V1_4_4.LDP.msg.1=Class ''{0}'' has greater than ''{1}'' calls to "AccessController.doPrivileged".
OWASP_ASVS_403.V1_4_4.PBFA=Ensure sufficient protection against multiple failed authentication attempts
OWASP_ASVS_403.V1_4_4.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
OWASP_ASVS_403.V1_4_4.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V1_4_4.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V1_4_4.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V1_4_4.PCL=Limit the number of lines in "privileged" code blocks.
OWASP_ASVS_403.V1_4_4.PCL.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
OWASP_ASVS_403.V1_4_4.PCL.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
OWASP_ASVS_403.V1_4_4.PCL.NUMBER_LINES-label=Limit number of lines in "run()" method to
OWASP_ASVS_403.V1_4_4.PCL.msg.1="run()" method of class ''{0}'' has greater than ''{1}'' lines.
OWASP_ASVS_403.V1_4_4.PERMIT=Avoid EJB 3 methods without security annotations
OWASP_ASVS_403.V1_4_4.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
OWASP_ASVS_403.V1_4_4.SCHTTP=Mark cookies as HttpOnly
OWASP_ASVS_403.V1_4_4.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
OWASP_ASVS_403.V1_4_4.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
OWASP_ASVS_403.V1_4_4.SSM=Ensure that an appropriate security manager is set
OWASP_ASVS_403.V1_4_4.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
OWASP_ASVS_403.V1_4_4.USC=Use the SSL-enabled version of classes when possible.
OWASP_ASVS_403.V1_4_4.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V1_4_4.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V1_4_4.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_4_4.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_4_4.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_4_4.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_4_4.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_4_4.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_4_4.VSI=Properly validate server identity
OWASP_ASVS_403.V1_4_4.VSI.msg.1=SMTP SSL does not check server identity.
OWASP_ASVS_403.V1_4_4.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
OWASP_ASVS_403.V1_4_4.WS=Use secure communication with 'wss' (WebSocket Secure) instead of 'ws'.
OWASP_ASVS_403.V1_4_4.WS.msg.1=Consider using 'wss' instead of 'ws'
OWASP_ASVS_403.V1_5_2=Verify that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.
OWASP_ASVS_403.V1_5_2.AUXD=Avoid parsing untrusted data with XMLDecoder
OWASP_ASVS_403.V1_5_2.AUXD.msg.1=The XMLDecoder class is used.
OWASP_ASVS_403.V1_5_2.MASP=Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes
OWASP_ASVS_403.V1_5_2.MASP.msg.1=Method is not "protected"\: ''{0}''
OWASP_ASVS_403.V1_5_2.RWAF=Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method
OWASP_ASVS_403.V1_5_2.RWAF.CHECK_READ-label=Check 'readObject' methods
OWASP_ASVS_403.V1_5_2.RWAF.CHECK_WRITE-label=Check 'writeObject' methods
OWASP_ASVS_403.V1_5_2.RWAF.MAX_LEVEL-label=Maximum level of checking allowed
OWASP_ASVS_403.V1_5_2.RWAF.msg.1=The ''{0}'' field is not read by the ''readObject()'' method.
OWASP_ASVS_403.V1_5_2.RWAF.msg.2=The ''{0}'' field is not written out by the ''writeObject()'' method.
OWASP_ASVS_403.V1_5_2.SC=Disable LDAP deserialization
OWASP_ASVS_403.V1_5_2.SC.msg.1=The SearchControls object allows deserialization
OWASP_ASVS_403.V1_5_2.VOBD=Validate objects before deserialization
OWASP_ASVS_403.V1_5_2.VOBD.msg.1=The object read from the ObjectInputStream is not validated before deserialization
OWASP_ASVS_403.V1_5_4=Verify that output encoding occurs close to or by the interpreter for which it is intended. ([C4](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V1_5_4.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
OWASP_ASVS_403.V1_5_4.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
OWASP_ASVS_403.V1_5_4.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
OWASP_ASVS_403.V1_5_4.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
OWASP_ASVS_403.V1_5_4.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V1_5_4.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V1_5_4.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V1_9_1=Verify the application encrypts communications between components, particularly when these components are in different containers, systems, sites, or cloud providers. ([C3](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V1_9_1.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP_ASVS_403.V1_9_1.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP_ASVS_403.V1_9_1.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP_ASVS_403.V1_9_1.USC=Use the SSL-enabled version of classes when possible.
OWASP_ASVS_403.V1_9_1.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V1_9_1.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V1_9_1.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_9_1.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_9_1.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_9_1.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_9_1.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_9_1.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP_ASVS_403.V1_9_2=Verify that application components verify the authenticity of each side in a communication link to prevent person-in-the-middle attacks. For example, application components should validate TLS certificates and chains.
OWASP_ASVS_403.V1_9_2.HV=Ensure the HostnameVerifier.verify() method validates the certificate
OWASP_ASVS_403.V1_9_2.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
OWASP_ASVS_403.V1_9_2.VSI=Properly validate server identity
OWASP_ASVS_403.V1_9_2.VSI.msg.1=SMTP SSL does not check server identity.
OWASP_ASVS_403.V1_9_2.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
OWASP_ASVS_403.V2_10_3=Verify that passwords are stored with sufficient protection to prevent offline recovery attacks, including local system access.
OWASP_ASVS_403.V2_10_3.USC=Use the SSL-enabled version of classes when possible.
OWASP_ASVS_403.V2_10_3.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V2_10_3.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V2_10_3.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_10_3.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_10_3.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_10_3.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_10_3.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_10_3.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_10_4=Verify passwords, integrations with databases and third-party systems, seeds and internal secrets, and API keys are managed securely and not included in the source code or stored within source code repositories. Such storage SHOULD resist offline attacks. The use of a secure software key store (L1), hardware TPM, or an HSM (L3) is recommended for password storage.
OWASP_ASVS_403.V2_10_4.HCCK=Avoid using hard-coded cryptographic keys
OWASP_ASVS_403.V2_10_4.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
OWASP_ASVS_403.V2_10_4.HCCK.msg.1=Hard-coded cryptographic key here.
OWASP_ASVS_403.V2_10_4.HCCS=Avoid passing hardcoded usernames/passwords/URLs to database connection methods.
OWASP_ASVS_403.V2_10_4.HCCS.CONNECT_METHS-description=Additional Database Connection Methods (in form of &lt;qualified name of declaring type&gt;\#&lt;method name&gt;)
OWASP_ASVS_403.V2_10_4.HCCS.CONNECT_METHS-label=Additional Database Connection Methods
OWASP_ASVS_403.V2_10_4.HCCS.msg.1=This call to ''{0}()'' may be dangerous because it passes in only hard-coded Strings.
OWASP_ASVS_403.V2_10_4.HCCS.msg.2=This call to ''{0}()'' may be dangerous because it uses a hard-coded password.
OWASP_ASVS_403.V2_2_1=Verify that anti-automation controls are effective at mitigating breached credential testing, brute force, and account lockout attacks. Such controls include blocking the most common breached passwords, soft lockouts, rate limiting, CAPTCHA, ever increasing delays between attempts, IP address restrictions, or risk-based restrictions such as location, first login on a device, recent attempts to unlock the account, or similar. Verify that no more than 100 failed attempts per hour is possible on a single account.
OWASP_ASVS_403.V2_2_1.PBFA=Ensure sufficient protection against multiple failed authentication attempts
OWASP_ASVS_403.V2_2_1.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
OWASP_ASVS_403.V2_2_1.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V2_2_1.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V2_2_1.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V2_2_5=Verify that where a Credential Service Provider (CSP) and the application verifying authentication are separated, mutually authenticated TLS is in place between the two endpoints.
OWASP_ASVS_403.V2_2_5.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP_ASVS_403.V2_2_5.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP_ASVS_403.V2_2_5.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP_ASVS_403.V2_2_5.USC=Use the SSL-enabled version of classes when possible.
OWASP_ASVS_403.V2_2_5.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V2_2_5.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V2_2_5.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_2_5.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_2_5.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_2_5.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_2_5.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_2_5.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_3_1=Verify system generated initial passwords or activation codes SHOULD be securely randomly generated, SHOULD be at least 6 characters long, and MAY contain letters and numbers, and expire after a short period of time. These initial secrets must not be permitted to become the long term password.
OWASP_ASVS_403.V2_3_1.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP_ASVS_403.V2_3_1.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP_ASVS_403.V2_3_1.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP_ASVS_403.V2_3_1.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP_ASVS_403.V2_3_1.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP_ASVS_403.V2_3_1.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP_ASVS_403.V2_3_1.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP_ASVS_403.V2_3_1.CKTS=Avoid using cryptographic keys which are too short.
OWASP_ASVS_403.V2_3_1.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
OWASP_ASVS_403.V2_3_1.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
OWASP_ASVS_403.V2_3_1.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
OWASP_ASVS_403.V2_3_1.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
OWASP_ASVS_403.V2_3_1.HCCK=Avoid using hard-coded cryptographic keys
OWASP_ASVS_403.V2_3_1.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
OWASP_ASVS_403.V2_3_1.HCCK.msg.1=Hard-coded cryptographic key here.
OWASP_ASVS_403.V2_3_1.ICA=Avoid using insecure algorithms for cryptography.
OWASP_ASVS_403.V2_3_1.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP_ASVS_403.V2_3_1.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP_ASVS_403.V2_3_1.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP_ASVS_403.V2_3_1.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP_ASVS_403.V2_3_1.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP_ASVS_403.V2_3_1.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP_ASVS_403.V2_3_3=Verify that renewal instructions are sent with sufficient time to renew time bound authenticators.
OWASP_ASVS_403.V2_3_3.PBFA=Ensure sufficient protection against multiple failed authentication attempts
OWASP_ASVS_403.V2_3_3.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
OWASP_ASVS_403.V2_3_3.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V2_3_3.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V2_3_3.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
OWASP_ASVS_403.V2_4_1=Verify that passwords are stored in a form that is resistant to offline attacks. Passwords SHALL be salted and hashed using an approved one-way key derivation or password hashing function. Key derivation and password hashing functions take a password, a salt, and a cost factor as inputs when generating a password hash. ([C6](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V2_4_1.MDSALT=Use hash functions with a salt
OWASP_ASVS_403.V2_4_1.MDSALT.msg.1=A salt is not added to the digest
OWASP_ASVS_403.V2_7_4=Verify that the out of band authenticator and verifier communicates over a secure independent channel.
OWASP_ASVS_403.V2_7_4.USC=Use the SSL-enabled version of classes when possible.
OWASP_ASVS_403.V2_7_4.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V2_7_4.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V2_7_4.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_7_4.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_7_4.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_7_4.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_7_4.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_7_4.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP_ASVS_403.V2_8_3=Verify that approved cryptographic algorithms are used in the generation, seeding, and verification of OTPs.
OWASP_ASVS_403.V2_8_3.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP_ASVS_403.V2_8_3.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP_ASVS_403.V2_8_3.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP_ASVS_403.V2_8_3.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP_ASVS_403.V2_8_3.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP_ASVS_403.V2_8_3.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP_ASVS_403.V2_8_3.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP_ASVS_403.V2_8_3.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
OWASP_ASVS_403.V2_8_3.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
OWASP_ASVS_403.V2_8_3.CKTS=Avoid using cryptographic keys which are too short.
OWASP_ASVS_403.V2_8_3.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
OWASP_ASVS_403.V2_8_3.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
OWASP_ASVS_403.V2_8_3.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
OWASP_ASVS_403.V2_8_3.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
OWASP_ASVS_403.V2_8_3.ICA=Avoid using insecure algorithms for cryptography.
OWASP_ASVS_403.V2_8_3.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP_ASVS_403.V2_8_3.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP_ASVS_403.V2_8_3.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP_ASVS_403.V2_8_3.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP_ASVS_403.V2_8_3.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP_ASVS_403.V2_8_3.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP_ASVS_403.V2_8_3.MDSALT=Use hash functions with a salt
OWASP_ASVS_403.V2_8_3.MDSALT.msg.1=A salt is not added to the digest
OWASP_ASVS_403.V2_8_3.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP_ASVS_403.V2_8_3.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP_ASVS_403.V2_9_3=Verify that approved cryptographic algorithms are used in the generation, seeding, and verification.
OWASP_ASVS_403.V2_9_3.ACMD=Avoid using custom MessageDigest implementations
OWASP_ASVS_403.V2_9_3.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
OWASP_ASVS_403.V2_9_3.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP_ASVS_403.V2_9_3.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP_ASVS_403.V2_9_3.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP_ASVS_403.V2_9_3.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP_ASVS_403.V2_9_3.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP_ASVS_403.V2_9_3.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP_ASVS_403.V2_9_3.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP_ASVS_403.V2_9_3.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
OWASP_ASVS_403.V2_9_3.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
OWASP_ASVS_403.V2_9_3.ICA=Avoid using insecure algorithms for cryptography.
OWASP_ASVS_403.V2_9_3.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP_ASVS_403.V2_9_3.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP_ASVS_403.V2_9_3.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP_ASVS_403.V2_9_3.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP_ASVS_403.V2_9_3.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP_ASVS_403.V2_9_3.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP_ASVS_403.V2_9_3.MDSALT=Use hash functions with a salt
OWASP_ASVS_403.V2_9_3.MDSALT.msg.1=A salt is not added to the digest
OWASP_ASVS_403.V2_9_3.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP_ASVS_403.V2_9_3.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP_ASVS_403.V3_2_1=Verify the application generates a new session token on user authentication. ([C6](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V3_2_1.ISL=Always call 'HttpSession.invalidate()' before 'LoginContext.login()'
OWASP_ASVS_403.V3_2_1.ISL.msg.1=Login without session invalidation.
OWASP_ASVS_403.V3_3_2=If authenticators permit users to remain logged in, verify that re-authentication occurs periodically both when actively used or after an idle period. ([C6](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V3_3_2.RUIM=Ensure proper session expiration
OWASP_ASVS_403.V3_3_2.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
OWASP_ASVS_403.V3_3_2.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
OWASP_ASVS_403.V3_4_1=Verify that cookie-based session tokens have the 'Secure' attribute set. ([C6](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V3_4_1.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP_ASVS_403.V3_4_1.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP_ASVS_403.V3_4_1.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP_ASVS_403.V3_4_2=Verify that cookie-based session tokens have the 'HttpOnly' attribute set. ([C6](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V3_4_2.SCHTTP=Mark cookies as HttpOnly
OWASP_ASVS_403.V3_4_2.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
OWASP_ASVS_403.V3_4_2.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
OWASP_ASVS_403.V3_7_1=Verify the application ensures a full, valid login session or requires re-authentication or secondary verification before allowing any sensitive transactions or account modifications.
OWASP_ASVS_403.V3_7_1.SSM=Ensure that an appropriate security manager is set
OWASP_ASVS_403.V3_7_1.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
OWASP_ASVS_403.V4_1_3=Verify that the principle of least privilege exists - users should only be able to access functions, data files, URLs, controllers, services, and other resources, for which they possess specific authorization. This implies protection against spoofing and elevation of privilege. ([C7](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V4_1_3.IDP=Avoid setting the write or execute file permissions to unintended users
OWASP_ASVS_403.V4_1_3.IDP.msg.1=The ''{0}'' method is set to grant the {1} permissions to everybody.
OWASP_ASVS_403.V4_1_3.PERMIT=Avoid EJB 3 methods without security annotations
OWASP_ASVS_403.V4_1_3.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
OWASP_ASVS_403.V4_1_3.SCHTTP=Mark cookies as HttpOnly
OWASP_ASVS_403.V4_1_3.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
OWASP_ASVS_403.V4_1_3.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
OWASP_ASVS_403.V4_2_2=Verify that the application or framework enforces a strong anti-CSRF mechanism to protect authenticated functionality, and effective anti-automation or anti-CSRF protects unauthenticated functionality.
OWASP_ASVS_403.V4_2_2.DCSRFJAVA=Do not disable CSRF protection
OWASP_ASVS_403.V4_2_2.DCSRFJAVA.msg.1=CSRF protection is disabled.
OWASP_ASVS_403.V4_2_2.REQMAP=Ensure that methods annotated with @RequestMapping specify the HTTP request method they call
OWASP_ASVS_403.V4_2_2.REQMAP.msg.1=The ''{0}'' method annotated with @RequestMapping does not explicitly specify the HTTP request method it calls
OWASP_ASVS_403.V4_2_2.REQMAP.msg.2=The ''{0}'' method annotated with @RequestMapping calls more than one HTTP request method.
OWASP_ASVS_403.V4_2_2.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP_ASVS_403.V4_2_2.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP_ASVS_403.V4_2_2.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP_ASVS_403.V5_1_3=Verify that all input (HTML form fields, REST requests, URL parameters, HTTP headers, cookies, batch files, RSS feeds, etc) is validated using positive validation (allow lists). ([C5](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V5_1_3.AEAF=Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'.
OWASP_ASVS_403.V5_1_3.AEAF.msg.1=Consider extending 'DynaValidatorForm' or 'DynaValidatorActionForm'
OWASP_ASVS_403.V5_1_3.AEAF.msg.2=Consider extending 'ValidatorForm' or 'ValidatorActionForm'
OWASP_ASVS_403.V5_1_3.APIBS=Inspect usage of standard API calls that bypass security
OWASP_ASVS_403.V5_1_3.APIBS.CHECKED_METHODS-label=Check the following methods\:
OWASP_ASVS_403.V5_1_3.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
OWASP_ASVS_403.V5_1_3.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
OWASP_ASVS_403.V5_1_3.APIBS.msg.1=API call ''{0}'' has potential to bypass security.
OWASP_ASVS_403.V5_1_3.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
OWASP_ASVS_403.V5_1_3.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
OWASP_ASVS_403.V5_1_3.BUSSB=Prevent external processes from blocking on output or error streams
OWASP_ASVS_403.V5_1_3.BUSSB.msg.1=The error stream of the process is not emptied or redirected
OWASP_ASVS_403.V5_1_3.BUSSB.msg.2=The output stream of the process is not emptied or redirected
OWASP_ASVS_403.V5_1_3.CACO=Avoid using compound assignment operators in cases which may cause overflow.
OWASP_ASVS_403.V5_1_3.CACO.msg.1=Compound assignment operators should not be used when the destination type is ''{0}''.
OWASP_ASVS_403.V5_1_3.CACO.msg.2=Compound assignment operators should not be used when the destination type is ''{0}'' and the operand type is ''{1}''.
OWASP_ASVS_403.V5_1_3.CAI=Always check parameters before use in array access
OWASP_ASVS_403.V5_1_3.CAI.IGNORE_PRIVATE-label=Ignore private methods
OWASP_ASVS_403.V5_1_3.CAI.msg.1=Array ''{0}'' accessed with ''{1}''.
OWASP_ASVS_403.V5_1_3.CLP=Do not cast primitive data types to lower precision
OWASP_ASVS_403.V5_1_3.CLP.msg.1="{0}" type cast to lower precision "{1}" type.
OWASP_ASVS_403.V5_1_3.CSVFV=Always call 'super.validate()' from validation methods in 'ActionForm' classes.
OWASP_ASVS_403.V5_1_3.CSVFV.msg.1=This validation method does not call 'super.validate()'.
OWASP_ASVS_403.V5_1_3.ICO=Avoid calculations which result in overflow or NaN
OWASP_ASVS_403.V5_1_3.ICO.msg.1=This calculation will not produce an accurate result because it will result in overflow.
OWASP_ASVS_403.V5_1_3.ICO.msg.2=This calculation will throw 'java.lang.ArithmeticException'.
OWASP_ASVS_403.V5_1_3.IOF=Use unsigned right shift instead of division when overflow is possible.
OWASP_ASVS_403.V5_1_3.IOF.msg.1=This integer computation may cause overflow.
OWASP_ASVS_403.V5_1_3.NATIW=Use wrapper methods to secure native methods
OWASP_ASVS_403.V5_1_3.NATIW.msg.1={0} should only be accessed using a wrapper method.
OWASP_ASVS_403.V5_1_3.NATV=Do not use user-defined "native" methods.
OWASP_ASVS_403.V5_1_3.NATV.msg.1=User-defined "native" method\: {0}.
OWASP_ASVS_403.V5_1_3.SYSP=Do not access or set System properties.
OWASP_ASVS_403.V5_1_3.SYSP.msg.1={0} the System property "{1}".
OWASP_ASVS_403.V5_1_3.SYSP.msg.2={0} a System property.
OWASP_ASVS_403.V5_1_3.SYSP.msg.3={0} the System properties.
OWASP_ASVS_403.V5_1_3.UCO=Use a Context Object to manage HTTP request parameters
OWASP_ASVS_403.V5_1_3.UCO.msg.1=Consider using a "Context" Object instead of calling ''{0}()''.
OWASP_ASVS_403.V5_1_5=Verify that URL redirects and forwards only allow destinations which appear on an allow list, or show a warning when redirecting to potentially untrusted content.
OWASP_ASVS_403.V5_1_5.UCO=Use a Context Object to manage HTTP request parameters
OWASP_ASVS_403.V5_1_5.UCO.msg.1=Consider using a "Context" Object instead of calling ''{0}()''.
OWASP_ASVS_403.V5_1_5.VRD=Encapsulate all redirect and forward URLs with a validation function
OWASP_ASVS_403.V5_1_5.VRD.VALIDATE_METHODS-description=Validation methods (in regular expressions) [qualified name of declaring type\#method name]
OWASP_ASVS_403.V5_1_5.VRD.VALIDATE_METHODS-label=Validation methods (in regular expressions)
OWASP_ASVS_403.V5_1_5.VRD.msg.1=No validation check in redirect URL.
OWASP_ASVS_403.V5_1_5.VRD.msg.2=No validation check in forward URL.
OWASP_ASVS_403.V5_2_1=Verify that all untrusted HTML input from WYSIWYG editors or similar is properly sanitized with an HTML sanitizer library or framework feature. ([C5](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V5_2_1.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
OWASP_ASVS_403.V5_2_1.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
OWASP_ASVS_403.V5_2_1.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
OWASP_ASVS_403.V5_2_1.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
OWASP_ASVS_403.V5_2_1.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V5_2_1.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V5_2_1.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V5_2_5=Verify that the application protects against template injection attacks by ensuring that any user input being included is sanitized or sandboxed.
OWASP_ASVS_403.V5_2_5.ASAPI=Prevent the scripting API from executing untrusted code
OWASP_ASVS_403.V5_2_5.ASAPI.REPORT_ON_EVAL-label=Report violation on eval method invocation
OWASP_ASVS_403.V5_2_5.ASAPI.msg.1=Ensure that the use of the scripting API does not allow untrusted dynamic code execution.
OWASP_ASVS_403.V5_2_5.ASAPI.msg.2=The eval() method is called on the scriptEngine object and may execute untrusted dynamic code.
OWASP_ASVS_403.V5_2_5.DCEMSL=Avoid untrusted input when logging messages with Seam Logging API
OWASP_ASVS_403.V5_2_5.DCEMSL.CLASS_FIELDS_ARE_SAFE-label=Consider class fields to be secure
OWASP_ASVS_403.V5_2_5.DCEMSL.msg.1=The ''{0}'' method called on the object of the Log class takes a dangerous argument.
OWASP_ASVS_403.V5_2_8=Verify that the application sanitizes, disables, or sandboxes user-supplied scriptable or expression template language content, such as Markdown, CSS or XSL stylesheets, BBCode, or similar.
OWASP_ASVS_403.V5_2_8.ASAPI=Prevent the scripting API from executing untrusted code
OWASP_ASVS_403.V5_2_8.ASAPI.REPORT_ON_EVAL-label=Report violation on eval method invocation
OWASP_ASVS_403.V5_2_8.ASAPI.msg.1=Ensure that the use of the scripting API does not allow untrusted dynamic code execution.
OWASP_ASVS_403.V5_2_8.ASAPI.msg.2=The eval() method is called on the scriptEngine object and may execute untrusted dynamic code.
OWASP_ASVS_403.V5_2_8.DCEMSL=Avoid untrusted input when logging messages with Seam Logging API
OWASP_ASVS_403.V5_2_8.DCEMSL.CLASS_FIELDS_ARE_SAFE-label=Consider class fields to be secure
OWASP_ASVS_403.V5_2_8.DCEMSL.msg.1=The ''{0}'' method called on the object of the Log class takes a dangerous argument.
OWASP_ASVS_403.V5_3_1=Verify that output encoding is relevant for the interpreter and context required. For example, use encoders specifically for HTML values, HTML attributes, JavaScript, URL parameters, HTTP headers, SMTP, and others as the context requires, especially from untrusted inputs (e.g. names with Unicode or apostrophes). ([C4](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V5_3_1.SEO=Avoid calling methods and constructors which do not allow you to specify a character encoding option.
OWASP_ASVS_403.V5_3_1.SEO.METHODS_TO_CHECK-description=Methods and Constructors to Avoid (in form of &lt;fully qualified type name&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;))
OWASP_ASVS_403.V5_3_1.SEO.METHODS_TO_CHECK-label=Methods and Constructors to Avoid\:
OWASP_ASVS_403.V5_3_1.SEO.TYPES_TO_CHECK-label=Types to Avoid (Fully Qualified Names)\:
OWASP_ASVS_403.V5_3_1.SEO.msg.1=You may not want to use this constructor for ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V5_3_1.SEO.msg.2=You may not want to use the method ''{0}()'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V5_3_1.SEO.msg.3=You may not want to use the type ''{0}'' because it does not allow you to specify an encoding option.
OWASP_ASVS_403.V5_3_2=Verify that output encoding preserves the user's chosen character set and locale, such that any Unicode character point is valid and safely handled. ([C4](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V5_3_2.NCUCP=Do not assume that a Java char fully represents a Unicode code point
OWASP_ASVS_403.V5_3_2.NCUCP.METHODS_TABLE_HEADER-label=Methods to be checked
OWASP_ASVS_403.V5_3_2.NCUCP.METHODS_TABLE_HEADER.PB__CUB__NCUCP__METHODS_TABLE_HEADER__COLUMN1-label=Incorrect method (qualified name)
OWASP_ASVS_403.V5_3_2.NCUCP.METHODS_TABLE_HEADER.PB__CUB__NCUCP__METHODS_TABLE_HEADER__COLUMN2-label=Correct method (qualified name)
OWASP_ASVS_403.V5_3_2.NCUCP.msg.1=The ''{0}'' method does not support all Unicode characters and should be replaced with ''{1}''
OWASP_ASVS_403.V5_3_3=Verify that context-aware, preferably automated - or at worst, manual - output escaping protects against reflected, stored, and DOM based XSS. ([C4](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V5_3_3.ARXML=Process XML and HTML with a library instead of raw text 
OWASP_ASVS_403.V5_3_3.ARXML.msg.1=''{0}'' is processed using raw text instead of a library
OWASP_ASVS_403.V5_3_4=Verify that data selection or database queries (e.g. SQL, HQL, ORM, NoSQL) use parameterized queries, ORMs, entity frameworks, or are otherwise protected from database injection attacks. ([C3](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V5_3_4.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
OWASP_ASVS_403.V5_3_4.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
OWASP_ASVS_403.V5_4_3=Verify that sign, range, and input validation techniques are used to prevent integer overflows.
OWASP_ASVS_403.V5_4_3.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
OWASP_ASVS_403.V5_4_3.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
OWASP_ASVS_403.V5_4_3.CACO=Avoid using compound assignment operators in cases which may cause overflow.
OWASP_ASVS_403.V5_4_3.CACO.msg.1=Compound assignment operators should not be used when the destination type is ''{0}''.
OWASP_ASVS_403.V5_4_3.CACO.msg.2=Compound assignment operators should not be used when the destination type is ''{0}'' and the operand type is ''{1}''.
OWASP_ASVS_403.V5_4_3.CLP=Do not cast primitive data types to lower precision
OWASP_ASVS_403.V5_4_3.CLP.msg.1="{0}" type cast to lower precision "{1}" type.
OWASP_ASVS_403.V5_4_3.ICO=Avoid calculations which result in overflow or NaN
OWASP_ASVS_403.V5_4_3.ICO.msg.1=This calculation will not produce an accurate result because it will result in overflow.
OWASP_ASVS_403.V5_4_3.ICO.msg.2=This calculation will throw 'java.lang.ArithmeticException'.
OWASP_ASVS_403.V5_4_3.IOF=Use unsigned right shift instead of division when overflow is possible.
OWASP_ASVS_403.V5_4_3.IOF.msg.1=This integer computation may cause overflow.
OWASP_ASVS_403.V5_5_1=Verify that serialized objects use integrity checks or are encrypted to prevent hostile object creation or data tampering. ([C5](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V5_5_1.AUXD=Avoid parsing untrusted data with XMLDecoder
OWASP_ASVS_403.V5_5_1.AUXD.msg.1=The XMLDecoder class is used.
OWASP_ASVS_403.V5_5_1.MASP=Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes
OWASP_ASVS_403.V5_5_1.MASP.msg.1=Method is not "protected"\: ''{0}''
OWASP_ASVS_403.V5_5_1.RWAF=Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method
OWASP_ASVS_403.V5_5_1.RWAF.CHECK_READ-label=Check 'readObject' methods
OWASP_ASVS_403.V5_5_1.RWAF.CHECK_WRITE-label=Check 'writeObject' methods
OWASP_ASVS_403.V5_5_1.RWAF.MAX_LEVEL-label=Maximum level of checking allowed
OWASP_ASVS_403.V5_5_1.RWAF.msg.1=The ''{0}'' field is not read by the ''readObject()'' method.
OWASP_ASVS_403.V5_5_1.RWAF.msg.2=The ''{0}'' field is not written out by the ''writeObject()'' method.
OWASP_ASVS_403.V5_5_1.SC=Disable LDAP deserialization
OWASP_ASVS_403.V5_5_1.SC.msg.1=The SearchControls object allows deserialization
OWASP_ASVS_403.V5_5_1.VOBD=Validate objects before deserialization
OWASP_ASVS_403.V5_5_1.VOBD.msg.1=The object read from the ObjectInputStream is not validated before deserialization
OWASP_ASVS_403.V5_5_2=Verify that the application correctly restricts XML parsers to only use the most restrictive configuration possible and to ensure that unsafe features such as resolving external entities are disabled to prevent XML eXternal Entity (XXE) attacks.
OWASP_ASVS_403.V5_5_2.DXXE=Disable XML external entity injection.
OWASP_ASVS_403.V5_5_2.DXXE.msg.1=XXE injection has not been disabled.
OWASP_ASVS_403.V5_5_2.DXXE.msg.2=XXE injection has not been disabled. Ensure your parser version allows you to configure the required options.
OWASP_ASVS_403.V5_5_3=Verify that deserialization of untrusted data is avoided or is protected in both custom code and third-party libraries (such as JSON, XML and YAML parsers).
OWASP_ASVS_403.V5_5_3.VOBD=Validate objects before deserialization
OWASP_ASVS_403.V5_5_3.VOBD.msg.1=The object read from the ObjectInputStream is not validated before deserialization
OWASP_ASVS_403.V6_2_2=Verify that industry proven or government approved cryptographic algorithms, modes, and libraries are used, instead of custom coded cryptography. ([C8](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V6_2_2.ACMD=Avoid using custom MessageDigest implementations
OWASP_ASVS_403.V6_2_2.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
OWASP_ASVS_403.V6_2_2.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP_ASVS_403.V6_2_2.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP_ASVS_403.V6_2_2.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP_ASVS_403.V6_2_2.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP_ASVS_403.V6_2_2.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP_ASVS_403.V6_2_2.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP_ASVS_403.V6_2_2.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP_ASVS_403.V6_2_2.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
OWASP_ASVS_403.V6_2_2.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
OWASP_ASVS_403.V6_2_2.ICA=Avoid using insecure algorithms for cryptography.
OWASP_ASVS_403.V6_2_2.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP_ASVS_403.V6_2_2.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP_ASVS_403.V6_2_2.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP_ASVS_403.V6_2_2.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP_ASVS_403.V6_2_2.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP_ASVS_403.V6_2_2.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP_ASVS_403.V6_2_2.MDSALT=Use hash functions with a salt
OWASP_ASVS_403.V6_2_2.MDSALT.msg.1=A salt is not added to the digest
OWASP_ASVS_403.V6_2_2.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP_ASVS_403.V6_2_2.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP_ASVS_403.V6_2_3=Verify that encryption initialization vector, cipher configuration, and block modes are configured securely using the latest advice.
OWASP_ASVS_403.V6_2_3.CKTS=Avoid using cryptographic keys which are too short.
OWASP_ASVS_403.V6_2_3.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
OWASP_ASVS_403.V6_2_3.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
OWASP_ASVS_403.V6_2_3.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
OWASP_ASVS_403.V6_2_3.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
OWASP_ASVS_403.V6_3_1=Verify that all random numbers, random file names, random GUIDs, and random strings are generated using the cryptographic module's approved cryptographically secure random number generator when these random values are intended to be not guessable by an attacker.
OWASP_ASVS_403.V6_3_1.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP_ASVS_403.V6_3_1.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP_ASVS_403.V6_3_2=Verify that random GUIDs are created using the GUID v4 algorithm, and a Cryptographically-secure Pseudo-random Number Generator (CSPRNG). GUIDs created using other pseudo-random number generators may be predictable.
OWASP_ASVS_403.V6_3_2.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP_ASVS_403.V6_3_2.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP_ASVS_403.V6_3_3=Verify that random numbers are created with proper entropy even when the application is under heavy load, or that the application degrades gracefully in such circumstances.
OWASP_ASVS_403.V6_3_3.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP_ASVS_403.V6_3_3.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP_ASVS_403.V7_1_1=Verify that the application does not log credentials or payment details. Session tokens should only be stored in logs in an irreversible, hashed form. ([C9, C10](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V7_1_1.CONSEN=Do not log confidential or sensitive information
OWASP_ASVS_403.V7_1_1.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP_ASVS_403.V7_1_1.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP_ASVS_403.V7_1_1.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
OWASP_ASVS_403.V7_1_1.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
OWASP_ASVS_403.V7_1_2=Verify that the application does not log other sensitive data as defined under local privacy laws or relevant security policy. ([C9](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V7_1_2.CONSEN=Do not log confidential or sensitive information
OWASP_ASVS_403.V7_1_2.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP_ASVS_403.V7_1_2.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP_ASVS_403.V7_1_2.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
OWASP_ASVS_403.V7_1_2.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
OWASP_ASVS_403.V7_1_3=Verify that the application logs security relevant events including successful and failed authentication events, access control failures, deserialization failures and input validation failures. ([C5, C7](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V7_1_3.ENFL=Ensure all sensitive method invocations are logged
OWASP_ASVS_403.V7_1_3.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP_ASVS_403.V7_1_3.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP_ASVS_403.V7_1_3.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
OWASP_ASVS_403.V7_1_3.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
OWASP_ASVS_403.V7_1_3.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
OWASP_ASVS_403.V7_1_3.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
OWASP_ASVS_403.V7_1_3.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
OWASP_ASVS_403.V7_1_3.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
OWASP_ASVS_403.V7_1_3.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
OWASP_ASVS_403.V7_1_3.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
OWASP_ASVS_403.V7_1_3.ENFL.tab.LOG_TAG-label=Loggers
OWASP_ASVS_403.V7_1_3.ENFL.tab.POST_LOG_TAG-label=Next statement
OWASP_ASVS_403.V7_1_3.ENFL.tab.PRE_LOG_TAG-label=Previous statement
OWASP_ASVS_403.V7_1_4=Verify that each log event includes necessary information that would allow for a detailed investigation of the timeline when an event happens. ([C9](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V7_1_4.ENFL=Ensure all sensitive method invocations are logged
OWASP_ASVS_403.V7_1_4.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP_ASVS_403.V7_1_4.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP_ASVS_403.V7_1_4.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
OWASP_ASVS_403.V7_1_4.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
OWASP_ASVS_403.V7_1_4.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
OWASP_ASVS_403.V7_1_4.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
OWASP_ASVS_403.V7_1_4.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
OWASP_ASVS_403.V7_1_4.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
OWASP_ASVS_403.V7_1_4.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
OWASP_ASVS_403.V7_1_4.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
OWASP_ASVS_403.V7_1_4.ENFL.tab.LOG_TAG-label=Loggers
OWASP_ASVS_403.V7_1_4.ENFL.tab.POST_LOG_TAG-label=Next statement
OWASP_ASVS_403.V7_1_4.ENFL.tab.PRE_LOG_TAG-label=Previous statement
OWASP_ASVS_403.V7_2_1=Verify that all authentication decisions are logged, without storing sensitive session tokens or passwords. This should include requests with relevant metadata needed for security investigations.
OWASP_ASVS_403.V7_2_1.ENFL=Ensure all sensitive method invocations are logged
OWASP_ASVS_403.V7_2_1.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP_ASVS_403.V7_2_1.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP_ASVS_403.V7_2_1.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
OWASP_ASVS_403.V7_2_1.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
OWASP_ASVS_403.V7_2_1.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
OWASP_ASVS_403.V7_2_1.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
OWASP_ASVS_403.V7_2_1.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
OWASP_ASVS_403.V7_2_1.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
OWASP_ASVS_403.V7_2_1.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
OWASP_ASVS_403.V7_2_1.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
OWASP_ASVS_403.V7_2_1.ENFL.tab.LOG_TAG-label=Loggers
OWASP_ASVS_403.V7_2_1.ENFL.tab.POST_LOG_TAG-label=Next statement
OWASP_ASVS_403.V7_2_1.ENFL.tab.PRE_LOG_TAG-label=Previous statement
OWASP_ASVS_403.V8_3_1=Verify that sensitive data is sent to the server in the HTTP message body or headers, and that query string parameters from any HTTP verb do not contain sensitive data.
OWASP_ASVS_403.V8_3_1.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP_ASVS_403.V8_3_1.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP_ASVS_403.V8_3_1.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP_ASVS_403.V8_3_1.USC=Use the SSL-enabled version of classes when possible.
OWASP_ASVS_403.V8_3_1.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V8_3_1.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V8_3_1.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP_ASVS_403.V8_3_1.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V8_3_1.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V8_3_1.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V8_3_1.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V8_3_1.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP_ASVS_403.V8_3_2=Verify that users have a method to remove or export their data on demand.
OWASP_ASVS_403.V8_3_2.FT=Avoid declaring "transient" fields in non-serializable classes
OWASP_ASVS_403.V8_3_2.FT.msg.1=field ''{0}'' is "transient"
OWASP_ASVS_403.V8_3_3=Verify that users are provided clear language regarding collection and use of supplied personal information and that users have provided opt-in consent for the use of that data before it is used in any way.
OWASP_ASVS_403.V8_3_3.IDP=Avoid setting the write or execute file permissions to unintended users
OWASP_ASVS_403.V8_3_3.IDP.msg.1=The ''{0}'' method is set to grant the {1} permissions to everybody.
OWASP_ASVS_403.V8_3_3.PERMIT=Avoid EJB 3 methods without security annotations
OWASP_ASVS_403.V8_3_3.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
OWASP_ASVS_403.V8_3_3.SCHTTP=Mark cookies as HttpOnly
OWASP_ASVS_403.V8_3_3.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
OWASP_ASVS_403.V8_3_3.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
OWASP_ASVS_403.V8_3_4=Verify that all sensitive data created and processed by the application has been identified, and ensure that a policy is in place on how to deal with sensitive data. ([C8](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V8_3_4.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
OWASP_ASVS_403.V8_3_4.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
OWASP_ASVS_403.V8_3_4.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
OWASP_ASVS_403.V8_3_4.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
OWASP_ASVS_403.V8_3_4.CONSEN=Do not log confidential or sensitive information
OWASP_ASVS_403.V8_3_4.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
OWASP_ASVS_403.V8_3_4.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
OWASP_ASVS_403.V8_3_4.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
OWASP_ASVS_403.V8_3_4.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
OWASP_ASVS_403.V8_3_4.EWSSEC=Avoid debug information from Spring Security framework to logs
OWASP_ASVS_403.V8_3_4.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
OWASP_ASVS_403.V8_3_4.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
OWASP_ASVS_403.V8_3_4.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
OWASP_ASVS_403.V8_3_4.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
OWASP_ASVS_403.V8_3_4.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
OWASP_ASVS_403.V8_3_4.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
OWASP_ASVS_403.V8_3_4.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
OWASP_ASVS_403.V8_3_4.SIO=Avoid calling print methods of 'System.err' or 'System.out'
OWASP_ASVS_403.V8_3_4.SIO.METHOD_SKIP_LIST-label=Exclude methods
OWASP_ASVS_403.V8_3_4.SIO.SCANNED_CLASS_TABLE-label=Include classes
OWASP_ASVS_403.V8_3_4.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
OWASP_ASVS_403.V8_3_4.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
OWASP_ASVS_403.V8_3_4.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
OWASP_ASVS_403.V8_3_7=Verify that sensitive or private information that is required to be encrypted, is encrypted using approved algorithms that provide both confidentiality and integrity. ([C8](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V8_3_7.ACMD=Avoid using custom MessageDigest implementations
OWASP_ASVS_403.V8_3_7.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
OWASP_ASVS_403.V8_3_7.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP_ASVS_403.V8_3_7.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP_ASVS_403.V8_3_7.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP_ASVS_403.V8_3_7.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP_ASVS_403.V8_3_7.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP_ASVS_403.V8_3_7.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP_ASVS_403.V8_3_7.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP_ASVS_403.V8_3_7.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
OWASP_ASVS_403.V8_3_7.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
OWASP_ASVS_403.V8_3_7.ICA=Avoid using insecure algorithms for cryptography.
OWASP_ASVS_403.V8_3_7.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP_ASVS_403.V8_3_7.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP_ASVS_403.V8_3_7.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP_ASVS_403.V8_3_7.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP_ASVS_403.V8_3_7.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP_ASVS_403.V8_3_7.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP_ASVS_403.V8_3_7.MDSALT=Use hash functions with a salt
OWASP_ASVS_403.V8_3_7.MDSALT.msg.1=A salt is not added to the digest
OWASP_ASVS_403.V8_3_7.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP_ASVS_403.V8_3_7.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP_ASVS_403.V9_1_1=Verify that TLS is used for all client connectivity, and does not fall back to insecure or unencrypted communications. ([C8](https\://owasp.org/www-project-proactive-controls/\#div-numbering))
OWASP_ASVS_403.V9_1_1.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP_ASVS_403.V9_1_1.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP_ASVS_403.V9_1_1.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP_ASVS_403.V9_1_1.USC=Use the SSL-enabled version of classes when possible.
OWASP_ASVS_403.V9_1_1.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V9_1_1.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V9_1_1.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_1_1.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_1_1.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_1_1.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_1_1.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_1_1.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_1_2=Verify using up to date TLS testing tools that only strong cipher suites are enabled, with the strongest cipher suites set as preferred.
OWASP_ASVS_403.V9_1_2.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP_ASVS_403.V9_1_2.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP_ASVS_403.V9_1_2.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP_ASVS_403.V9_1_2.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP_ASVS_403.V9_1_2.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP_ASVS_403.V9_1_2.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP_ASVS_403.V9_1_2.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP_ASVS_403.V9_1_2.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
OWASP_ASVS_403.V9_1_2.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
OWASP_ASVS_403.V9_1_2.CKTS=Avoid using cryptographic keys which are too short.
OWASP_ASVS_403.V9_1_2.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
OWASP_ASVS_403.V9_1_2.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
OWASP_ASVS_403.V9_1_2.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
OWASP_ASVS_403.V9_1_2.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
OWASP_ASVS_403.V9_1_2.ICA=Avoid using insecure algorithms for cryptography.
OWASP_ASVS_403.V9_1_2.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP_ASVS_403.V9_1_2.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP_ASVS_403.V9_1_2.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP_ASVS_403.V9_1_2.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP_ASVS_403.V9_1_2.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP_ASVS_403.V9_1_2.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP_ASVS_403.V9_1_2.MDSALT=Use hash functions with a salt
OWASP_ASVS_403.V9_1_2.MDSALT.msg.1=A salt is not added to the digest
OWASP_ASVS_403.V9_1_2.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP_ASVS_403.V9_1_2.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP_ASVS_403.V9_1_3=Verify that only the latest recommended versions of the TLS protocol are enabled, such as TLS 1.2 and TLS 1.3. The latest version of the TLS protocol should be the preferred option.
OWASP_ASVS_403.V9_1_3.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
OWASP_ASVS_403.V9_1_3.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
OWASP_ASVS_403.V9_1_3.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
OWASP_ASVS_403.V9_1_3.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
OWASP_ASVS_403.V9_1_3.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
OWASP_ASVS_403.V9_1_3.AISSAJAVA.msg.1=The cryptographic class is insecure.
OWASP_ASVS_403.V9_1_3.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
OWASP_ASVS_403.V9_1_3.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
OWASP_ASVS_403.V9_1_3.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
OWASP_ASVS_403.V9_1_3.CKTS=Avoid using cryptographic keys which are too short.
OWASP_ASVS_403.V9_1_3.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
OWASP_ASVS_403.V9_1_3.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
OWASP_ASVS_403.V9_1_3.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
OWASP_ASVS_403.V9_1_3.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
OWASP_ASVS_403.V9_1_3.ICA=Avoid using insecure algorithms for cryptography.
OWASP_ASVS_403.V9_1_3.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
OWASP_ASVS_403.V9_1_3.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
OWASP_ASVS_403.V9_1_3.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
OWASP_ASVS_403.V9_1_3.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
OWASP_ASVS_403.V9_1_3.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
OWASP_ASVS_403.V9_1_3.ICA.msg.2=The cryptography algorithm is used without padding.
OWASP_ASVS_403.V9_1_3.MDSALT=Use hash functions with a salt
OWASP_ASVS_403.V9_1_3.MDSALT.msg.1=A salt is not added to the digest
OWASP_ASVS_403.V9_1_3.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
OWASP_ASVS_403.V9_1_3.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
OWASP_ASVS_403.V9_2_2=Verify that encrypted communications such as TLS is used for all inbound and outbound connections, including for management ports, monitoring, authentication, API, or web service calls, database, cloud, serverless, mainframe, external, and partner connections. The server must not fall back to insecure or unencrypted protocols.
OWASP_ASVS_403.V9_2_2.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
OWASP_ASVS_403.V9_2_2.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
OWASP_ASVS_403.V9_2_2.UOSC.msg.2=Make sure that the appropriate version of library is used.
OWASP_ASVS_403.V9_2_2.USC=Use the SSL-enabled version of classes when possible.
OWASP_ASVS_403.V9_2_2.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V9_2_2.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
OWASP_ASVS_403.V9_2_2.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_2_2.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_2_2.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_2_2.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_2_2.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
OWASP_ASVS_403.V9_2_2.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
PB=Possible Bugs
PB.API=API Usage and Implementation
PB.API.AECC=Avoid extending certain classes (custom rule)
PB.API.AECC.FORBIDDEN-label=Types which should not be subclassed (Specify fully qualified type names)\:
PB.API.AECC.msg.1=The class ''{0}'' should not extend ''{1}''.
PB.API.APT=Avoid using certain packages or types
PB.API.APT.AVOID_PACKAGE_EXPRS-label=Package or type to be avoided (name in regular expression)\:
PB.API.APT.INTERFACE_AVOID_PACKAGE_EXPRS-label=Package or type to be avoided (name in regular expression)\:
PB.API.APT.msg.1=Type ''{0}'' is {1}, and it is prohibited.
PB.API.APT.msg.2=Package ''{0}'' is {1}, and it is prohibited.
PB.API.APT.tab.CLASS_TAB-label=Class
PB.API.APT.tab.INTERFACE_TAB-label=Interface
PB.API.CMMT=Ensure that the types passed to "Collection" and "Map" methods match the types in those data structures.
PB.API.CMMT.msg.1=The type "{0}" is being passed to the ''{1}()'' method, but the "{2}" is declared to hold objects of type "{3}".
PB.API.DANNOT=Add the "@Deprecated" annotation to the declarations of deprecated members.
PB.API.DANNOT.msg.1=The member ''{0}'' is deprecated but does not use the "@Deprecated" annotation.
PB.API.DANNOT.msg.2=The type ''{0}'' is deprecated but does not use the "@Deprecated" annotation.
PB.API.DPRAPI=Do not use deprecated APIs
PB.API.DPRAPI.CHECK_SEE-label=Check for usage of deprecated APIs in Javadoc "@see" tags
PB.API.DPRAPI.CLASS_LIST-label=Deprecated class/interface list
PB.API.DPRAPI.FIELD_LIST-description=Deprecated field list (in form of &lt;fully qualified type name&gt;\#&lt;field name&gt;)
PB.API.DPRAPI.FIELD_LIST-label=Deprecated field list
PB.API.DPRAPI.IGNORE_NOT_LISTED-label=Ignore all types, methods, and fields not listed above
PB.API.DPRAPI.IGNORE_USER_DEFINED-label=Ignore user-defined types, methods, and fields
PB.API.DPRAPI.METHOD_LIST-description=Deprecated method list (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
PB.API.DPRAPI.METHOD_LIST-label=Deprecated method list
PB.API.DPRAPI.msg.1=Using deprecated {0}\: ''{1}''.
PB.API.DPRAPI.tab.CLASS-label=Class/Interface
PB.API.DPRAPI.tab.FIELD-label=Field
PB.API.DPRAPI.tab.METHOD-label=Method
PB.API.EJF=Do not create an empty JarFile entry or an empty ZipFile entry
PB.API.EJF.msg.1=The contents of the current {0} entry may not have been written to the {1} before this call to 'closeEntry()'.
PB.API.EQNL=Avoid calling 'equals(null)'
PB.API.EQNL.msg.1='equals()' called with 'null' argument.
PB.API.HNCN=Do not call the 'next' method from the 'hasNext' method of an Iterator
PB.API.HNCN.msg.1='next' method called from the 'hasNext' method of an Iterator.
PB.API.IUMS=Do not use "URL" objects in "Collections" or "Maps".
PB.API.IUMS.msg.1=A "URL" object is added to a "Collection".  Consider using "URI" instead.
PB.API.IUMS.msg.2=A "URL" object is used as the key in a "Map".  Consider using "URI" instead.
PB.API.IUMS.msg.3=This "{0}" object is created with the type parameter "URL".  Consider using "URI" instead.
PB.API.KOEH=Ensure that all types which are used as keys in Sets and Maps override the 'equals()' and 'hashCode()' methods.
PB.API.KOEH.IGNORED_TYPES-label=Allow the following types as keys in Sets and Maps (Specify fully qualified type names)\:
PB.API.KOEH.msg.1=The type ''{0}'' is inserted into a ''{1}'' but does not override {2}.
PB.API.KOEH.msg.2=The type ''{0}'' is used as a key in a ''{1}'' but does not override {2}.
PB.API.KOEH.msg.3=\ or 
PB.API.MASP=Assign 'protected' accessibility to 'readResolve()' and 'writeReplace()' methods in serializable classes
PB.API.MASP.msg.1=Method is not "protected"\: ''{0}''
PB.API.MOHK=Avoid using objects with dangerous implementations of 'equals()' or 'hashCode()' as keys in hashed data structures
PB.API.MOHK.msg.1=The type ''{0}'' accesses mutable or non-"final" fields in its ''equals()'' or ''hashCode()'' implementation, so it is dangerous to use in a ''{1}''.
PB.API.OF=Do not overload the 'finalize()' method
PB.API.OF.msg.1=Avoid overloading 'finalize()' method.
PB.API.ONS=Ensure method arguments are serializable
PB.API.ONS.CHECK_INTERFACES-label=Check implementations of interface method arguments (slow)
PB.API.ONS.IGNORE_PARAM_COLLECTION-label=Ignore Collections or Maps with Serializable type arguments
PB.API.ONS.IGNORE_TYPE_LIST-label=Ignore method arguments of the following types (specify as regular expression)\:
PB.API.ONS.SERIAL_LIST-label=List of methods to be checked\: 
PB.API.ONS.SERIAL_LIST.PB__API__ONS__SERIAL_LIST__COLUMN1-label=Type
PB.API.ONS.SERIAL_LIST.PB__API__ONS__SERIAL_LIST__COLUMN2-label=Method
PB.API.ONS.msg.1=This object of type ''{0}'' may not be serializable.
PB.API.ONS.msg.2=This object of type ''{0}'' may not be completely serializable.
PB.API.REP=Avoid using "." as a regular expression in 'String.replaceAll()' and 'String.replaceFirst()'
PB.API.REP.msg.1=Regular expression "{0}" will replace all string character to "{1}"
PB.API.UNI=Avoid improper casting of the results of the 'next' methods in the 'java.util.Random' class
PB.API.UNI.msg.1=You may have intended to use the ''nextInt()'' method instead of casting the result of this call to ''{0}()'' to an "int".
PB.API.VAFS=Ensure the correct number of arguments for varargs methods with format strings
PB.API.VAFS.msg.1=Number of arguments to method ''{0}'' does not match format string.
PB.API.VENDOR=Update values which may be using to compare with vendor properties
PB.API.VENDOR.msg.1=Make sure that ''Sun Microsystems Inc.'' you do not need changed to ''Oracle Corporation''.
PB.API.VENDOR.msg.2=Make sure that ''http\://java.sun.com/'' you do not need changed to ''http\://java.oracle.com/''.
PB.CLOSE=Unrestricted lock resource
PB.CLOSE.TABLE_HEADER-label=List of classes responsible for the resource and resource closing methods
PB.CLOSE.TABLE_HEADER.PB__CLOSE__TABLE_HEADER__COLUMN1-label=Class name
PB.CLOSE.TABLE_HEADER.PB__CLOSE__TABLE_HEADER__COLUMN2-label=Method name
PB.CLOSE.msg.1=Variable ''{0}'' may not have a close resource.
PB.CLOSE.msg.2=Variable ''{0}'' is rewrite without close resource.
PB.CUB=Confusing or Unintended Behavior
PB.CUB.ADE=Avoid dangling "else" statements
PB.CUB.ADE.INDENTATION-label=Only report a violation when the "else" statement is positioned incorrectly
PB.CUB.ADE.msg.1=Dangling "else" statement.
PB.CUB.AIPQ=Avoid using 'iterator()' with PriorityQueue and PriorityBlockingQueue.
PB.CUB.AIPQ.msg.1=Priority queue ''{0}'' calls "iterator()".
PB.CUB.AMCO=Avoid using multiple '\!' or '~' unary operators.
PB.CUB.AMCO.msg.1=''{0}'' uses multiple complement operators.
PB.CUB.APAM=Avoid passing arrays as arguments to methods that take non-array parameters.
PB.CUB.APAM.CHECK_TYPES-label=Check the following types\:
PB.CUB.APAM.CHECK_TYPES.0-label=Check Object array types
PB.CUB.APAM.CHECK_TYPES.1-label=Check all array types
PB.CUB.APAM.IGNORED_METHODS-label=Ignore the following methods\:
PB.CUB.APAM.msg.1=Array argument passed to method ''{0}''.
PB.CUB.ARCF=Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block.
PB.CUB.ARCF.ALSO_CATCH-label=Only flag return statements when they are in try-catch blocks
PB.CUB.ARCF.msg.1=Avoid multiple 'return' if a 'return' is present inside finally block.
PB.CUB.ATSF=Do not exit "finally" blocks abruptly.
PB.CUB.ATSF.ALLOW_RETHROW-label=allow rethrowing of exceptions from within "finally" blocks
PB.CUB.ATSF.CHECK_BREAK-label="break" and "continue" statements
PB.CUB.ATSF.CHECK_METH_THROW-label=method calls which throw uncaught exceptions
PB.CUB.ATSF.CHECK_RETURN-label="return" statements
PB.CUB.ATSF.CHECK_THROW-label="throw" statements
PB.CUB.ATSF.group.0-label=What to Check
PB.CUB.ATSF.msg.1=The enclosing "finally" block should not be exited with a "{0}" statement.
PB.CUB.ATSF.msg.2=This method call may cause the enclosing "finally" block to be exited because it throws a checked exception.
PB.CUB.ATSF.msg.3=This constructor call may cause the enclosing "finally" block to be exited because it throws a checked exception.
PB.CUB.AWP=Avoid confusing assignments to constructor arguments
PB.CUB.AWP.msg.1=Confusing assignment to a parameter, possibly should be "{0}" instead
PB.CUB.CILB=Do not put code other than logging code inside logging blocks.
PB.CUB.CILB.msg.1=This code may have been accidentally included in the enclosing logging block.
PB.CUB.CNVC=Avoid improper concatenation of characters with numbers.
PB.CUB.CNVC.msg.1=Addition performed with character ''{0}'' instead of concatenation.
PB.CUB.CTOR=Do not call non-"final", non-"static" and non-"private" methods from constructors.
PB.CUB.CTOR.CHECK_INDIRECT-label=Check indirect method calls to a depth of
PB.CUB.CTOR.CHECK_INDIRECT.PB__CUB__CTOR__CHECK_INDIRECT__COLUMN1-label=
PB.CUB.CTOR.CHECK_INDIRECT.PB__CUB__CTOR__CHECK_INDIRECT__COLUMN2-label=
PB.CUB.CTOR.msg.1=Non-"final", non-"static", and non-"private" method ''{0}()'' called from inside constructor ''{1}''.
PB.CUB.CTOR.msg.2=Non-"final", non-"static", and non-"private" method ''{0}()'' called indirectly from ''{1}'' inside constructor ''{2}''.
PB.CUB.CWRITE=Avoid usage of File.canWrite() method because it may returns true even if directory is not writable
PB.CUB.CWRITE.msg.1=Do not use File.canWrite() method because it may returns true even if directory is not writable.
PB.CUB.DCP=Do not use the "+" string concatenation operator to concatenate numbers; use it only to add numbers
PB.CUB.DCP.msg.1=String concatenation "+" is a possible typo for mathematical addition.
PB.CUB.EBI=Avoid erroneously placing statements outside blocks.
PB.CUB.EBI.CHECK_DO-label=Check "do-while" statements
PB.CUB.EBI.CHECK_ELSE-label=Check "else" statements
PB.CUB.EBI.CHECK_FOR-label=Check "for" statements
PB.CUB.EBI.CHECK_IF-label=Check "if" statements
PB.CUB.EBI.CHECK_WHILE-label=Check "while" statements
PB.CUB.EBI.msg.1=Statement has indentation matching or greater than the previous line, but is outside the ''{0}'' statement.
PB.CUB.EOOM=Avoid errors in overriding methods of "java.lang.Object"
PB.CUB.EOOM.CHECK_PARAMETERS-label=check method parameters
PB.CUB.EOOM.CHECK_PRIVATE-label=check "private" methods
PB.CUB.EOOM.CHECK_SPELLING-label=check spelling of method name
PB.CUB.EOOM.msg.1=Method ''{0}'' has wrong parameters to override Object method ''{1}''.
PB.CUB.EOOM.msg.2=Method ''{0}'' is spelled incorrectly to override Object method ''{1}''.
PB.CUB.FLVA=Do not assign loop control variables in the body of a "for" loop.
PB.CUB.FLVA.msg.1=The loop control variable ''{0}'' is modified in the loop body.
PB.CUB.IMC=Ensure overriding methods are not unintended covariants due to parameter type differences
PB.CUB.IMC.IGNORE_METHOD_TABLE-label=Methods to be ignored
PB.CUB.IMC.IGNORE_METHOD_TABLE.PB__CUB__IMC__IGNORE_METHOD_TABLE__COLUMN1-label=Type
PB.CUB.IMC.IGNORE_METHOD_TABLE.PB__CUB__IMC__IGNORE_METHOD_TABLE__COLUMN2-label=Method
PB.CUB.IMC.IGNORE_STATIC-label=Ignore "static" methods
PB.CUB.IMC.IGNORE_VISIBILITY_CHANGE-label=Ignore covariants that have visibility changes
PB.CUB.IMC.msg.1=Possible covariant of the method ''{0}'' defined in the class ''{1}''.
PB.CUB.IMM=Ensure "static" "final" fields are immutable.
PB.CUB.IMM.CHECK_PRIVATE-label=Report mutable non-final "static" fields that are not declared "private"
PB.CUB.IMM.IGNORE_TYPES-label=Ignore types
PB.CUB.IMM.msg.1="static" "final" field ''{0}'' of ''{1}'' type is mutable.
PB.CUB.IMM.msg.2="static" "final" field ''{0}'' of ''{1}'' type is mutable, since array elements could be modified even if the array is declared as "final".
PB.CUB.IMM.msg.3="static" mutable field ''{0}'' of ''{1}'' type is not declared "private".
PB.CUB.ISF=Inspect "private" "static" fields which may have mistakenly been declared "static"
PB.CUB.ISF.msg.1=''{0}'' might be mistakenly declared as "static".
PB.CUB.NCUCP=Do not assume that a Java char fully represents a Unicode code point
PB.CUB.NCUCP.METHODS_TABLE_HEADER-label=Methods to be checked
PB.CUB.NCUCP.METHODS_TABLE_HEADER.PB__CUB__NCUCP__METHODS_TABLE_HEADER__COLUMN1-label=Incorrect method (qualified name)
PB.CUB.NCUCP.METHODS_TABLE_HEADER.PB__CUB__NCUCP__METHODS_TABLE_HEADER__COLUMN2-label=Correct method (qualified name)
PB.CUB.NCUCP.msg.1=The ''{0}'' method does not support all Unicode characters and should be replaced with ''{1}''
PB.CUB.OSM=Ensure overloaded methods in superclass are overridden when overriding a method in subclass
PB.CUB.OSM.IGNORED_METHODS-label=Ignore the following methods\:
PB.CUB.OSM.IGNORE_CHAINED-label=Ignore "chained" methods
PB.CUB.OSM.IGNORE_EMPTY-label=Ignore methods with empty bodies
PB.CUB.OSM.msg.1=Method ''{0}'' overrides a superclass method, should also override\: ''{1}''.
PB.CUB.OVAM=Avoid overloading varargs methods
PB.CUB.OVAM.CHECK_PARAMETERS-label=Ignore overloaded methods with dissimilar parameters
PB.CUB.OVAM.CHECK_RETURN-label=Ignore overloaded methods with dissimilar return types
PB.CUB.OVAM.msg.1=Varargs method ''{0}'' is overloaded.
PB.CUB.PSFA=Avoid using "public static final" array fields
PB.CUB.PSFA.msg.1=Mutable "public static final" array field\: ''{0}''.
PB.CUB.RMO=Avoid referencing mutable fields
PB.CUB.RMO.IGNORE_LIST-label=Ignore fields of the following classes\: (Glob expression)
PB.CUB.RMO.PACKAGE_FIELD-label=package-private
PB.CUB.RMO.PRIVATE_FIELD-label=private
PB.CUB.RMO.PROTECTED_FIELD-label=protected
PB.CUB.RMO.PUBLIC_FIELD-label=public
PB.CUB.RMO.STATIC_FINAL_FIELD_ONLY-label=Check "static final" fields only
PB.CUB.RMO.group.0-label=Check fields of accessibility
PB.CUB.RMO.msg.1=''{0}'' is a mutable field.
PB.CUB.SAC=Do not use "char" arrays in "String" concatenations
PB.CUB.SAC.msg.1="char" array ''{0}'' is used in 'String' concatenation.
PB.CUB.SBC=Do not use a "switch" statement with a bad "case"
PB.CUB.SBC.IGNORE_EMPTY-label=Ignore "case" statements with empty bodies
PB.CUB.SBC.IGNORE_LAST_SWITCH_CASE-label=Ignore last "switch" case
PB.CUB.SBC.msg.1="{0}" is missing either "break", "return", or "/* falls through */".
PB.CUB.SBC.msg.2="default" case is missing either "break", "return", or "/* falls through */".
PB.CUB.SRAD=Specify @Retention for annotation type declarations
PB.CUB.SRAD.msg.1=Annotation ''{0}'' does not specify @Retention.
PB.CUB.STRCC=Parenthesize complex expressions in 'print()' or 'println()' statements
PB.CUB.STRCC.msg.1=Complex expression in ''{0}()'' statement is not parenthesized. The expression is now interpreted as \: {1}.
PB.CUB.TOCTOU=Avoid Time-of-check Time-of-use (TOCTOU) Race Condition
PB.CUB.TOCTOU.BLOCKING_TABLE_HEADER-label=Blocking instructions
PB.CUB.TOCTOU.BLOCKING_TABLE_HEADER.PB__CUB__TOCTOU__BLOCKING_TABLE_HEADER__COLUMN1-label=Blocking instruction
PB.CUB.TOCTOU.MAX_INSTRUCTIONS_COUNT-label=Maximum number of method calls between the pairs of methods
PB.CUB.TOCTOU.PAIRS_TABLE_HEADER-label=Pairs of methods
PB.CUB.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN1-label=First instruction
PB.CUB.TOCTOU.PAIRS_TABLE_HEADER.PB__CUB__TOCTOU__PAIRS_TABLE_HEADER__COLUMN2-label=Second instruction
PB.CUB.TOCTOU.msg.1=This call is not preceeded by\: ''{0}'' within {1} method calls.
PB.CUB.TOCTOU.msg.2=This call is not preceeded by\: ''{0}'' before calling blocking instruction\: ''{1}''.
PB.CUB.TOCTOU.msg.3=This call is not preceeded by\: ''{0}'' within block scope.
PB.CUB.TOS=Avoid invoking 'toString()' on array variables
PB.CUB.TOS.msg.1=''toString()'' in variable ''{0}'' may return unreadable string.
PB.CUB.TOS.msg.2=''toString()'' in array creation ''{0}'' may return unreadable string.
PB.CUB.TOS.msg.3=''toString()'' in method invocation ''{0}'' may return unreadable string.
PB.CUB.TVOM=Avoid type variable parameters when calling overloaded methods.
PB.CUB.TVOM.CHECK_PARAMETERS-label=Ignore overloaded methods with dissimilar parameters
PB.CUB.TVOM.CHECK_RETURN-label=Ignore overloaded methods with dissimilar return types
PB.CUB.TVOM.msg.1=Type variable in call to overloaded method ''{0}''.
PB.CUB.UEIC=Do not use '\=\=' or '\!\=' to compare objects
PB.CUB.UEIC.CHECK_ARRAYS-label=Check for calls to the 'equals()' method of class Object on arrays
PB.CUB.UEIC.CHECK_EQUALS_METHOD-label=Check comparisons in equals() methods
PB.CUB.UEIC.CHECK_STATICFINAL-label=Check comparisons to "static" "final" objects
PB.CUB.UEIC.IGNORE_TYPES-label=Allow "\=\=" and "\!\=" operators when compared object is type\:
PB.CUB.UEIC.SCOPE-label=Scope of checking\:
PB.CUB.UEIC.SCOPE.0-label=All objects
PB.CUB.UEIC.SCOPE.1-label=Only 'String' objects 
PB.CUB.UEIC.msg.1="\=\=" is used when comparing Objects. 'equals()' should be used instead.
PB.CUB.UEIC.msg.2="\!\=" is used when comparing Objects. 'equals()' should be used instead.
PB.CUB.UEIC.msg.3="\=\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
PB.CUB.UEIC.msg.4="\!\=" is used when comparing 'String' Objects. 'equals()' should be used instead.
PB.CUB.UEIC.msg.5=The 'equals()' method of class 'Object' is used when comparing array Objects. 'java.util.Arrays.equals (Object[], Object[])' should be used instead.
PB.EAR=Ensure that non-"void" methods have a return value other than empty arrays and "null".
PB.EAR.FLAG_LEVEL.0-label=Flag only methods where every return value is the literal "null".
PB.EAR.FLAG_LEVEL.1-label=Flag methods where every return value is either the literal "null" or an empty array.
PB.EAR.IGNORE_ABSTRACT_CLASSES-label=Ignore method which are members of abstract classes or overriding abstract methods from abstract classes.
PB.EAR.IGNORE_INTERFACES-label=Ignore interface implementation methods.
PB.EAR.msg.1=Method ''{0}()'' may not have any return values other than empty arrays and "null".
PB.EAR.msg.2=Method ''{0}()'' may not have any return values other than "null".
PB.IKICO=Ensure that keys used in comparison operations are immutable
PB.IKICO.msg.1=A mutable field "{1}" is used in the "{0}" method.
PB.LOGIC=Logical Errors
PB.LOGIC.AIL=Avoid infinite loops
PB.LOGIC.AIL.DEPTH_ITERATOR-label=Maximum depth of checking for nested calls to 'Iterator.next()' or 'Iterator.remove()'
PB.LOGIC.AIL.msg.1=Possible infinite loop\: the loop's condition will always evaluate to "true", and there is no other exit from the loop.
PB.LOGIC.AIL.msg.2=Possible infinite loop\: the loop's condition will always evaluate to 'true' and there is no other exit from the loop.
PB.LOGIC.AIL.msg.3=Possible infinite loop\: the loop''s condition uses the variable "{0}", but this variable is not modified within the loop''s body.
PB.LOGIC.AMOI=Avoid using the wrong index variable to access an array or List element.
PB.LOGIC.AMOI.WHAT_TO_CHECK-label=What to Flag as a Violation
PB.LOGIC.AMOI.WHAT_TO_CHECK.0-label=Flag all cases where multiple index variables are used to access an array or List within a loop
PB.LOGIC.AMOI.WHAT_TO_CHECK.1-label=Only flag cases where the index variable does not match the loop condition
PB.LOGIC.AMOI.msg.1=The index variable ''{0}'' may be the wrong index for the array ''{1}''.  You may have meant to use the variable ''{2}'' instead
PB.LOGIC.AMOI.msg.2=The index variable ''{0}'' may be the wrong index for the array ''{1}''.  You may have meant to use one of the following variables instead\: {2}
PB.LOGIC.AMOI.msg.3=''{0}'' is not the only index variable used for the array ''{1}'' in the enclosing loop(s).  Make sure that this is correct.
PB.LOGIC.AMOI.msg.4=The index variable ''{0}'' may be the wrong index for the List ''{1}''.  You may have meant to use the variable ''{2}'' instead
PB.LOGIC.AMOI.msg.5=The index variable ''{0}'' may be the wrong index for the List ''{1}''.  You may have meant to use one of the following variables instead\: {2}
PB.LOGIC.AMOI.msg.6=''{0}'' is not the only index variable used for the List ''{1}'' in the enclosing loop(s).  Make sure that this is correct.
PB.LOGIC.AOBO=Avoid off-by-one errors in loop conditions
PB.LOGIC.AOBO.msg.1=Loop condition may be off by one.
PB.LOGIC.AULV=Avoid loop variables which are not used in the condition of the loop.
PB.LOGIC.AULV.BREAK-label=Do not report any violations for loops containing a "break" or "return" statement.
PB.LOGIC.AULV.msg.1=The loop variable ''{0}'' is not used in the condition of the loop.
PB.LOGIC.CPI=Do not check whether the result of "String.indexOf()" is positive or non-positive
PB.LOGIC.CPI.msg.1=This expression checks whether the result of "String.indexOf()" is positive or non-positive (rather than negative or non-negative).
PB.LOGIC.CRRV=Check the return value of methods which read or skip input
PB.LOGIC.CRRV.CHECKED_METHOD_LIST-description=Methods to be checked\: (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
PB.LOGIC.CRRV.CHECKED_METHOD_LIST-label=Methods to be checked\:
PB.LOGIC.CRRV.msg.1=The return value of this call to ''{0}()'' is not checked.
PB.LOGIC.DJNCR=Do not discard the result of a call to "readLine()" after checking that the return value is non-null
PB.LOGIC.DJNCR.msg.1=The result of this call to "readLine()" is compared with "null" and then discarded.
PB.LOGIC.EQLC=Use 'getClass()' or "instanceof" within 'equals()' and 'compareTo()' method implementations.
PB.LOGIC.EQLC.ACCEPTABLE_WAYS-label=Acceptable ways of checking the parameter's type
PB.LOGIC.EQLC.ACCEPTABLE_WAYS.0-label=getClass() only
PB.LOGIC.EQLC.ACCEPTABLE_WAYS.1-label=instanceof only
PB.LOGIC.EQLC.ACCEPTABLE_WAYS.2-label=Either Way
PB.LOGIC.EQLC.CHECK_COMPARETO-label=Check 'compareTo()' methods
PB.LOGIC.EQLC.CHECK_EQUALS-label=Check 'equals()' methods
PB.LOGIC.EQLC.IGNORE_COMPARETO_PARAM-label=Ignore type parameterized 'compareTo()' methods
PB.LOGIC.EQLC.msg.1=''{0}()'' implementation does not use ''getClass()''.
PB.LOGIC.EQLC.msg.2=''{0}()'' implementation does not use the "instanceof" operator.
PB.LOGIC.EQLC.msg.3=''{0}()'' implementation does not use ''getClass()'' or "instanceof".
PB.LOGIC.EQUS=Do not call 'equals()' methods that always return false
PB.LOGIC.EQUS.msg.1=''equals()'' method would always return false, since calling object is type ''{0}'' and argument is type ''{1}''.
PB.LOGIC.EQUS.msg.2=''equals()'' method would always return false, since calling object is type anonymous class that extends ''{0}'' and argument is type ''{1}''.
PB.LOGIC.EQUS.msg.3='equals()' method would always return false, since argument is null.
PB.LOGIC.EQUS.msg.4=''equals()'' method would always return false, since calling object is type ''{0}'' and argument is type ''{1}''.
PB.LOGIC.EQUS.msg.5=''equals()'' method would always return false, since calling object and argument do not refer to the same object.
PB.LOGIC.ESO=Avoid calling 'equals()' with same object.
PB.LOGIC.ESO.msg.1=''{0}'' calls "equals()" method with itself.
PB.LOGIC.FLRC=Avoid infinite recursive method calls
PB.LOGIC.FLRC.IGNORE_COND_STMT-label=Allow recursive calls within the first statement if the call is in the "then" or "else" part of a conditional expression.
PB.LOGIC.FLRC.IGNORE_OVERRIDDEN-label=Ignore calls to potentially overridden methods where the calling object is not "this".
PB.LOGIC.FLRC.ONLY_FIRST_STMT-label=Only check the first statement of each method.
PB.LOGIC.FLRC.msg.1=Method ''{0}'' {1}calls itself within the first statement of its definition, which may result in an infinite recursion.
PB.LOGIC.FLRC.msg.2=Method ''{0}'' {1}calls itself using the same arguments that were passed in, which may result in an infinite recursion.
PB.LOGIC.FLRC.msg.3=Method ''{0}'' {1}calls itself and does not have any parameters, which may result in an infinite recursion.
PB.LOGIC.INDEX=Avoid bugs in the usage of loop variables.
PB.LOGIC.INDEX.msg.1=You may have intended to use a variable from the innermost loop instead of variable ''{0}'' from an outer loop.
PB.LOGIC.INDEX.msg.2=The variable(s) used in the update portion of this "for" statement do not match those used in the initialization and condition.
PB.LOGIC.LLM=Ensure that the logging level checked matches the level of the called logging method.
PB.LOGIC.LLM.msg.1=The logging level checked in this method call is "{0}", but the logging method called has the level "{1}".
PB.LOGIC.LLM.msg.2=The logging level checked in this comparison is "{0}", but the logging method called has the level "{1}".
PB.LOGIC.OAMC=Ensure that the objects used within a loop's condition are properly accessed within the loop's body.
PB.LOGIC.OAMC.msg.1=''hasNext()'' is called on the variable "{0}" in the loop''s condition, but ''next()'' is never called on this variable in the loop''s body.
PB.LOGIC.OAMC.msg.2=''size()'' is called on the variable "{0}" in the loop''s condition, but ''get()'' is never called on this variable in the loop''s body.
PB.LOGIC.OAMC.msg.3=The length of the array "{0}" is accessed in the loop''s condition, but no elements of the array are accessed in the loop''s body.
PB.LOGIC.OOR=Avoid out of range comparisons
PB.LOGIC.OOR.CHECK_BYTE-label=Check 'byte' comparisons
PB.LOGIC.OOR.CHECK_CHAR-label=Check 'char' comparisons
PB.LOGIC.OOR.CHECK_INT-label=Check 'int' comparisons
PB.LOGIC.OOR.CHECK_SHORT-label=Check 'short' comparisons
PB.LOGIC.OOR.msg.1="{2}" variable ''{0}'' is compared to {1}, which is not within "{2}" upper and lower bounds.
PB.LOGIC.OOR.msg.2="{2}" variable ''{0}'' cannot be less than "{2}" lower bound\: {1}.
PB.LOGIC.OOR.msg.3="{2}" variable ''{0}'' cannot be greater than "{2}" upper bound\: {1}.
PB.LOGIC.OOR.msg.4="{1}" value is compared to {0}, which is not within "{1}" upper and lower bounds.
PB.LOGIC.ROM=Make sure that methods are invoked on the correct object.
PB.LOGIC.ROM.INVOKED_ON_ANOTHER-label=Report only if a compatible method is invoked on another object at least twice.
PB.LOGIC.ROM.msg.1=No method is called on the ''{0}'' object. Inspect the object usage to make sure this is not a bug.
PB.LOGIC.SG=Ensure get/set methods are accessing the correct variables
PB.LOGIC.SG.CHECK_GETTER-label=Check 'get' methods
PB.LOGIC.SG.CHECK_SETTER-label=Check 'set' methods
PB.LOGIC.SG.IGNORE_THROW_GET-label=Ignore 'get' methods which throw an exception.
PB.LOGIC.SG.IGNORE_THROW_SET-label=Ignore 'set' methods which throw an exception.
PB.LOGIC.SG.msg.1='Set' method ''{0}'' is not setting variable ''{1}''.
PB.LOGIC.SG.msg.2='Get' method ''{0}'' is not getting variable ''{1}''.
PB.NAECS=Include a 'case' statement for each constant of an 'enum' type in 'switch' statements.
PB.NAECS.msg.1=This ''switch'' statement is missing a ''case'' for the following ''enum'' constant\: {0}.
PB.NAECS.msg.2=This ''switch'' statement is missing a ''case'' for the following ''enum'' constants\: {0}.
PB.NUM=Numerical Errors
PB.NUM.AIC=Avoid implicit casts from integer data types to floating point data types.
PB.NUM.AIC.msg.1=This expression will be implicitly cast from an "{0}" to a "{1}" because the called method requires a "{1}" argument.
PB.NUM.AIC.msg.2=This expression will be implicitly cast from a "{0}" to a "{1}" because the called method requires a "{1}" argument.
PB.NUM.AIC.msg.3=This expression will be implicitly cast from an "{0}" to a "{1}" because the expression is assigned to a "{1}" variable.
PB.NUM.AIC.msg.4=This expression will be implicitly cast from a "{0}" to a "{1}" because the expression is assigned to a "{1}" variable.
PB.NUM.BBDCC=Do not pass floating point values to the 'BigDecimal' constructor
PB.NUM.BBDCC.msg.1=The 'BigDecimal' constructor is called with a floating point value as an argument
PB.NUM.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
PB.NUM.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
PB.NUM.CACO=Avoid using compound assignment operators in cases which may cause overflow.
PB.NUM.CACO.msg.1=Compound assignment operators should not be used when the destination type is ''{0}''.
PB.NUM.CACO.msg.2=Compound assignment operators should not be used when the destination type is ''{0}'' and the operand type is ''{1}''.
PB.NUM.CLP=Do not cast primitive data types to lower precision
PB.NUM.CLP.msg.1="{0}" type cast to lower precision "{1}" type.
PB.NUM.CMP=Possible integer overflow in a compare or compareTo method.
PB.NUM.CMP.msg.1=Remove subtraction from ''{0}'' method.
PB.NUM.DCF=Do not compare floating point types
PB.NUM.DCF.IGNORE_INFINITY-label=Ignore floating point comparisons to "infinity".
PB.NUM.DCF.msg.1=Floating point comparisons for equality can produce unexpected results.
PB.NUM.FPLI=Do not use floating point variables as loop indices.
PB.NUM.FPLI.IGNORED_OPERATORS-label=Ignore variables which are compared using "&lt;" or "&gt;" in the conditional expression
PB.NUM.FPLI.msg.1=The floating point variable ''{0}'' should not be used as an index for this loop.
PB.NUM.ICO=Avoid calculations which result in overflow or NaN
PB.NUM.ICO.msg.1=This calculation will not produce an accurate result because it will result in overflow.
PB.NUM.ICO.msg.2=This calculation will throw 'java.lang.ArithmeticException'.
PB.NUM.IDCD=Do not assign the result of an integer division to a floating point variable
PB.NUM.IDCD.msg.1=Assigning the result of this integer division to a floating point variable will not increase the precision of the result.
PB.NUM.IOF=Use unsigned right shift instead of division when overflow is possible.
PB.NUM.IOF.msg.1=This integer computation may cause overflow.
PB.NUM.NAN=Avoid comparisons to Double.NaN or Float.NaN.
PB.NUM.NAN.msg.1=Avoid comparison to ''{0}''.
PB.NUM.NIA=Do not initialize array dimensions with negative numbers
PB.NUM.NIA.msg.1=Array dimension is negative \: {0}.
PB.NUM.PMRWLED=Provide methods to read and write little-endian data
PB.NUM.PMRWLED.msg.1=The ''{0}'' is insecure, because it cannot handle little-endian data.
PB.NUM.UBD=Do not use "float" and "double" if exact answers are required
PB.NUM.UBD.msg.1=''{0}'' used in a high-precision calculation or comparison is of type "double" or "float"
PB.PDCL=Place "default" as the last case of the "switch" statement
PB.PDCL.msg.1="default" case is not the last case.
PB.PDS=Provide "default\:" for each "switch" statement
PB.PDS.msg.1="switch" is missing "default\:" label.
PB.RE=Runtime Exceptions
PB.RE.ACTI=Do not add a collection to itself
PB.RE.ACTI.msg.1=The collection ''{0}'' is added to itself.
PB.RE.ACTI.msg.2=The "Map" ''{0}'' is added as a key to itself.
PB.RE.ACTI.msg.3=The "Map" ''{0}'' is added as a value to itself.
PB.RE.AMFSL=Avoid modifying fixed-size Collections
PB.RE.AMFSL.msg.1=Modification of fixed-size Collection ''{0}'' will generate a runtime exception.
PB.RE.AQA=Avoid calling the 'add()' method of a Queue
PB.RE.AQA.CHECK_BOUNDED-label=Check only bounded Queues
PB.RE.AQA.msg.1=Queue ''{0}'' calls "add()" here.
PB.RE.ASE=Avoid possible ArrayStoreExceptions
PB.RE.ASE.msg.1=Array ''{0}'' initialized to array type ''{1}'', but is assigned type ''{2}'' here.
PB.RE.CAI=Always check parameters before use in array access
PB.RE.CAI.IGNORE_PRIVATE-label=Ignore private methods
PB.RE.CAI.msg.1=Array ''{0}'' accessed with ''{1}''.
PB.RE.CIOR=Check the return value of calls to 'String.indexOf()' before passing this value to other "String" methods.
PB.RE.CIOR.msg.1=The return value of this call to 'indexOf()' may not be checked before it is passed to another "String" method.
PB.RE.CIOR.msg.2=The return value of this call to 'indexOf()' is not checked before it is passed to another "String" method.
PB.RE.CTNSE=Ensure 'Iterator.next()' method implementations throw 'NoSuchElementException'
PB.RE.CTNSE.msg.1=This 'next()' method might not be able to throw 'NoSuchElementException'.
PB.RE.IDRL=Check whether or not "readLine()" returned null before dereferencing the return value
PB.RE.IDRL.msg.1=The result of a call to "readLine()" is dereferenced without first checking whether the result is null.
PB.RE.IIAE=Make sure the IllegalArgumentException message matches the code logic
PB.RE.IIAE.msg.1=Unmatched variable name\: ''{0}'' used in "if" expression but ''{1}'' used in exception message.
PB.RE.IIAE.msg.2=Logic in "if" conditional expression does not match the ''IllegalArgumentException'' message.
PB.RE.IOSS=Use the "fromIndex" argument of 'indexOf()' when necessary.
PB.RE.IOSS.msg.1=It may be necessary to specify the "fromIndex" argument for this call to 'indexOf()' since it is passed in the second argument to 'substring()'.
PB.RE.IOSS.msg.2=It may be necessary to specify the "fromIndex" argument for this call to 'indexOf()' since it may be passed in the second argument to 'substring()'.
PB.RE.ISEM=Do not call 'String.equals(constant)' or 'String.equalsIgnoreCase(constant)'
PB.RE.ISEM.CHECK_NON_STRING-label=Check non-String objects
PB.RE.ISEM.IGNORE_TYPES-label=Ignore the following types and their subtypes (Specify fully qualified name).
PB.RE.ISEM.msg.1={0} is called, use {1} instead.
PB.RE.JLAY=Avoid using methods add() from JLayer class
PB.RE.JLAY.msg.1=Do not use methods add() in JLayer objects because always throws runtime exception.
PB.RE.NCMD=Ensure that dereferenced variables match variables which were previously checked for "null"
PB.RE.NCMD.msg.1=The variable dereferenced here ("{0}") does not match the variable which was just checked for "null" ("{1}").
PB.RE.PNPD=Avoid dereferencing null objects
PB.RE.PNPD.msg.1=The object ''{0}'' may be set to null.  This method call may cause a NullPointerException.
PB.RE.PNPD.msg.2=The throws clause throws null, which will cause a NullPointerException.
PB.RE.RCODE=When used HttpURLConnection always check return value from the getResponseCode() methods before call getInputStream()
PB.RE.RCODE.msg.1=Value returned from the getResponseCode() method is not checked before calling getInputStream().
PB.RE.VRNULL=Avoid methods returning "null" value
PB.RE.VRNULL.CHECK_LIST-label=Methods are not allowed to return "null" value
PB.RE.VRNULL.msg.1=Method ''{0}'' is not allowed to return "null" value.
PB.TYPO=Typographical Errors
PB.TYPO.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
PB.TYPO.AECB.CHECK_CATCH-label=Check "catch" block.
PB.TYPO.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
PB.TYPO.AECB.CHECK_FINALLY-label=Check "finally" block.
PB.TYPO.AECB.CHECK_TRY-label=Check "try" block.
PB.TYPO.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
PB.TYPO.AECB.msg.1="try" block has an empty body.
PB.TYPO.AECB.msg.2="catch" block has an empty body.
PB.TYPO.AECB.msg.3="finally" block has an empty body.
PB.TYPO.ASI=Avoid assignment within a condition
PB.TYPO.ASI.CHECK_BOOLEAN_ONLY-label=Flag assignments to "boolean" objects only
PB.TYPO.ASI.msg.1=Assignment within an "if" condition.
PB.TYPO.ASI.msg.2=Assignment within a loop condition.
PB.TYPO.CSI=Ensure that the correct "super" method is invoked.
PB.TYPO.CSI.msg.1=You may have meant to call ''super.{0}()'' here instead of ''super.{1}()''.
PB.TYPO.DAV=Avoid assigning same variable in the fall-through switch case.
PB.TYPO.DAV.msg.1=variable ''{0}'' has been assigned in previous switch case.
PB.TYPO.EB=Avoid control statements with empty bodies
PB.TYPO.EB.CHECK_TYPE_TABLE-label=Flag as empty body\:
PB.TYPO.EB.CHECK_TYPE_TABLE.PB__TYPO__EB__CHECK_TYPE_TABLE__COLUMN1-label=Conditional statement type
PB.TYPO.EB.CHECK_TYPE_TABLE.PB__TYPO__EB__CHECK_TYPE_TABLE__COLUMN2-label=empty statement
PB.TYPO.EB.CHECK_TYPE_TABLE.PB__TYPO__EB__CHECK_TYPE_TABLE__COLUMN3-label=empty block
PB.TYPO.EB.SAME_LINE_ONLY-label=Report only if the empty statement is on the same line as the control statement.
PB.TYPO.EB.msg.1=''{0}'' statement with an empty body.
PB.TYPO.IMO=Ensure the overriding method name does not have a typo
PB.TYPO.IMO.IGNORE_LIST-label=Method name pairs to be ignored (Regular Expressions)
PB.TYPO.IMO.IGNORE_LIST.PB__TYPO__IMO__IGNORE_LIST__COLUMN1-label=
PB.TYPO.IMO.IGNORE_LIST.PB__TYPO__IMO__IGNORE_LIST__COLUMN2-label=
PB.TYPO.IMO.msg.1=Possible typo overriding method ''{0}()''\: ''{1}()'' should be ''{2}()''.
PB.TYPO.IMO.msg.2=Possible typo overriding method ''{0}()''\: ''{1}'' should be ''{2}''.
PB.TYPO.NAMING=Do not give methods and fields the same name as the enclosing class or each other
PB.TYPO.NAMING.CHECK_FIELDS_C-label=check fields with same name as class
PB.TYPO.NAMING.CHECK_FIELDS_M-label=check fields with same name as member methods
PB.TYPO.NAMING.CHECK_METHODS-label=check methods with same name as class
PB.TYPO.NAMING.msg.1=Method "{0}" has the same name as the enclosing class.
PB.TYPO.NAMING.msg.2=Field "{0}" has the same name as the enclosing class.
PB.TYPO.NAMING.msg.3=Field "{0}" has the same name as a member method.
PB.TYPO.RSK=Avoid having more than one "getter" or "setter" method for the same field
PB.TYPO.RSK.DUP_GET-label=Allow multiple "getter" methods if the return types are different.
PB.TYPO.RSK.DUP_SET-label=Allow multiple "setter" methods if the parameter types are different.
PB.TYPO.RSK.IGNORE_OVER-label=Ignore overriding and implementing methods.
PB.TYPO.RSK.msg.1=There is another "getter" method defined for field ''{0}''\: ''{1}()''.
PB.TYPO.RSK.msg.2=There is another "setter" method defined for field ''{0}''\: ''{1}()''.
PB.TYPO.TLS=Ensure "switch" statements do not contain typos
PB.TYPO.TLS.msg.1=Text label ''{0}'' may be a typo for ''{1}''.
PB.TYPO.WT=Ensure that arguments passed to Java wrapper classes do not contain typos
PB.TYPO.WT.msg.1=Possible typo in argument passed to wrapper class.
PB.USC=Useless Code
PB.USC.CC=Avoid conditional expressions that always evaluate to a constant value
PB.USC.CC.IGNORE_SINGLE_CONSTANT-label=Ignore "static final boolean" constants and "boolean" literals
PB.USC.CC.SCOPE_OF_CHECKING-label=Scope of checking\:
PB.USC.CC.SCOPE_OF_CHECKING.0-label=All conditional expressions
PB.USC.CC.SCOPE_OF_CHECKING.1-label=Only expressions that have a logical operator (&&&&, ||, && or |) embedded in them
PB.USC.CC.msg.1=Conditional expression always evaluates to "{0}".
PB.USC.EC=Avoid empty classes
PB.USC.EC.IGNORE_TYPE_LIST-label=Ignore method arguments of the following types (specify as regular expression)\:
PB.USC.EC.msg.1=Empty class ''{0}'' is declared.
PB.USC.FCBS=Avoid using "private" fields which are never given a meaningful value.
PB.USC.FCBS.CHECK_PRIMITIVES-label=Check fields of primitive types
PB.USC.FCBS.IGNORE_ANNOT-label=Ignore annotations that correspond to these qualified names
PB.USC.FCBS.IGNORE_FINAL-label=Ignore "final" fields
PB.USC.FCBS.msg.1=The field ''{0}'' is used but is never assigned a non-"null" value.
PB.USC.FCBS.msg.2=The field ''{0}'' is used but is never explicitly assigned a value.
PB.USC.FCBS.msg.3=The "{0}" ''{1}'' is read, but no values are ever added to it.
PB.USC.NACC=Avoid classes with no accessible members
PB.USC.NACC.msg.1=Class ''{0}'' has no accessible members.
PB.USC.NASSIG=Ensure method and constructor return values are used
PB.USC.NASSIG.CHECK_CONSTRUCTORS-label=Check constructor calls
PB.USC.NASSIG.CHECK_IGNORE-label=Specify whether to check or ignore certain methods and constructors
PB.USC.NASSIG.CHECK_IGNORE.0-label=Check the following methods and constructors\:
PB.USC.NASSIG.CHECK_IGNORE.1-label=Ignore the following methods and constructors\:
PB.USC.NASSIG.CHECK_METHODS-label=Check method calls
PB.USC.NASSIG.CHECK_TABLE-label=Specify types and methods/constructors as a Glob expression (use * as wildcard)
PB.USC.NASSIG.CHECK_TABLE.PB__USC__NASSIG__CHECK_TABLE__COLUMN1-label=Type
PB.USC.NASSIG.CHECK_TABLE.PB__USC__NASSIG__CHECK_TABLE__COLUMN2-label=Method/Constructor
PB.USC.NASSIG.IGNORE_NON_JDK-label=Ignore methods and constructors which are not defined in the "java" or "javax" packages.
PB.USC.NASSIG.IGNORE_TABLE-label=Specify types and methods/constructors as a Glob expression (use * as wildcard)
PB.USC.NASSIG.IGNORE_TABLE.PB__USC__NASSIG__IGNORE_TABLE__COLUMN1-label=Type
PB.USC.NASSIG.IGNORE_TABLE.PB__USC__NASSIG__IGNORE_TABLE__COLUMN2-label=Method/Constructor
PB.USC.NASSIG.ONLY_IMMUTABLE-label=Only check method calls on immutable types where all of the parameter types are immutable.
PB.USC.NASSIG.ONLY_IMMUTABLE_NOT_UPDATE-label=Only check method calls which are used to update the state of immutable variables.
PB.USC.NASSIG.msg.1=Return value from method ''{0}'' is not used.
PB.USC.NASSIG.msg.2=Return value from method ''{0}'' is not used, immutable variable ''{1}'' has not been updated.
PB.USC.NASSIG.msg.3=Return value from constructor ''{0}'' is not used.
PB.USC.NASSIG.tab.CHECK_IGNORE_TAB-label=Check/Ignore
PB.USC.NASSIG.tab.GENERAL_TAB-label=General
PB.USC.OI=Avoid increment and decrement statements which have no effect.
PB.USC.OI.msg.1=This {0} of ''{1}'' will have no effect, as it is overwritten in an assignment statement.
PB.USC.OI.msg.2=This post-{0} of the local variable ''{1}'' will have no effect, as it is executed in a return statement.
PB.USC.SAFL=Avoid self assignments/initializations to fields and/or local variables
PB.USC.SAFL.CHECK_FIELDS-label=Check fields
PB.USC.SAFL.CHECK_LOCALS-label=Check local variables and parameters
PB.USC.SAFL.msg.1=Avoid self assignment that has no effect\: ''{0}''.
PB.USC.SAFL.msg.2=Avoid self initialization that has no effect\: ''{0}''.
PB.USC.SAFL.msg.3=Avoid redirect self assignment that has no effect\: ''{0}''.
PB.USC.SAFL.msg.4=Avoid redirect self initialization that has no effect\: ''{0}''.
PB.USC.UIF=Avoid unreachable "else if" and "else" cases
PB.USC.UIF.IGNORE_CONSTANTS-label=Ignore "static final boolean" constants and "boolean" literals
PB.USC.UIF.msg.1=The "else" statement is unreachable because of previous branches.
PB.USC.UIF.msg.2=The "else" condition always evaluates to "false" because of previous branches.
PCIDSS32=Payment Card Industry Data Security Standard 3.2
PCIDSS32.651=6.5.1 Injection flaws
PCIDSS32.651.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
PCIDSS32.651.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
PCIDSS32.651.XPIJ=Avoid XPath injection when evaluating XPath queries
PCIDSS32.651.XPIJ.CHECK_VAR_RESOLVER-label=Check if 'XPathVariableResolver' is not set in XPath objects
PCIDSS32.651.XPIJ.msg.1=Avoid using variable ''{0}'' in XPath query.
PCIDSS32.651.XPIJ.msg.2='XPathVariableResolver' is not set in XPath variable ''{0}''.
PCIDSS32.6510=6.5.10 Broken authentication and session management
PCIDSS32.6510.DNSL=Avoid DNS lookups for decision making
PCIDSS32.6510.DNSL.msg.1=DNS lookup checked here.
PCIDSS32.6510.HGRSI=Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class
PCIDSS32.6510.HGRSI.msg.1=The 'getRequestedSessionId' method may return untrusted data
PCIDSS32.6510.ISL=Always call 'HttpSession.invalidate()' before 'LoginContext.login()'
PCIDSS32.6510.ISL.msg.1=Login without session invalidation.
PCIDSS32.6510.RUIM=Ensure proper session expiration
PCIDSS32.6510.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
PCIDSS32.6510.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
PCIDSS32.6510.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
PCIDSS32.6510.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
PCIDSS32.6510.UOSC.msg.2=Make sure that the appropriate version of library is used.
PCIDSS32.653=6.5.3 Insecure cryptographic storage
PCIDSS32.653.ACMD=Avoid using custom MessageDigest implementations
PCIDSS32.653.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
PCIDSS32.653.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
PCIDSS32.653.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
PCIDSS32.653.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
PCIDSS32.653.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
PCIDSS32.653.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
PCIDSS32.653.AISSAJAVA.msg.1=The cryptographic class is insecure.
PCIDSS32.653.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
PCIDSS32.653.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
PCIDSS32.653.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
PCIDSS32.653.CKTS=Avoid using cryptographic keys which are too short.
PCIDSS32.653.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
PCIDSS32.653.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
PCIDSS32.653.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
PCIDSS32.653.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
PCIDSS32.653.ICA=Avoid using insecure algorithms for cryptography.
PCIDSS32.653.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
PCIDSS32.653.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
PCIDSS32.653.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
PCIDSS32.653.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
PCIDSS32.653.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
PCIDSS32.653.ICA.msg.2=The cryptography algorithm is used without padding.
PCIDSS32.653.MDSALT=Use hash functions with a salt
PCIDSS32.653.MDSALT.msg.1=A salt is not added to the digest
PCIDSS32.653.PLC=Avoid storing sensitive data in plaintext in a cookie
PCIDSS32.653.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
PCIDSS32.653.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
PCIDSS32.653.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
PCIDSS32.653.PLC.msg.1=Do not store important to safety data in cookie.
PCIDSS32.653.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
PCIDSS32.653.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
PCIDSS32.653.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
PCIDSS32.654=6.5.4 Insecure communications
PCIDSS32.654.CONSEN=Do not log confidential or sensitive information
PCIDSS32.654.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
PCIDSS32.654.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
PCIDSS32.654.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
PCIDSS32.654.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
PCIDSS32.654.HCCK=Avoid using hard-coded cryptographic keys
PCIDSS32.654.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
PCIDSS32.654.HCCK.msg.1=Hard-coded cryptographic key here.
PCIDSS32.654.MCMDU=MessageDigest objects must process the data with the 'update' method
PCIDSS32.654.MCMDU.msg.1=The 'update' method is not called on the ''{0}'' variable after the message digest object is obtained
PCIDSS32.654.SIKG=Initialize KeyGenerator instances 
PCIDSS32.654.SIKG.msg.1=The ''{0}'' object of the KeyGenerator class is created but not initialized
PCIDSS32.654.USC=Use the SSL-enabled version of classes when possible.
PCIDSS32.654.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
PCIDSS32.654.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
PCIDSS32.654.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
PCIDSS32.654.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
PCIDSS32.654.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
PCIDSS32.654.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
PCIDSS32.654.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
PCIDSS32.654.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
PCIDSS32.655=6.5.5 Improper error handling
PCIDSS32.655.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
PCIDSS32.655.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
PCIDSS32.655.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
PCIDSS32.655.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
PCIDSS32.655.AECB=Avoid "try", "catch" and "finally" blocks with empty bodies
PCIDSS32.655.AECB.CHECK_CATCH-label=Check "catch" block.
PCIDSS32.655.AECB.CHECK_COMMENTS-label=Disallow blocks with comments as content.
PCIDSS32.655.AECB.CHECK_FINALLY-label=Check "finally" block.
PCIDSS32.655.AECB.CHECK_TRY-label=Check "try" block.
PCIDSS32.655.AECB.REGULAR_EXPRESSION-label=Regular expression of exception variable name. (enclosing catch block would be ignored if matches)
PCIDSS32.655.AECB.msg.1="try" block has an empty body.
PCIDSS32.655.AECB.msg.2="catch" block has an empty body.
PCIDSS32.655.AECB.msg.3="finally" block has an empty body.
PCIDSS32.655.ARCF=Avoid using 'return's inside 'finally blocks if thare are other 'return's inside the try-catch block.
PCIDSS32.655.ARCF.ALSO_CATCH-label=Only flag return statements when they are in try-catch blocks
PCIDSS32.655.ARCF.msg.1=Avoid multiple 'return' if a 'return' is present inside finally block.
PCIDSS32.655.CETS=Catch all exceptions which may be thrown within Servlet methods
PCIDSS32.655.CETS.msg.1=The method ''{0}()'' is declared to throw the exception type ''{1}'', but this exception is not caught.
PCIDSS32.655.CRRV=Check the return value of methods which read or skip input
PCIDSS32.655.CRRV.CHECKED_METHOD_LIST-description=Methods to be checked\: (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
PCIDSS32.655.CRRV.CHECKED_METHOD_LIST-label=Methods to be checked\:
PCIDSS32.655.CRRV.msg.1=The return value of this call to ''{0}()'' is not checked.
PCIDSS32.655.LGE=Ensure all exceptions are either logged with a standard logger or rethrown
PCIDSS32.655.LGE.CHECK_EXCEPT_FULL_PASSED-label=Check if the exception passed to the logging method is complete
PCIDSS32.655.LGE.CHECK_EXCEPT_LOGGED-label=Check if the exception is passed into the logging method call
PCIDSS32.655.LGE.CHECK_EXCEPT_THROW-label=Check if the caught exception is passed to a new exception or rethrown
PCIDSS32.655.LGE.FLAG_LEVEL-label=Catch clause should contain\:
PCIDSS32.655.LGE.FLAG_LEVEL.0-label=Logging method.
PCIDSS32.655.LGE.FLAG_LEVEL.1-label=Logging method or "throw" exception statement.
PCIDSS32.655.LGE.FLAG_LEVEL.2-label=Logging method, comment, or "throw" exception statement.
PCIDSS32.655.LGE.IGNORE_LIST-label=Ignore exception variables matching the following regular expression(s)\:
PCIDSS32.655.LGE.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
PCIDSS32.655.LGE.LOG_METHOD_EXPRESSION-label=Logging method name in regular expression
PCIDSS32.655.LGE.msg.1=The exception is not logged in the "catch" clause.
PCIDSS32.655.LGE.msg.2=The exception is neither logged nor rethrown in the "catch" clause.
PCIDSS32.655.LGE.msg.3=The exception is neither logged nor rethrown in the "catch" clause. Add a comment to the clause if this is expected.
PCIDSS32.655.LGE.msg.4=The ''{0}'' exception is not passed to the logging method called in the "catch" clause.
PCIDSS32.655.LGE.msg.5=The information passed from the ''{0}'' exception to the logging method may be incomplete.
PCIDSS32.655.LGE.msg.6=The ''{0}'' exception is not rethrown in the "catch" block or passed to the new exception as an argument.
PCIDSS32.655.LGE.tab.IGNORE_LIST_TAB-label=Ignore List
PCIDSS32.655.LGE.tab.LOGGERS_TAB-label=Loggers
PCIDSS32.655.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
PCIDSS32.655.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
PCIDSS32.655.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
PCIDSS32.655.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
PCIDSS32.655.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
PCIDSS32.655.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
PCIDSS32.655.SIO=Avoid calling print methods of 'System.err' or 'System.out'
PCIDSS32.655.SIO.METHOD_SKIP_LIST-label=Exclude methods
PCIDSS32.655.SIO.SCANNED_CLASS_TABLE-label=Include classes
PCIDSS32.655.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
PCIDSS32.655.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
PCIDSS32.655.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
PCIDSS32.657=6.5.7 Cross-site scripting (XSS)
PCIDSS32.657.CDBV=Canonicalize data before validation.
PCIDSS32.657.CDBV.CANON_METHS-description=Canonicalization method names (in regular expressions) [qualified name of declaring type\#method name]
PCIDSS32.657.CDBV.CANON_METHS-label=Canonicalization method names (in regular expressions)
PCIDSS32.657.CDBV.CHECK_TYPES-description=Only check calls with the following argument types [regular expressions for fully qualified class name]
PCIDSS32.657.CDBV.CHECK_TYPES-label=Only check calls with the following argument types
PCIDSS32.657.CDBV.VALID_CLASSES-description=Only check calls within the following classes [regular expressions for fully qualified class name]
PCIDSS32.657.CDBV.VALID_CLASSES-label=Only check calls within the following classes
PCIDSS32.657.CDBV.VALID_METHS-description=Validation method names (in regular expressions) [qualified name of declaring type\#method name]
PCIDSS32.657.CDBV.VALID_METHS-label=Validation method names (in regular expressions)
PCIDSS32.657.CDBV.msg.1=The data in ''{0}'' may not have been canonicalized before being validated.
PCIDSS32.657.CDBV.msg.2=The return value of this call to ''{0}'' may not have been canonicalized before being validated.
PCIDSS32.658=6.5.8 Improper access control
PCIDSS32.658.AUSS=Avoid using "SELECT *" in SQL queries.
PCIDSS32.658.AUSS.msg.1=This String contains "SELECT *", make sure it is not being used in a database query.
PCIDSS32.658.CAM=Keep all authentication methods centralized to enforce consistency
PCIDSS32.658.CAM.DANGEROUS_METHOD_LIST-description=Authentication method names (in regular expressions) [qualified name of declaring type\#method name]
PCIDSS32.658.CAM.DANGEROUS_METHOD_LIST-label=Authentication method names (in regular expressions)
PCIDSS32.658.CAM.ENCLOSING_METHOD_LIST-description=Centralized authentication method names (in regular expressions) [qualified name of declaring type\#method name]
PCIDSS32.658.CAM.ENCLOSING_METHOD_LIST-label=Centralized authentication method names (in regular expressions)
PCIDSS32.658.CAM.msg.1=''{0}()'' is not allowed to be invoked within ''{1}()'', it should only be invoked inside centralized authentication method declarations.
PCIDSS32.658.CAM.msg.2=''{0}()'' is not allowed to be invoked unless enclosed by centralized access control methods.
PCIDSS32.658.PBFA=Ensure sufficient protection against multiple failed authentication attempts
PCIDSS32.658.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
PCIDSS32.658.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
PCIDSS32.658.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
PCIDSS32.658.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
PCIDSS32.658.PERMIT=Avoid EJB 3 methods without security annotations
PCIDSS32.658.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
PCIDSS32.658.SSM=Ensure that an appropriate security manager is set
PCIDSS32.658.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
PCIDSS40=Payment Card Industry Data Security Standard 4.0
PCIDSS40.6241=6.2.4.1 Injection attacks
PCIDSS40.6241.AEAF=Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'.
PCIDSS40.6241.AEAF.msg.1=Consider extending 'DynaValidatorForm' or 'DynaValidatorActionForm'
PCIDSS40.6241.AEAF.msg.2=Consider extending 'ValidatorForm' or 'ValidatorActionForm'
PCIDSS40.6241.AUXD=Avoid parsing untrusted data with XMLDecoder
PCIDSS40.6241.AUXD.msg.1=The XMLDecoder class is used.
PCIDSS40.6241.DCEMSL=Avoid untrusted input when logging messages with Seam Logging API
PCIDSS40.6241.DCEMSL.CLASS_FIELDS_ARE_SAFE-label=Consider class fields to be secure
PCIDSS40.6241.DCEMSL.msg.1=The ''{0}'' method called on the object of the Log class takes a dangerous argument.
PCIDSS40.6241.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
PCIDSS40.6241.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
PCIDSS40.6241.XPIJ=Avoid XPath injection when evaluating XPath queries
PCIDSS40.6241.XPIJ.CHECK_VAR_RESOLVER-label=Check if 'XPathVariableResolver' is not set in XPath objects
PCIDSS40.6241.XPIJ.msg.1=Avoid using variable ''{0}'' in XPath query.
PCIDSS40.6241.XPIJ.msg.2='XPathVariableResolver' is not set in XPath variable ''{0}''.
PCIDSS40.6242=6.2.4.2 Attacks on data and data structures
PCIDSS40.6242.SIS=Do not change the input streams of 'java.lang.System' in a web component.
PCIDSS40.6242.SIS.DEPTH-label=Maximum depth to look for "System.setIn()" calls
PCIDSS40.6242.SIS.msg.1=Call to ''System.{0}()'' in a web component.
PCIDSS40.6242.SIS.msg.2=Method ''{0}'' indirectly calls "System.setIn()" in a web component.
PCIDSS40.6243=6.2.4.3 Attacks on cryptography usage
PCIDSS40.6243.ACMD=Avoid using custom MessageDigest implementations
PCIDSS40.6243.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
PCIDSS40.6243.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
PCIDSS40.6243.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
PCIDSS40.6243.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
PCIDSS40.6243.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
PCIDSS40.6243.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
PCIDSS40.6243.AISSAJAVA.msg.1=The cryptographic class is insecure.
PCIDSS40.6243.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
PCIDSS40.6243.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
PCIDSS40.6243.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
PCIDSS40.6243.CKTS=Avoid using cryptographic keys which are too short.
PCIDSS40.6243.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
PCIDSS40.6243.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
PCIDSS40.6243.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
PCIDSS40.6243.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
PCIDSS40.6243.HCCK=Avoid using hard-coded cryptographic keys
PCIDSS40.6243.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
PCIDSS40.6243.HCCK.msg.1=Hard-coded cryptographic key here.
PCIDSS40.6243.ICA=Avoid using insecure algorithms for cryptography.
PCIDSS40.6243.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
PCIDSS40.6243.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
PCIDSS40.6243.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
PCIDSS40.6243.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
PCIDSS40.6243.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
PCIDSS40.6243.ICA.msg.2=The cryptography algorithm is used without padding.
PCIDSS40.6243.MDSALT=Use hash functions with a salt
PCIDSS40.6243.MDSALT.msg.1=A salt is not added to the digest
PCIDSS40.6243.PLC=Avoid storing sensitive data in plaintext in a cookie
PCIDSS40.6243.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
PCIDSS40.6243.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
PCIDSS40.6243.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
PCIDSS40.6243.PLC.msg.1=Do not store important to safety data in cookie.
PCIDSS40.6243.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
PCIDSS40.6243.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
PCIDSS40.6243.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
PCIDSS40.6244=6.2.4.4 Attacks on business logic
PCIDSS40.6244.ASAPI=Prevent the scripting API from executing untrusted code
PCIDSS40.6244.ASAPI.REPORT_ON_EVAL-label=Report violation on eval method invocation
PCIDSS40.6244.ASAPI.msg.1=Ensure that the use of the scripting API does not allow untrusted dynamic code execution.
PCIDSS40.6244.ASAPI.msg.2=The eval() method is called on the scriptEngine object and may execute untrusted dynamic code.
PCIDSS40.6244.CDBV=Canonicalize data before validation.
PCIDSS40.6244.CDBV.CANON_METHS-description=Canonicalization method names (in regular expressions) [qualified name of declaring type\#method name]
PCIDSS40.6244.CDBV.CANON_METHS-label=Canonicalization method names (in regular expressions)
PCIDSS40.6244.CDBV.CHECK_TYPES-description=Only check calls with the following argument types [regular expressions for fully qualified class name]
PCIDSS40.6244.CDBV.CHECK_TYPES-label=Only check calls with the following argument types
PCIDSS40.6244.CDBV.VALID_CLASSES-description=Only check calls within the following classes [regular expressions for fully qualified class name]
PCIDSS40.6244.CDBV.VALID_CLASSES-label=Only check calls within the following classes
PCIDSS40.6244.CDBV.VALID_METHS-description=Validation method names (in regular expressions) [qualified name of declaring type\#method name]
PCIDSS40.6244.CDBV.VALID_METHS-label=Validation method names (in regular expressions)
PCIDSS40.6244.CDBV.msg.1=The data in ''{0}'' may not have been canonicalized before being validated.
PCIDSS40.6244.CDBV.msg.2=The return value of this call to ''{0}'' may not have been canonicalized before being validated.
PCIDSS40.6244.DCSRFJAVA=Do not disable CSRF protection
PCIDSS40.6244.DCSRFJAVA.msg.1=CSRF protection is disabled.
PCIDSS40.6244.SCHTTP=Mark cookies as HttpOnly
PCIDSS40.6244.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
PCIDSS40.6244.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
PCIDSS40.6244.ZOIS=Inspect usage of scripting API
PCIDSS40.6244.ZOIS.msg.1=Scripting API usage.
PCIDSS40.6245=6.2.4.5 Attacks on access control mechanisms
PCIDSS40.6245.CQRO=Use "read-only" AccessMode for Castor queries
PCIDSS40.6245.CQRO.msg.1=Query ''{0}'' calls "execute()" with no AccessMode.
PCIDSS40.6245.CQRO.msg.2=Query ''{0}'' calls "execute()" with AccessMode ''{1}''.
PCIDSS40.6245.DNSL=Avoid DNS lookups for decision making
PCIDSS40.6245.DNSL.msg.1=DNS lookup checked here.
PCIDSS40.6245.HGRSI=Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class
PCIDSS40.6245.HGRSI.msg.1=The 'getRequestedSessionId' method may return untrusted data
PCIDSS40.6245.ISL=Always call 'HttpSession.invalidate()' before 'LoginContext.login()'
PCIDSS40.6245.ISL.msg.1=Login without session invalidation.
PCIDSS40.6245.PERMIT=Avoid EJB 3 methods without security annotations
PCIDSS40.6245.PERMIT.msg.1=Method without permit (@RolesAllowed, @PermitAll, @DenyAll) annotations.
PCIDSS40.6245.RUIM=Ensure proper session expiration
PCIDSS40.6245.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
PCIDSS40.6245.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
PCIDSS40.6245.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
PCIDSS40.6245.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
PCIDSS40.6245.UOSC.msg.2=Make sure that the appropriate version of library is used.
PORT=Portability
PORT.DNHCP=Do not hard code an absolute pathname when calling a constructor from the 'File' class
PORT.DNHCP.msg.1=Hard coded pathname passed to a 'File' constructor.
PORT.ENV=Do not use the non-portable 'System.getenv()' method.
PORT.ENV.IGNORE_1_5-label=Ignore code which uses JDK 1.5 or later
PORT.ENV.msg.1=Non-portable method ''System.getenv()'' called to get the environment variable ''{0}''.
PORT.ENV.msg.2=Non-portable method 'System.getenv()' called.
PORT.EXEC=Do not use "Runtime.exec()".
PORT.EXEC.msg.1=Non-portable 'Runtime.exec()' used
PORT.HCNA=Do not hard-code IP addresses and port numbers.
PORT.HCNA.IP-label=Do not hard-code IP addresses
PORT.HCNA.PORT-label=Do not hard-code port numbers
PORT.HCNA.msg.1=Hard-coded IP address ''{0}''.
PORT.HCNA.msg.2=Hard-coded port number ''{0}''.
PORT.NATV=Do not use user-defined "native" methods.
PORT.NATV.msg.1=User-defined "native" method\: {0}.
PORT.PSC=Use "File.pathSeparator" or "File.pathSeparatorChar" instead of the corresponding literals
PORT.PSC.msg.1=The literal {0} used instead of "{1}".
SECURITY=Security
SECURITY.BV=Backdoor Vulnerabilities
SECURITY.BV.ACL=Do not access the class loader in a web component.
SECURITY.BV.ACL.DEPTH-label=Maximum depth to look for "getClassLoader()" calls
SECURITY.BV.ACL.msg.1=Call to ''{0}'' in a web component.
SECURITY.BV.ACL.msg.2=Method ''{0}'' indirectly calls "getClassLoader()" in a web component.
SECURITY.BV.ADT=Inspect usage of 'Date', 'Time' objects and 'System.currentTimeMillis()' method invocations
SECURITY.BV.ADT.CHECK_CURRENT_MILLIS-label=Flag 'System.currentTimeMillis()' invocations.
SECURITY.BV.ADT.CHECK_SQL_DATE-label=Flag 'java.sql.Date' Objects
SECURITY.BV.ADT.CHECK_SQL_TIME-label=Flag 'java.sql.Time' Objects
SECURITY.BV.ADT.CHECK_SUB_CLASS-label=Flag classes that extend the checked classes above
SECURITY.BV.ADT.CHECK_UTIL_DATE-label=Flag 'java.util.Date' Objects
SECURITY.BV.ADT.SAFE_LIST-label=Classes to be ignored (fully qualified name, "java.sql.Date" instead of "Date" for example.)
SECURITY.BV.ADT.group.0-label=Date and time object
SECURITY.BV.ADT.group.1-label=Current time method invocation
SECURITY.BV.ADT.msg.1=Inspect usage of the ''{0}'' object ''{1}''.
SECURITY.BV.ADT.msg.2=Inspect that 'System.currentTimeMillis()' is used securely.
SECURITY.BV.AUG=Inspect usage of 'getName()' from 'java.lang.Class' object.
SECURITY.BV.AUG.IGNORE_LOGGER-label=Ignore calls passed to logging methods
SECURITY.BV.AUG.IGNORE_PRINT-label=Ignore calls passed to "print" methods
SECURITY.BV.AUG.IGNORE_THROW-label=Ignore calls passed to throw statements
SECURITY.BV.AUG.msg.1=Inspect usage of "Class.getName()" to ensure it is not used to compare classes.
SECURITY.BV.CQRO=Use "read-only" AccessMode for Castor queries
SECURITY.BV.CQRO.msg.1=Query ''{0}'' calls "execute()" with no AccessMode.
SECURITY.BV.CQRO.msg.2=Query ''{0}'' calls "execute()" with AccessMode ''{1}''.
SECURITY.BV.ENFL=Ensure all sensitive method invocations are logged
SECURITY.BV.ENFL.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
SECURITY.BV.ENFL.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
SECURITY.BV.ENFL.POST_LOG_METHODS-label=Method invocations that need logging in next statement
SECURITY.BV.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN1-label=Type
SECURITY.BV.ENFL.POST_LOG_METHODS.SECURITY__BV__ENFL__POST_LOG_METHODS__COLUMN2-label=Method
SECURITY.BV.ENFL.PRE_LOG_METHODS-label=Method invocations that need logging in previous statement
SECURITY.BV.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN1-label=Type
SECURITY.BV.ENFL.PRE_LOG_METHODS.SECURITY__BV__ENFL__PRE_LOG_METHODS__COLUMN2-label=Method
SECURITY.BV.ENFL.msg.1=''{0}'' is invoked without being logged in the previous statement.
SECURITY.BV.ENFL.msg.2=''{0}'' is invoked without being logged in the next statement.
SECURITY.BV.ENFL.tab.LOG_TAG-label=Loggers
SECURITY.BV.ENFL.tab.POST_LOG_TAG-label=Next statement
SECURITY.BV.ENFL.tab.PRE_LOG_TAG-label=Previous statement
SECURITY.BV.NSF=Do not call 'Socket.setSocketImplFactory()' or 'URL.setURLStreamHandlerFactory()' in a web component.
SECURITY.BV.NSF.DEPTH-label=Maximum depth to look for set factory calls
SECURITY.BV.NSF.msg.1=Call to ''{0}()'' in a web component.
SECURITY.BV.NSF.msg.2=Method ''{0}'' indirectly calls set factory method in a web component.
SECURITY.BV.PCFM=Wrap "privileged" method invocations in "final" methods.
SECURITY.BV.PCFM.CHECKED_METHODS-label=Check the following method invocations\:
SECURITY.BV.PCFM.CHECKED_METHODS.SECURITY__BV__PCFM__CHECKED_METHODS__COLUMN1-label=Type (regular expression)
SECURITY.BV.PCFM.CHECKED_METHODS.SECURITY__BV__PCFM__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
SECURITY.BV.PCFM.msg.1=Method ''{0}'' calls ''{1}'' and should be declared "final".
SECURITY.BV.PCPM=Wrap "privileged" method invocations in "private" methods.
SECURITY.BV.PCPM.CHECKED_METHODS-label=Check the following method invocations\:
SECURITY.BV.PCPM.CHECKED_METHODS.SECURITY__BV__PCPM__CHECKED_METHODS__COLUMN1-label=Type (regular expression)
SECURITY.BV.PCPM.CHECKED_METHODS.SECURITY__BV__PCPM__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
SECURITY.BV.PCPM.msg.1=Method ''{0}'' calls ''{1}'' and should be declared "private".
SECURITY.BV.PDLC=Avoid using dynamically loaded classes in "privileged" code blocks.
SECURITY.BV.PDLC.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
SECURITY.BV.PDLC.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
SECURITY.BV.PDLC.msg.1=Method ''{0}'' may dynamically load an untrusted class.
SECURITY.BV.SYSP=Do not access or set System properties.
SECURITY.BV.SYSP.msg.1={0} the System property "{1}".
SECURITY.BV.SYSP.msg.2={0} a System property.
SECURITY.BV.SYSP.msg.3={0} the System properties.
SECURITY.DRC=Deadlocks and Race Conditions
SECURITY.DRC.THR=Do not use threads in web components.
SECURITY.DRC.THR.DEPTH-label=Maximum depth to look for Thread usage
SECURITY.DRC.THR.msg.1=Thread created in a web component.
SECURITY.DRC.THR.msg.2=Method ''{0}'' indirectly creates Thread in a web component.
SECURITY.EAB=Erratic Application Behavior
SECURITY.EAB.ACWC=Avoid calling specified methods from web components and EJBs
SECURITY.EAB.ACWC.CHECK_EJB-label=Check EJBs
SECURITY.EAB.ACWC.CHECK_WEB_COMPONENT-label=Check web components
SECURITY.EAB.ACWC.DEPTH-label=Maximum depth to check [1-5]
SECURITY.EAB.ACWC.EJB_TABLE-label=Check the following\:
SECURITY.EAB.ACWC.EJB_TABLE.SECURITY__EAB__ACWC__EJB_TABLE__COLUMN1-label=Method to flag (Type\#Name)
SECURITY.EAB.ACWC.WEB_COMPONENT_TABLE-label=Check the following\:
SECURITY.EAB.ACWC.WEB_COMPONENT_TABLE.SECURITY__EAB__ACWC__WEB_COMPONENT_TABLE__COLUMN1-label=Package
SECURITY.EAB.ACWC.WEB_COMPONENT_TABLE.SECURITY__EAB__ACWC__WEB_COMPONENT_TABLE__COLUMN2-label=Type to check
SECURITY.EAB.ACWC.WEB_COMPONENT_TABLE.SECURITY__EAB__ACWC__WEB_COMPONENT_TABLE__COLUMN3-label=Method to flag (Type\#Name)
SECURITY.EAB.ACWC.msg.1=Method ''{0}'' called.
SECURITY.EAB.ACWC.msg.2=Method ''{0}'' called indirectly from ''{1}''.
SECURITY.EAB.ACWC.tab.EJB-label=EJBs
SECURITY.EAB.ACWC.tab.WEB_COMPONENT-label=Web components
SECURITY.EAB.AWT=Do not use AWT classes in Web components.
SECURITY.EAB.AWT.DEPTH-label=Maximum depth to look for calls to AWT methods
SECURITY.EAB.AWT.msg.1=Call to AWT method ''{0}'' in a web component.
SECURITY.EAB.AWT.msg.2=Method ''{0}'' indirectly calls an AWT method in a web component.
SECURITY.EAB.CBA=Do not pass byte arrays to ObjectOutputStream in the 'writeObject()' method
SECURITY.EAB.CBA.msg.1=byte array ''{0}'' should not be passed to write(byte[]) without cloning it first.
SECURITY.EAB.CMP=Do not compare Class objects by name.
SECURITY.EAB.CMP.msg.1=Class object comparison by name.
SECURITY.EAB.CPCL=Enforce returning a defensive copy in 'clone()' methods
SECURITY.EAB.CPCL.msg.1=Field ''{0}'' is not initialized as a defensive copy.
SECURITY.EAB.JVM=Do not stop the JVM in a web component.
SECURITY.EAB.JVM.DEPTH-label=Maximum depth to look for "System.exit()" calls
SECURITY.EAB.JVM.msg.1=Call to ''System.{0}()'' in a web component.
SECURITY.EAB.JVM.msg.2=Method ''{0}'' indirectly calls "System.exit()" in a web component.
SECURITY.EAB.LDP=Limit the number of "AccessController.doPrivileged" calls per class.
SECURITY.EAB.LDP.MAX_CALLS-label=Limit the number of 'AccessController.doPrivileged' calls per class to
SECURITY.EAB.LDP.msg.1=Class ''{0}'' has greater than ''{1}'' calls to "AccessController.doPrivileged".
SECURITY.EAB.MPT=Do not pass user-given mutable objects directly to certain types
SECURITY.EAB.MPT.CHECKED_CONSTRUCTORS-label=Check for values passed to new instances of the following types\:
SECURITY.EAB.MPT.CHECK_ARRAYS-label=Check arrays
SECURITY.EAB.MPT.CHECK_MUTABLE_TYPES-label=Check mutable types
SECURITY.EAB.MPT.CHECK_PACKAGE-label=Check "package-private" methods
SECURITY.EAB.MPT.CHECK_PROTECTED-label=Check "protected" methods
SECURITY.EAB.MPT.CHECK_PUBLIC-label=Check "public" methods
SECURITY.EAB.MPT.group.0-label=Types to check
SECURITY.EAB.MPT.msg.1=New instance of type ''{0}'' is passed mutable parameter ''{1}'' directly.
SECURITY.EAB.OROM=Implement 'readObject()' and 'writeObject()' for all 'Serializable' classes.
SECURITY.EAB.OROM.CHECK_FOR_READ-label=Check that the 'readObject()' method is implemented in all serializable classes.
SECURITY.EAB.OROM.CHECK_FOR_WRITE-label=Check that the 'writeObject()' method is implemented in all serializable classes.
SECURITY.EAB.OROM.IGNORE_TYPES-label=Ignore types extending or implementing the following types (Specify fully qualified names)\:
SECURITY.EAB.OROM.MUST_BE_FINAL-label=Make sure the 'readObject()' method is 'final'.
SECURITY.EAB.OROM.msg.1=Serializable class ''{0}'' does not implement 'readObject()'.
SECURITY.EAB.OROM.msg.2=Serializable class ''{0}'' implements 'readObject()', but this method is not 'final'.
SECURITY.EAB.OROM.msg.3=Serializable class ''{0}'' does not implement 'writeObject()'.
SECURITY.EAB.PCL=Limit the number of lines in "privileged" code blocks.
SECURITY.EAB.PCL.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
SECURITY.EAB.PCL.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
SECURITY.EAB.PCL.NUMBER_LINES-label=Limit number of lines in "run()" method to
SECURITY.EAB.PCL.msg.1="run()" method of class ''{0}'' has greater than ''{1}'' lines.
SECURITY.EAB.SF=Do not declare "static" fields in web components.
SECURITY.EAB.SF.IGNORED_TYPES-label=Ignore fields of the following types\:
SECURITY.EAB.SF.msg.1="static" field declared in a web component\: ''{0}''.
SECURITY.EAB.SIS=Do not change the input streams of 'java.lang.System' in a web component.
SECURITY.EAB.SIS.DEPTH-label=Maximum depth to look for "System.setIn()" calls
SECURITY.EAB.SIS.msg.1=Call to ''System.{0}()'' in a web component.
SECURITY.EAB.SIS.msg.2=Method ''{0}'' indirectly calls "System.setIn()" in a web component.
SECURITY.EAB.SMO=Do not store user-given mutable objects directly into variables
SECURITY.EAB.SMO.CHECK_ARRAYS-label=Check arrays
SECURITY.EAB.SMO.CHECK_MUTABLE_TYPES-label=Check mutable types
SECURITY.EAB.SMO.CHECK_PACKAGE-label=Check "package-private" methods
SECURITY.EAB.SMO.CHECK_PROTECTED-label=Check "protected" methods
SECURITY.EAB.SMO.CHECK_PUBLIC-label=Check "public" methods
SECURITY.EAB.SMO.group.0-label=Types to check
SECURITY.EAB.SMO.msg.1=This assignment may store the original parameter ''{0}'' rather than a copy of the parameter into the field ''{1}''.
SECURITY.EAB.SMO.msg.2=This assignment may store the original parameter ''{0}'' rather than a copy of the parameter into the variable ''{1}''.
SECURITY.EAB.SPFF=Inspect 'static' fields which may have intended to be declared 'static final'.
SECURITY.EAB.SPFF.PACKAGE_FIELD-label=package-private
SECURITY.EAB.SPFF.PRIMITIVE_CHECK-label=primitive type
SECURITY.EAB.SPFF.PRIMITIVE_WRAPPER_CHECK-label=primitive wrapper type
SECURITY.EAB.SPFF.PRIVATE_FIELD-label=private
SECURITY.EAB.SPFF.PROTECTED_FIELD-label=protected
SECURITY.EAB.SPFF.PUBLIC_FIELD-label=public
SECURITY.EAB.SPFF.STRING_CHECK-label=java.lang.String
SECURITY.EAB.SPFF.group.0-label=Check fields of type
SECURITY.EAB.SPFF.group.1-label=Check fields of accessibility
SECURITY.EAB.SPFF.msg.1=Field ''{0}'' may have been intended to be "static final".
SECURITY.ESD=Exposing Sensitive Data
SECURITY.ESD.ACW=Avoid writing to Consoles
SECURITY.ESD.ACW.msg.1=Method ''{0}'' writes to Console ''{1}''.
SECURITY.ESD.ACW.msg.2=Method ''{0}'' writes to Console.
SECURITY.ESD.CONSEN=Do not log confidential or sensitive information
SECURITY.ESD.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
SECURITY.ESD.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
SECURITY.ESD.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
SECURITY.ESD.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
SECURITY.ESD.CSD=Clear sensitive data after use.
SECURITY.ESD.CSD.msg.1=''{0}'' is assigned sensitive data but never cleared.
SECURITY.ESD.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
SECURITY.ESD.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
SECURITY.ESD.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
SECURITY.ESD.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
SECURITY.ESD.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
SECURITY.ESD.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
SECURITY.ESD.PLC=Avoid storing sensitive data in plaintext in a cookie
SECURITY.ESD.PLC.TABLE_HEADER-label=List of RegExp to check key in cookie
SECURITY.ESD.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN1-label=Check values
SECURITY.ESD.PLC.TABLE_HEADER.SECURITY__ESD__PLC__TABLE_HEADER__COLUMN2-label=Key in cookie (RegExp)
SECURITY.ESD.PLC.msg.1=Do not store important to safety data in cookie.
SECURITY.ESD.PLC.msg.2=Do not store sensitive data in plaintext in cookie.
SECURITY.ESD.RA=Avoid methods that might expose internal representations by returning arrays or other mutable fields
SECURITY.ESD.RA.CHECK_ARRAYS-label=Check arrays
SECURITY.ESD.RA.CHECK_MUTABLE_TYPES-label=Check mutable types
SECURITY.ESD.RA.msg.1=Exposing the internal representation of ''{0}'' through the array ''{1}''.
SECURITY.ESD.RA.msg.2=Exposing the internal representation of ''{0}'' through the mutable field ''{1}''.
SECURITY.ESD.SDM=Store sensitive data in mutable objects.
SECURITY.ESD.SDM.CHECKED_METHODS-label=Methods returning "char[]" password\:
SECURITY.ESD.SDM.CHECKED_METHODS.SECURITY__ESD__SDM__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
SECURITY.ESD.SDM.CHECKED_METHODS.SECURITY__ESD__SDM__CHECKED_METHODS__COLUMN2-label=Method (regular expression)
SECURITY.ESD.SDM.CHECK_JPASSWORDFIELD_STRING-label=Check JPasswordField methods which return a String value
SECURITY.ESD.SDM.CHECK_STRING_INITIALIZE-label=Check Strings initialized with a "char[]" password
SECURITY.ESD.SDM.msg.1=''{0}'' returns a String, should use "getPassword()" instead.
SECURITY.ESD.SDM.msg.2=String initialized with password here, should leave as "char[]".
SECURITY.ESD.SDM.msg.3=String initialized with password ''{0}'' here, should leave as "char[]".
SECURITY.ESD.SIF=Inspect instance fields of serializable objects to make sure they will not expose sensitive information
SECURITY.ESD.SIF.IGNORE_FINAL-label=Ignore "final" fields
SECURITY.ESD.SIF.msg.1=Inspect field ''{0}'' to ensure it will not expose sensitive data.
SECURITY.ESD.SIO=Avoid calling print methods of 'System.err' or 'System.out'
SECURITY.ESD.SIO.METHOD_SKIP_LIST-label=Exclude methods
SECURITY.ESD.SIO.SCANNED_CLASS_TABLE-label=Include classes
SECURITY.ESD.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
SECURITY.ESD.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
SECURITY.ESD.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
SECURITY.ESD.SNFD=Do not expose data with a 'FileNotFound' exception
SECURITY.ESD.SNFD.msg.1=Method call to ''{0}'' may expose data with a 'FileNotFound' exception.
SECURITY.ESD.SPI=Do not interrogate or modify security policy information in a web component
SECURITY.ESD.SPI.DEPTH-label=Maximum depth to look for Policy usage
SECURITY.ESD.SPI.msg.1=Call to ''Policy.{0}()'' in a web component.
SECURITY.ESD.SPI.msg.2=Method ''{0}'' indirectly calls "getPolicy()" or "setPolicy()" in a web component.
SECURITY.ESD.TFP=Declare "transient" fields "private".
SECURITY.ESD.TFP.msg.1="transient" field ''{0}'' should be declared private
SECURITY.ESD.TSPF=Avoid "transient" fields in serialPersistentFields array.
SECURITY.ESD.TSPF.msg.1=Referenced field ''{0}'' of serialPersistentFields array is "transient".
SECURITY.ESD.WS=Use secure communication with 'wss' (WebSocket Secure) instead of 'ws'.
SECURITY.ESD.WS.msg.1=Consider using 'wss' instead of 'ws'
SECURITY.IBA=Input-Based Attacks
SECURITY.IBA.AEAF=Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'.
SECURITY.IBA.AEAF.msg.1=Consider extending 'DynaValidatorForm' or 'DynaValidatorActionForm'
SECURITY.IBA.AEAF.msg.2=Consider extending 'ValidatorForm' or 'ValidatorActionForm'
SECURITY.IBA.ATF=Avoid temporary files
SECURITY.IBA.ATF.msg.1=A temporary file has been created
SECURITY.IBA.AUSS=Avoid using "SELECT *" in SQL queries.
SECURITY.IBA.AUSS.msg.1=This String contains "SELECT *", make sure it is not being used in a database query.
SECURITY.IBA.AUXD=Avoid parsing untrusted data with XMLDecoder
SECURITY.IBA.AUXD.msg.1=The XMLDecoder class is used.
SECURITY.IBA.CDBV=Canonicalize data before validation.
SECURITY.IBA.CDBV.CANON_METHS-description=Canonicalization method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.IBA.CDBV.CANON_METHS-label=Canonicalization method names (in regular expressions)
SECURITY.IBA.CDBV.CHECK_TYPES-description=Only check calls with the following argument types [regular expressions for fully qualified class name]
SECURITY.IBA.CDBV.CHECK_TYPES-label=Only check calls with the following argument types
SECURITY.IBA.CDBV.VALID_CLASSES-description=Only check calls within the following classes [regular expressions for fully qualified class name]
SECURITY.IBA.CDBV.VALID_CLASSES-label=Only check calls within the following classes
SECURITY.IBA.CDBV.VALID_METHS-description=Validation method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.IBA.CDBV.VALID_METHS-label=Validation method names (in regular expressions)
SECURITY.IBA.CDBV.msg.1=The data in ''{0}'' may not have been canonicalized before being validated.
SECURITY.IBA.CDBV.msg.2=The return value of this call to ''{0}'' may not have been canonicalized before being validated.
SECURITY.IBA.CSVFV=Always call 'super.validate()' from validation methods in 'ActionForm' classes.
SECURITY.IBA.CSVFV.msg.1=This validation method does not call 'super.validate()'.
SECURITY.IBA.DXXE=Disable XML external entity injection.
SECURITY.IBA.DXXE.msg.1=XXE injection has not been disabled.
SECURITY.IBA.DXXE.msg.2=XXE injection has not been disabled. Ensure your parser version allows you to configure the required options.
SECURITY.IBA.EDPM=Encapsulate constructor arguments with a validation function
SECURITY.IBA.EDPM.DANGEROUS_TYPES_LIST-label=User-defined types to be inspected (in regular expressions)<BR/>[qualified name of declaring type]
SECURITY.IBA.EDPM.ENCAPSULATE_METHOD_LIST-label=Validation method names (in regular expressions)<BR/>[qualified name of declaring type and method name]
SECURITY.IBA.EDPM.ENCAPSULATE_METHOD_LIST.SECURITY__IBA__EDPM__ENCAPSULATE_METHOD_LIST__COLUMN1-label=Additional dangerous types
SECURITY.IBA.EDPM.ENCAPSULATE_METHOD_LIST.SECURITY__IBA__EDPM__ENCAPSULATE_METHOD_LIST__COLUMN2-label=Validation Methods
SECURITY.IBA.EDPM.msg.1=The constructor for "{0}" returns dangerous data and its arguments should be encapsulated by a validation method.
SECURITY.IBA.NATIW=Use wrapper methods to secure native methods
SECURITY.IBA.NATIW.msg.1={0} should only be accessed using a wrapper method.
SECURITY.IBA.RUIM=Ensure proper session expiration
SECURITY.IBA.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
SECURITY.IBA.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
SECURITY.IBA.SC=Disable LDAP deserialization
SECURITY.IBA.SC.msg.1=The SearchControls object allows deserialization
SECURITY.IBA.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
SECURITY.IBA.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
SECURITY.IBA.VRD=Encapsulate all redirect and forward URLs with a validation function
SECURITY.IBA.VRD.VALIDATE_METHODS-description=Validation methods (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.IBA.VRD.VALIDATE_METHODS-label=Validation methods (in regular expressions)
SECURITY.IBA.VRD.msg.1=No validation check in redirect URL.
SECURITY.IBA.VRD.msg.2=No validation check in forward URL.
SECURITY.IBA.XPIJ=Avoid XPath injection when evaluating XPath queries
SECURITY.IBA.XPIJ.CHECK_VAR_RESOLVER-label=Check if 'XPathVariableResolver' is not set in XPath objects
SECURITY.IBA.XPIJ.msg.1=Avoid using variable ''{0}'' in XPath query.
SECURITY.IBA.XPIJ.msg.2='XPathVariableResolver' is not set in XPath variable ''{0}''.
SECURITY.UEHL=Unsafe Error Handling and Logging
SECURITY.UEHL.DCEMSL=Avoid untrusted input when logging messages with Seam Logging API
SECURITY.UEHL.DCEMSL.CLASS_FIELDS_ARE_SAFE-label=Consider class fields to be secure
SECURITY.UEHL.DCEMSL.msg.1=The ''{0}'' method called on the object of the Log class takes a dangerous argument.
SECURITY.UEHL.LGE=Ensure all exceptions are either logged with a standard logger or rethrown
SECURITY.UEHL.LGE.CHECK_EXCEPT_FULL_PASSED-label=Check if the exception passed to the logging method is complete
SECURITY.UEHL.LGE.CHECK_EXCEPT_LOGGED-label=Check if the exception is passed into the logging method call
SECURITY.UEHL.LGE.CHECK_EXCEPT_THROW-label=Check if the caught exception is passed to a new exception or rethrown
SECURITY.UEHL.LGE.FLAG_LEVEL-label=Catch clause should contain\:
SECURITY.UEHL.LGE.FLAG_LEVEL.0-label=Logging method.
SECURITY.UEHL.LGE.FLAG_LEVEL.1-label=Logging method or "throw" exception statement.
SECURITY.UEHL.LGE.FLAG_LEVEL.2-label=Logging method, comment, or "throw" exception statement.
SECURITY.UEHL.LGE.IGNORE_LIST-label=Ignore exception variables matching the following regular expression(s)\:
SECURITY.UEHL.LGE.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
SECURITY.UEHL.LGE.LOG_METHOD_EXPRESSION-label=Logging method name in regular expression
SECURITY.UEHL.LGE.msg.1=The exception is not logged in the "catch" clause.
SECURITY.UEHL.LGE.msg.2=The exception is neither logged nor rethrown in the "catch" clause.
SECURITY.UEHL.LGE.msg.3=The exception is neither logged nor rethrown in the "catch" clause. Add a comment to the clause if this is expected.
SECURITY.UEHL.LGE.msg.4=The ''{0}'' exception is not passed to the logging method called in the "catch" clause.
SECURITY.UEHL.LGE.msg.5=The information passed from the ''{0}'' exception to the logging method may be incomplete.
SECURITY.UEHL.LGE.msg.6=The ''{0}'' exception is not rethrown in the "catch" block or passed to the new exception as an argument.
SECURITY.UEHL.LGE.tab.IGNORE_LIST_TAB-label=Ignore List
SECURITY.UEHL.LGE.tab.LOGGERS_TAB-label=Loggers
SECURITY.WSC=Weak Security Controls
SECURITY.WSC.ACDP=Avoid using anonymous "privileged" classes when invoking "AccessController.doPrivileged()".
SECURITY.WSC.ACDP.msg.1=Anonymous subclass of ''{0}'' used in "AccessController.doPrivileged()" invocation.
SECURITY.WSC.ACMD=Avoid using custom MessageDigest implementations
SECURITY.WSC.ACMD.msg.1=The class that extends MessageDigest may provide unsafe algorithms
SECURITY.WSC.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
SECURITY.WSC.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
SECURITY.WSC.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
SECURITY.WSC.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
SECURITY.WSC.AHCA=Avoid hard-coding the arguments to certain methods
SECURITY.WSC.AHCA.DANGEROUS_METHODS-label=Methods to Check
SECURITY.WSC.AHCA.DANGEROUS_METHODS.SECURITY__WSC__AHCA__DANGEROUS_METHODS__COLUMN1-description=Specify &lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,&lt;parameter2 fully qualified type&gt;,...)
SECURITY.WSC.AHCA.DANGEROUS_METHODS.SECURITY__WSC__AHCA__DANGEROUS_METHODS__COLUMN1-label=Method
SECURITY.WSC.AHCA.DANGEROUS_METHODS.SECURITY__WSC__AHCA__DANGEROUS_METHODS__COLUMN2-label=Argument Index to Check ("0"-based)
SECURITY.WSC.AHCA.msg.1=Argument \# {0} to the method ''{1}()'' should not be hard-coded.
SECURITY.WSC.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
SECURITY.WSC.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
SECURITY.WSC.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
SECURITY.WSC.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
SECURITY.WSC.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
SECURITY.WSC.AISSAJAVA.msg.1=The cryptographic class is insecure.
SECURITY.WSC.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
SECURITY.WSC.AMA=Avoid constructors and overriding methods which are more accessible than those of their super classes
SECURITY.WSC.AMA.CHECK_HIDDEN-label=static
SECURITY.WSC.AMA.PROTECTED_CONSTRUCTOR-label=protected
SECURITY.WSC.AMA.PROTECTED_OVERRIDING-label=protected
SECURITY.WSC.AMA.PUBLIC_CONSTRUCTOR-label=public
SECURITY.WSC.AMA.PUBLIC_OVERRIDING-label=public
SECURITY.WSC.AMA.group.0-label=Check overriding methods with access specifier
SECURITY.WSC.AMA.group.1-label=Check constructors with access specifier
SECURITY.WSC.AMA.msg.1=The constructor ''{0}'' is more accessible than the constructor in its superclass.
SECURITY.WSC.AMA.msg.2=The overriding method ''{0}'' is more accessible than the method in its superclass.
SECURITY.WSC.APIBS=Inspect usage of standard API calls that bypass security
SECURITY.WSC.APIBS.CHECKED_METHODS-label=Check the following methods\:
SECURITY.WSC.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN1-label=Type (qualified name)
SECURITY.WSC.APIBS.CHECKED_METHODS.SECURITY__WSC__APIBS__CHECKED_METHODS__COLUMN2-label=Method name (regular expression)
SECURITY.WSC.APIBS.msg.1=API call ''{0}'' has potential to bypass security.
SECURITY.WSC.ARXML=Process XML and HTML with a library instead of raw text 
SECURITY.WSC.ARXML.msg.1=''{0}'' is processed using raw text instead of a library
SECURITY.WSC.ASAPI=Prevent the scripting API from executing untrusted code
SECURITY.WSC.ASAPI.REPORT_ON_EVAL-label=Report violation on eval method invocation
SECURITY.WSC.ASAPI.msg.1=Ensure that the use of the scripting API does not allow untrusted dynamic code execution.
SECURITY.WSC.ASAPI.msg.2=The eval() method is called on the scriptEngine object and may execute untrusted dynamic code.
SECURITY.WSC.AUNC=Avoid using the javax.crypto.NullCipher class in non-test classes.
SECURITY.WSC.AUNC.msg.1=The NullCipher class that does not encrypt the plaintext is used in a non-test class.
SECURITY.WSC.BP=Allow only certain providers to be specified for the 'Security.addProvider()' method.
SECURITY.WSC.BP.APPROVED_PROVIDERS-label=Approved Provider Types (Specify fully qualified names in regular expressions.)
SECURITY.WSC.BP.msg.1=The provider type ''{0}'' is not in the user-specified list of approved providers.
SECURITY.WSC.BUSSB=Prevent external processes from blocking on output or error streams
SECURITY.WSC.BUSSB.msg.1=The error stream of the process is not emptied or redirected
SECURITY.WSC.BUSSB.msg.2=The output stream of the process is not emptied or redirected
SECURITY.WSC.CACM=Keep all access control methods centralized to enforce consistency
SECURITY.WSC.CACM.DANGEROUS_METHOD_LIST-description=Access control method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.WSC.CACM.DANGEROUS_METHOD_LIST-label=Access control method names (in regular expressions)
SECURITY.WSC.CACM.ENCLOSING_METHOD_LIST-description=Centralized access control method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.WSC.CACM.ENCLOSING_METHOD_LIST-label=Centralized access control method names (in regular expressions)
SECURITY.WSC.CACM.msg.1=''{0}()'' is not allowed to be invoked within ''{1}()'', it should only be invoked inside centralized access control method declarations.
SECURITY.WSC.CACM.msg.2=''{0}()'' is not allowed to be invoked unless enclosed by centralized access control methods.
SECURITY.WSC.CAM=Keep all authentication methods centralized to enforce consistency
SECURITY.WSC.CAM.DANGEROUS_METHOD_LIST-description=Authentication method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.WSC.CAM.DANGEROUS_METHOD_LIST-label=Authentication method names (in regular expressions)
SECURITY.WSC.CAM.ENCLOSING_METHOD_LIST-description=Centralized authentication method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.WSC.CAM.ENCLOSING_METHOD_LIST-label=Centralized authentication method names (in regular expressions)
SECURITY.WSC.CAM.msg.1=''{0}()'' is not allowed to be invoked within ''{1}()'', it should only be invoked inside centralized authentication method declarations.
SECURITY.WSC.CAM.msg.2=''{0}()'' is not allowed to be invoked unless enclosed by centralized access control methods.
SECURITY.WSC.CAP=Always clone array parameters which are stored to fields
SECURITY.WSC.CAP.msg.1=Array parameter ''{0}'' is not cloned before it is stored.
SECURITY.WSC.CFM=Only call "final" methods from specified code blocks in non-"final" classes.
SECURITY.WSC.CFM.CHECKED_METHODS_TABLE-label=Check invocations made from within the following method declarations\:
SECURITY.WSC.CFM.CHECKED_METHODS_TABLE.SECURITY__WSC__CFM__CHECKED_METHODS_TABLE__COLUMN1-label=Type (qualified name)
SECURITY.WSC.CFM.CHECKED_METHODS_TABLE.SECURITY__WSC__CFM__CHECKED_METHODS_TABLE__COLUMN2-label=Method (name)
SECURITY.WSC.CFM.CHECK_METHODS-label=Check invocations made from within method declarations\:
SECURITY.WSC.CFM.CHECK_SYNCHRONIZED-label=Check invocations made from within "synchronized" blocks
SECURITY.WSC.CFM.group.0-label=Where to check for non-"final" method invocations
SECURITY.WSC.CFM.msg.1=Non-"final" method ''{0}'' is invoked in non-"final" class ''{1}''.
SECURITY.WSC.CIFC=Only "clone()" instances of "final" classes.
SECURITY.WSC.CIFC.msg.1=''{0}'' of type ''{1}'' is not final.
SECURITY.WSC.CIFC.msg.2=Array ''{0}'' contains type ''{1}'' which is not final.
SECURITY.WSC.CKTS=Avoid using cryptographic keys which are too short.
SECURITY.WSC.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
SECURITY.WSC.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
SECURITY.WSC.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
SECURITY.WSC.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
SECURITY.WSC.CLO=Do not override any 'ClassLoader' method except 'findClass()'
SECURITY.WSC.CLO.msg.1=''{0}'' should not be overridden.
SECURITY.WSC.CLONE=Make your 'clone()' method "final" for security.
SECURITY.WSC.CLONE.msg.1='clone()' method is not "final".
SECURITY.WSC.CMO=Do not pass mutable objects to 'ObjectOutputStream' in the 'writeObject()' method
SECURITY.WSC.CMO.CHECK_SCOPE-label=Flags 'writeObject(obj)' invocation when 'obj' is\:
SECURITY.WSC.CMO.CHECK_SCOPE.0-label=Field which declared type is mutable.
SECURITY.WSC.CMO.CHECK_SCOPE.1-label=Field which declared type is mutable or declared type is an interface.
SECURITY.WSC.CMO.CHECK_SCOPE.2-label=Any field.
SECURITY.WSC.CMO.msg.1=Mutable field ''{0}'' is passed to 'writeObject(Object)' without cloning it first.
SECURITY.WSC.CMO.msg.2=Interface type field ''{0}'' is passed to 'writeObject(Object)' without cloning it first.
SECURITY.WSC.CMO.msg.3=Field ''{0}'' is passed to 'writeObject(Object)' without cloning it first.
SECURITY.WSC.DMDS=Avoid using the DriverManagerDataSource class in production code
SECURITY.WSC.DMDS.msg.1=The DriverManagerDataSource class is not a pooled data source and should not be used in production code.
SECURITY.WSC.DNSL=Avoid DNS lookups for decision making
SECURITY.WSC.DNSL.msg.1=DNS lookup checked here.
SECURITY.WSC.ENPP=Ensure arguments passed to certain methods come from predefined methods list.
SECURITY.WSC.ENPP.PAIRS_TABLE_HEADER-label=Methods and arguments configuration
SECURITY.WSC.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN1-label=Method to be checked (&lt;qualified name of declaring type&gt;\#&lt;method name&gt;(&lt;parameter1 fully qualified type&gt;,...)
SECURITY.WSC.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN2-label=Argument Index to Check (''0''-based)
SECURITY.WSC.ENPP.PAIRS_TABLE_HEADER.SECURITY__WSC__ENPP__PAIRS_TABLE_HEADER__COLUMN3-label=Allowed method name (in Regular Expressions)
SECURITY.WSC.ENPP.msg.1=Argument number {0} passed to method ''{1}'' is not an allowed method call.
SECURITY.WSC.EWSSEC=Avoid debug information from Spring Security framework to logs
SECURITY.WSC.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
SECURITY.WSC.FIMU=Make immutable classes final
SECURITY.WSC.FIMU.CHECK_FIELDS-label=Ensure fields are final
SECURITY.WSC.FIMU.msg.1=The immutable class not declared 'final'
SECURITY.WSC.FIMU.msg.2=The ''{0}'' field of the immutable class is not declared 'final'
SECURITY.WSC.FOLLOW=Ensure that file target paths retrieved by resolving symbolic links are safe
SECURITY.WSC.FOLLOW.msg.1=Verify that the path retrieved by using FileVisitOption.FOLLOW_LINKS is within the intended control sphere
SECURITY.WSC.FXMLP=Ensure that Secure Processing is used
SECURITY.WSC.FXMLP.IGNORE_CLASSES-label=Check factory classes (in regular expression)
SECURITY.WSC.FXMLP.msg.1=Secure Processing not used.
SECURITY.WSC.HCCK=Avoid using hard-coded cryptographic keys
SECURITY.WSC.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
SECURITY.WSC.HCCK.msg.1=Hard-coded cryptographic key here.
SECURITY.WSC.HCCS=Avoid passing hardcoded usernames/passwords/URLs to database connection methods.
SECURITY.WSC.HCCS.CONNECT_METHS-description=Additional Database Connection Methods (in form of &lt;qualified name of declaring type&gt;\#&lt;method name&gt;)
SECURITY.WSC.HCCS.CONNECT_METHS-label=Additional Database Connection Methods
SECURITY.WSC.HCCS.msg.1=This call to ''{0}()'' may be dangerous because it passes in only hard-coded Strings.
SECURITY.WSC.HCCS.msg.2=This call to ''{0}()'' may be dangerous because it uses a hard-coded password.
SECURITY.WSC.HGRSI=Avoid using the 'getRequestedSessionId' method from the 'HttpServletRequest' class
SECURITY.WSC.HGRSI.msg.1=The 'getRequestedSessionId' method may return untrusted data
SECURITY.WSC.HTTPRHA=Do not rely on IP addresses obtained from HTTP request headers for authentication
SECURITY.WSC.HTTPRHA.msg.1=The IP address retrieved from the HTTP request header is used for authentication
SECURITY.WSC.HTTPRHA.msg.2=The IP address retrieved from the header using the 'getRemoteAddr()' method is used for authentication
SECURITY.WSC.HV=Ensure the HostnameVerifier.verify() method validates the certificate
SECURITY.WSC.HV.msg.1=The certificate is not validated, because the 'verify' method always returns 'true'
SECURITY.WSC.ICA=Avoid using insecure algorithms for cryptography.
SECURITY.WSC.ICA.SUGGESTED_ALGS-label=Secure Cryptographic Algorithms
SECURITY.WSC.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1-label=
SECURITY.WSC.ICA.SUGGESTED_ALGS.SECURITY.WSC.ICA.SUGGESTED_ALGS.CHILDTABLE1.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN2-label=Name of Secure Algorithm (in regular expressions)
SECURITY.WSC.ICA.SUGGESTED_ALGS.SECURITY__WSC__ICA__SUGGESTED_ALGS__COLUMN1-label=Fully Qualified Class Name
SECURITY.WSC.ICA.msg.1=The "{0}" algorithm is not an acceptable cryptography algorithm for the "{1}" class.
SECURITY.WSC.ICA.msg.2=The cryptography algorithm is used without padding.
SECURITY.WSC.IDP=Avoid setting the write or execute file permissions to unintended users
SECURITY.WSC.IDP.msg.1=The ''{0}'' method is set to grant the {1} permissions to everybody.
SECURITY.WSC.INIVF=Defend against partially initialized instances of non-final classes
SECURITY.WSC.INIVF.REGULAR_EXPRESSION-label=Initializer flag should match this regular expression\:
SECURITY.WSC.INIVF.VOLATILE_FLAG-label=Ensure flag is volatile
SECURITY.WSC.INIVF.msg.1=Flag not present.
SECURITY.WSC.INIVF.msg.2=Flag not volatile.
SECURITY.WSC.INNER=Make all member classes "private".
SECURITY.WSC.INNER.CHECK_INTERFACE-label=Check member interfaces
SECURITY.WSC.INNER.IGNORE_STATIC-label=Ignore "static" member classes
SECURITY.WSC.INNER.msg.1=Member class ''{0}'' is not "private".
SECURITY.WSC.ISL=Always call 'HttpSession.invalidate()' before 'LoginContext.login()'
SECURITY.WSC.ISL.msg.1=Login without session invalidation.
SECURITY.WSC.IVR=Avoid non-random "byte[]" when using IvParameterSpec.
SECURITY.WSC.IVR.msg.1=IvParameterSpec instantiated with non-random value ''{0}''.
SECURITY.WSC.JXCORS=Restrict cross-origin resource sharing to secure origins
SECURITY.WSC.JXCORS.msg.1=The "Access-Control-Allow-Origin" header is set to allow unrestricted access to cross-origin resources
SECURITY.WSC.LNK=Validate shortcut target paths before use
SECURITY.WSC.LNK.VALIDATE_METHODS-label=Validating methods
SECURITY.WSC.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN1-label=Type (qualified name in regular expressions)
SECURITY.WSC.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN2-label=Method name (in regular expressions)
SECURITY.WSC.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN3-label=Verify that resolveTarget() is checked by this method
SECURITY.WSC.LNK.VALIDATE_METHODS.SECURITY__WSC__LNK__CHECKED_METHODS__COLUMN4-label=Verify that resolveTarget() is declared in this method
SECURITY.WSC.LNK.msg.1=The value returned by resolveTarget() is not validated
SECURITY.WSC.MCMDU=MessageDigest objects must process the data with the 'update' method
SECURITY.WSC.MCMDU.msg.1=The 'update' method is not called on the ''{0}'' variable after the message digest object is obtained
SECURITY.WSC.MCNC=Make your classes noncloneable
SECURITY.WSC.MCNC.msg.1='clone()' method is missing
SECURITY.WSC.MCNC.msg.2='clone()' method is not "final"
SECURITY.WSC.MCNC.msg.3=java.lang.CloneNotSupportedException is not thrown
SECURITY.WSC.MCNC.msg.4='clone()' method has parameter
SECURITY.WSC.MDSALT=Use hash functions with a salt
SECURITY.WSC.MDSALT.msg.1=A salt is not added to the digest
SECURITY.WSC.PAC=Call authentication methods to enforce consistency
SECURITY.WSC.PAC.DANGEROUS_METHOD_LIST-description=Authentication checking method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.WSC.PAC.DANGEROUS_METHOD_LIST-label=Authentication checking method names (in regular expressions)
SECURITY.WSC.PAC.ENFORCED_METHOD_LIST-description=Centralized authentication method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.WSC.PAC.ENFORCED_METHOD_LIST-label=Centralized authentication method names (in regular expressions)
SECURITY.WSC.PAC.msg.1=''{0}()'' does not invoke authentication checking method.
SECURITY.WSC.PACC=Call access control methods to enforce consistency
SECURITY.WSC.PACC.DANGEROUS_METHOD_LIST-description=Access checking method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.WSC.PACC.DANGEROUS_METHOD_LIST-label=Access checking method names (in regular expressions)
SECURITY.WSC.PACC.ENFORCED_METHOD_LIST-description=Centralized access control method names (in regular expressions) [qualified name of declaring type\#method name]
SECURITY.WSC.PACC.ENFORCED_METHOD_LIST-label=Centralized access control method names (in regular expressions)
SECURITY.WSC.PACC.msg.1=''{0}()'' does not invoke access control method.
SECURITY.WSC.PAF=Declare subclasses of 'PrivilegedAction', 'PrivilegedExceptionAction', and 'PrivilegedActionException' "final"
SECURITY.WSC.PAF.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
SECURITY.WSC.PAF.CHECK_PAE-label=Check subclasses of "java.security.PrivilegedActionException"
SECURITY.WSC.PAF.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
SECURITY.WSC.PAF.IGNORE_ENCLOSED_FINAL-label=Ignore subclasses which are enclosed by a "final" outer class
SECURITY.WSC.PAF.msg.1=Class ''{0}'' extends ''{1}'' and should be declared "final".
SECURITY.WSC.PAF.msg.2=Class ''{0}'' implements ''{1}'' and should be declared "final".
SECURITY.WSC.PBFA=Ensure sufficient protection against multiple failed authentication attempts
SECURITY.WSC.PBFA.msg.1=This class uses the object of the AuthenticationFailureBadCredentialsEvent class. Ensure that sufficient protection against multiple failed authentication attempts is implemented.
SECURITY.WSC.PBFA.msg.2=Ensure that the implementation of the 'onAuthenticationFailure()' method provides sufficient protection against multiple failed authentication attempts.
SECURITY.WSC.PBFA.msg.3=Ensure that the implementation of the 'configure()' method provides sufficient protection against multiple failed authentication attempts.
SECURITY.WSC.PBFA.msg.4=Ensure that the application code includes sufficient protection against multiple failed authentication attempts.
SECURITY.WSC.PBPSF=Declare subclasses of 'Permission' and 'BasicPermission' "final".
SECURITY.WSC.PBPSF.CHECK_BASICPERMISSION-label=Check implementations of "java.security.BasicPermission"
SECURITY.WSC.PBPSF.CHECK_PERMISSION-label=Check subclasses of "java.security.Permission"
SECURITY.WSC.PBPSF.IGNORE_ENCLOSED_FINAL-label=Ignore subclasses which are enclosed by a "final" outer class
SECURITY.WSC.PBPSF.msg.1=Class ''{0}'' extends ''{1}'' and should be declared "final".
SECURITY.WSC.PBRTE=Always specify absolute paths to execute commands
SECURITY.WSC.PBRTE.msg.1=The specified command is not an absolute path with separators
SECURITY.WSC.PPKG=Ensure that all Permissions, PrivilegedActions, and PrivilegedActionExceptions are declared in the same package
SECURITY.WSC.PPKG.PERMISSION_TABLE-label=
SECURITY.WSC.PPKG.PERMISSION_TABLE.SECURITY_WSC_PPKG_PERMISSION_TABLE_COLUMN1-label=
SECURITY.WSC.PPKG.PERMISSION_TABLE.SECURITY_WSC_PPKG_PERMISSION_TABLE_COLUMN2-label=
SECURITY.WSC.PPKG.PERMISSION_TABLE.SECURITY_WSC_PPKG_PERMISSION_TABLE_COLUMN3-label=
SECURITY.WSC.PPKG.msg.1=Class name ''{0}'' does not match user-specified regular expression ''{1}''.
SECURITY.WSC.PRMF=Declare the 'run()' method of 'PrivilegedAction' and 'PrivilegedExceptionAction' implementations "final"
SECURITY.WSC.PRMF.CHECK_PA-label=Check implementations of "java.security.PrivilegedAction"
SECURITY.WSC.PRMF.CHECK_PEA-label=Check implementations of "java.security.PrivilegedExceptionAction"
SECURITY.WSC.PRMF.IGNORE_FINAL_CLASS-label=Ignore "final" classes
SECURITY.WSC.PRMF.msg.1="run()" method of class ''{0}'' should be declared "final".
SECURITY.WSC.PSFC=Do not declare fields as "public" "static" "final" 'Collection' or 'Map' objects.
SECURITY.WSC.PSFC.CHECK_UNMODIFIABLE-label=Check "unmodifiable" Collections and Maps
SECURITY.WSC.PSFC.msg.1=Field ''{0}'' is declared as a "public static final" ''{1}'' object.
SECURITY.WSC.RDM=Inspect 'Random' objects or 'Math.random()' methods that could indicate areas where malicious code has been placed.
SECURITY.WSC.RDM.msg.1=Inspect usage of 'Random' object or method that might lead to unpredictable behavior
SECURITY.WSC.SCF=Enforce 'SecurityManager' checks before setting or getting fields
SECURITY.WSC.SCF.CHECK_NON_FINAL_METHOD-label=Ensure methods containing 'SecurityManager' checks are declared "final"
SECURITY.WSC.SCF.FINAL_CLASS-label=Check non-"final" classes only
SECURITY.WSC.SCF.PARAM_LEVEL-label=Maximum depth to look for 'SecurityManager' check
SECURITY.WSC.SCF.msg.1=Missing ''SecurityManager'' check before setting field in method ''{0}()''.
SECURITY.WSC.SCF.msg.2=Missing ''SecurityManager'' check before getting field in method ''{0}()''.
SECURITY.WSC.SCF.msg.3=Method ''{0}'' is not declared "final".
SECURITY.WSC.SCHTTP=Mark cookies as HttpOnly
SECURITY.WSC.SCHTTP.msg.1=The cookie is not marked as 'HttpOnly'.
SECURITY.WSC.SCHTTP.msg.2=The cookie is not marked as 'HttpOnly'. Call setHttpOnly(true) on the cookie object (available since Java Servlet 3.0).
SECURITY.WSC.SCLONE=Enforce 'SecurityManager' checks in methods of 'Cloneable' classes
SECURITY.WSC.SCLONE.PARAM_LEVEL-label=Maximum depth to look for 'SecurityManager' checks
SECURITY.WSC.SCLONE.SUPER_CLASS_CHECK-label=Check indirect 'SecurityManager' checks in super constructor(s)
SECURITY.WSC.SCLONE.msg.1=Missing 'SecurityManager' check in clone() method.
SECURITY.WSC.SCLONE.msg.2=Missing 'SecurityManager' check in constructor.
SECURITY.WSC.SCSER=Enforce 'SecurityManager' checks in methods of 'Serializable' classes
SECURITY.WSC.SCSER.PARAM_LEVEL-label=Maximum depth to look for 'SecurityManager' check
SECURITY.WSC.SCSER.SUPER_CLASS_CHECK-label=Check indirect 'SecurityManager' checks in super constructor(s)
SECURITY.WSC.SCSER.msg.1=Missing 'SecurityManager' check in readObject() method.
SECURITY.WSC.SCSER.msg.2=Missing 'SecurityManager' check in readObjectNoData() method.
SECURITY.WSC.SCSER.msg.3=Missing 'SecurityManager' check in writeObject() method.
SECURITY.WSC.SCSER.msg.4=Missing 'SecurityManager' check in constructor.
SECURITY.WSC.SCSM=Ensure 'SecurityManager' check in constructor of "public" non-"final" sensitive type
SECURITY.WSC.SCSM.JAVA_OPTION-label=Use normal style or Java 6 style
SECURITY.WSC.SCSM.JAVA_OPTION.0-label=Ensure that the final constructor performs a SecurityManager check
SECURITY.WSC.SCSM.JAVA_OPTION.1-label=Enforce Java 6 style, requiring the 'SecurityManager' check to be first.  If Java 6 is not in use then nothing is flagged
SECURITY.WSC.SCSM.msg.1=Constructor ''{0}'' does not perform a SecurityManager check.
SECURITY.WSC.SER=Make your classes nonserializeable.
SECURITY.WSC.SER.msg.1='writeObject()' method is missing
SECURITY.WSC.SER.msg.2='writeObject()' method is not "final".
SECURITY.WSC.SER.msg.3=java.io.IOException is not thrown.
SECURITY.WSC.SIKG=Initialize KeyGenerator instances 
SECURITY.WSC.SIKG.msg.1=The ''{0}'' object of the KeyGenerator class is created but not initialized
SECURITY.WSC.SMSTR=Ensure 'SecurityManager' checks before 'Socket' transfers or retrievals
SECURITY.WSC.SMSTR.msg.1=Missing "SecurityManager" check before call to ''{0}''.
SECURITY.WSC.SRD=Use 'java.security.SecureRandom' instead of 'java.util.Random' or 'Math.random()'.
SECURITY.WSC.SRD.msg.1=Avoid using the insecure ''{0}'' as a random number generator
SECURITY.WSC.SS=Do not use sockets in web components.
SECURITY.WSC.SS.CHECK_SERVERSOCKET-label=Check ServerSockets
SECURITY.WSC.SS.CHECK_SOCKET-label=Check Sockets
SECURITY.WSC.SS.DEPTH-label=Maximum depth to look for socket usage
SECURITY.WSC.SS.msg.1=''{0}'' used in a web component.
SECURITY.WSC.SS.msg.2=Call to ''{0}'' indirectly uses a socket in a web component.
SECURITY.WSC.SSM=Ensure that an appropriate security manager is set
SECURITY.WSC.SSM.msg.1=Security manager is missing, 'setSecurityManager' should be invoked
SECURITY.WSC.SSP=Do not call 'System.setProperty()' in a web component.
SECURITY.WSC.SSP.DEPTH-label=Maximum depth to look for "System.setProperty()" calls
SECURITY.WSC.SSP.msg.1=Call to ''System.{0}()'' in a web component.
SECURITY.WSC.SSP.msg.2=Method ''{0}'' indirectly calls "System.setProperty()" in a web component.
SECURITY.WSC.STREP=Use library methods for string replacements of special characters in HTML and XML
SECURITY.WSC.STREP.REPLACEMENTS-label=Report the replace() method called with the following string parameters\:
SECURITY.WSC.STREP.REPLACEMENTS.SECURITY__WSC__STREP__TABLE_HEADER__COLUMN1-label=Old string
SECURITY.WSC.STREP.REPLACEMENTS.SECURITY__WSC__STREP__TABLE_HEADER__COLUMN2-label=New string
SECURITY.WSC.STREP.msg.1=String replacements of special characters found.
SECURITY.WSC.UOSC=Use the ''getSecure()'' and ''setSecure()'' methods to enforce the use of secure cookies.
SECURITY.WSC.UOSC.msg.1=The ''Cookie'' variable ''{0}'' may be used without making sure that it is a secure cookie.
SECURITY.WSC.UOSC.msg.2=Make sure that the appropriate version of library is used.
SECURITY.WSC.USC=Use the SSL-enabled version of classes when possible.
SECURITY.WSC.USC.msg.1=Consider using the SSL-enabled type ''SSLServerSocketFactory'' for the {0} ''{1}''
SECURITY.WSC.USC.msg.2=Consider using the SSL-enabled type ''SSLSocketFactory'' for the {0} ''{1}''
SECURITY.WSC.USC.msg.3=Consider using the SSL-enabled type ''HttpsURLConnection'' for the {0} ''{1}''.
SECURITY.WSC.USC.msg.4=Consider using the SSL-enabled type ''SslRMIClientSocketFactory'' for the {0} ''{1}''.
SECURITY.WSC.USC.msg.5=Consider using the SSL-enabled type ''SslRMIServerSocketFactory'' for the {0} ''{1}''.
SECURITY.WSC.USC.msg.6=Consider using the SSL-enabled type ''SSLSocket'' for the {0} ''{1}''.
SECURITY.WSC.USC.msg.7=Consider using the SSL-enabled type ''SSLServerSocket'' for the {0} ''{1}''.
SECURITY.WSC.USC.msg.8=Consider using the SSL-enabled type ''SSLPermission'' for the {0} ''{1}''.
SECURITY.WSC.UWM=Use wrapper methods instead of calling dangerous or problematic methods directly (custom rule)
SECURITY.WSC.UWM.METHODS-description=Specify methods in the format &lt;fully qualified type name&gt;\#&lt;method name&gt;
SECURITY.WSC.UWM.METHODS-label=Methods which should be wrapped and their wrapper methods
SECURITY.WSC.UWM.METHODS.SECURITY__WSC__UWM__METHODS__COLUMN1-label=Dangerous/Problematic Method
SECURITY.WSC.UWM.METHODS.SECURITY__WSC__UWM__METHODS__COLUMN2-label=Wrapper Method
SECURITY.WSC.UWM.msg.1=The method ''{0}()'' is called outside of its wrapper method.
SECURITY.WSC.VJFS=Always verify JarFile signatures
SECURITY.WSC.VJFS.msg.1=Consider using a JarFile constructor with verification enabled.
SECURITY.WSC.VSI=Properly validate server identity
SECURITY.WSC.VSI.msg.1=SMTP SSL does not check server identity.
SECURITY.WSC.VSI.msg.2=SMTP SSL does not check server identity. Ensure the library version allows you to configure the required options.
SECURITY.WSC.ZOIS=Inspect usage of scripting API
SECURITY.WSC.ZOIS.msg.1=Scripting API usage.
SERIAL=Serialization
SERIAL.DUID=Create a 'serialVersionUID' for all 'Serializable' classes.
SERIAL.DUID.CHECK_PRIVATE-label=Check if serialVersionUID is "private"
SERIAL.DUID.msg.1=No 'serialVersionUID' declared in class ''{0}''.
SERIAL.DUID.msg.2='serialVersionUID' must be declared "static final long", otherwise it will not be used.
SERIAL.DUID.msg.3='serialVersionUID' should be declared "private".
SERIAL.EZEE=Implement Externalizable instead of Serializable
SERIAL.EZEE.msg.1={0} implements Serializable instead of Externalizable.
SERIAL.FT=Avoid declaring "transient" fields in non-serializable classes
SERIAL.FT.msg.1=field ''{0}'' is "transient"
SERIAL.IRX=Avoid re-initializing fields in the 'readExternal()' method of 'Externalizable' classes
SERIAL.IRX.msg.1=Fields are re-initialized in 'readExternal()'.
SERIAL.NSFSC=Ensure Serializable classes are correct
SERIAL.NSFSC.CHECK_MAPS_AND_COLLECTIONS-label=Check for Maps and Collections which may contain elements which are not serializable
SERIAL.NSFSC.CHECK_ONLY_EXPLICIT-label=Check only classes that are explicitly stated as serializable
SERIAL.NSFSC.FLAG_EVEN_NO_FIELD-label=Check classes even if they are expected to have no field to be serialized under current implementation.
SERIAL.NSFSC.FLAG_NON_SERIALIZABLE_SUPERCLASS-label=Check non-serializable superclasses as well
SERIAL.NSFSC.IGNORE_NO_SOURCE-label=Ignore classes whose source codes could not be found
SERIAL.NSFSC.SKIP_CLASSES-label=Class to be skipped
SERIAL.NSFSC.msg.1=Possible Serializable error at {0}, current class field ''{1}'' is not completely-Serializable, see rule description for completely-Serializable.
SERIAL.NSFSC.msg.2=Possible Serializable error at {0}, current class field ''{1}'' does not implement 'java.io.Serializable'.
SERIAL.NSFSC.msg.3=Possible Serializable error at {0}, inherited field {1} is not completely-Serializable, see rule description for completely-Serializable.
SERIAL.NSFSC.msg.4=Possible Serializable error at {0}, inherited fields {1} are not completely-Serializable, see rule description for completely-Serializable.
SERIAL.NSFSC.msg.5=Possible Serializable error at {0}, inherited field {1} does not implement 'java.io.Serializable'.
SERIAL.NSFSC.msg.6=Possible Serializable error at {0}, inherited fields {1} do not implement 'java.io.Serializable'.
SERIAL.NSFSC.msg.7=Possible Serializable error at {0}, superclass {1} does not implement 'java.io.Serializable'.
SERIAL.NSFSC.msg.8=Possible Serializable error at {0}, superclasses {1} do not implement 'java.io.Serializable'.
SERIAL.NSFSC.msg.9=Possible Serializable error at {0}, current class field ''{1}'' may contain elements which are not Serializable.
SERIAL.OC=Ensure outer class is serializable if its inner class is serializable
SERIAL.OC.CHECK_INDIRECT-label=Check inner classes indirectly implementing Serializable
SERIAL.OC.msg.1=Outer class ''{0}'' is not serializable.
SERIAL.ROWO=Ensure that the 'readObject()' and 'writeObject()' methods have the correct signature.
SERIAL.ROWO.msg.1=This ''readObject()'' method does not have the signature "private void readObject(ObjectInputStream) throws IOException, ClassNotFoundException"
SERIAL.ROWO.msg.2=This ''writeObject()'' method does not have the signature "private void writeObject(ObjectOutputStream) throws IOException"
SERIAL.RRSC=Define a "readResolve" method for all instances of Serializable types.
SERIAL.RRSC.CHECK_PACKAGE_PRIVATE-label=a "package-private" constructor
SERIAL.RRSC.CHECK_PRIVATE-label=a "private" constructor
SERIAL.RRSC.CHECK_PROTECTED-label=a "protected" constructor
SERIAL.RRSC.CHECK_PUBLIC-label=a "public" constructor
SERIAL.RRSC.group.0-label=Check classes with\:
SERIAL.RRSC.msg.1=The class ''{0}'' implements ''Serializable'' but does not define a "readResolve()" method.
SERIAL.RRSC.msg.2=The "readResolve()" method of the class ''{0}'' may have a return value other than the Serializable instance.
SERIAL.RRSC.msg.3=The "readResolve()" method of the class ''{0}'' does not have the correct signature.
SERIAL.RWAF=Ensure that all fields are assigned by the 'readObject()' method and written out by the 'writeObject()' method
SERIAL.RWAF.CHECK_READ-label=Check 'readObject' methods
SERIAL.RWAF.CHECK_WRITE-label=Check 'writeObject' methods
SERIAL.RWAF.MAX_LEVEL-label=Maximum level of checking allowed
SERIAL.RWAF.msg.1=The ''{0}'' field is not read by the ''readObject()'' method.
SERIAL.RWAF.msg.2=The ''{0}'' field is not written out by the ''writeObject()'' method.
SERIAL.SCBNP=Always declare writeObject and readObject methods for Serializable subclasses of non-Serializable parents
SERIAL.SCBNP.msg.1=Class has a non-serializable parent but implements Serializable without specifying readObject or WriteObject methods.
SERIAL.SCBNP.msg.2=Class has a non-serializable parent but implements Serializable without specifying readObject method.
SERIAL.SCBNP.msg.3=Class has a non-serializable parent but implements Serializable without specifying WriteObject method.
SERIAL.SNNAC=Avoid serializable classes that extend a superclass without a zero-argument constructor
SERIAL.SNNAC.msg.1=Superclass ''{0}'' does not have a zero-argument constructor and might cause a serialization failure.
SERIAL.SNNAC.msg.2=Superclasses {0}, do not have a zero-argument constructor and might cause a serialization failure.
SERIAL.SNSO=Do not store non-serializable objects as HttpSession attributes
SERIAL.SNSO.CHECK_ABSTRACT-label=Check abstract classes
SERIAL.SNSO.CHECK_COLLECTION-label=Check Collections
SERIAL.SNSO.CHECK_INTERFACE-label=Check interfaces
SERIAL.SNSO.CHECK_MAP-label=Check Maps
SERIAL.SNSO.IGNORE_NULL-label=Ignore "null" values
SERIAL.SNSO.msg.1=Argument ''{0}'' to method "setAttribute" is non-serializable.
SERIAL.SPF=Declare 'serialPersistentFields' "private static final"
SERIAL.SPF.msg.1="serialPersistentFields" of class ''{0}'' should be declared "private static final".
SERIAL.SRLZ=Do not declare SerialVersionUID in classes that do not implement Serializable
SERIAL.SRLZ.msg.1=serialVersionUID declared, but class does not implement Serializable.
SERIAL.SROS=Do not declare the 'readObject()' method as "synchronized"
SERIAL.SROS.msg.1=Method readObject()  is synchronized.
SERIAL.VOBD=Validate objects before deserialization
SERIAL.VOBD.msg.1=The object read from the ObjectInputStream is not validated before deserialization
SERVLET=Servlets
SERVLET.CETS=Catch all exceptions which may be thrown within Servlet methods
SERVLET.CETS.msg.1=The method ''{0}()'' is declared to throw the exception type ''{1}'', but this exception is not caught.
SERVLET.LML=Avoid using collections without size limit in servlets
SERVLET.LML.msg.1=Field ''{0}'' is used in servlet without limit size
SERVLET.MDC=Declare a "public" constructor that takes no parameters
SERVLET.MDC.msg.1=No argument constructor or default constructor does not exist.
SERVLET.MDC.msg.2=No argument constructor should be "public".
SERVLET.NSIS=Do not create static variables in a servlet
SERVLET.NSIS.msg.1=Do not create static variable ''{0}'' in a servlet
SERVLET.NSSS=Do not use static variables in servlets without synchronization
SERVLET.NSSS.msg.1=Static variable ''{0}'' used in servlet without synchronization
SERVLET.SOP=Minimize usage of System.out and System.err in Servlets
SERVLET.SOP.msg.1=System.out or System.err used in a Servlet
SERVLET.SYN=Minimize synchronization in Servlets
SERVLET.SYN.NUM_LINES-label=Flag "synchronized" blocks with number of lines greater than
SERVLET.SYN.msg.1="synchronized" block contains more than ''{0}'' statements.
SERVLET.UCO=Use a Context Object to manage HTTP request parameters
SERVLET.UCO.msg.1=Consider using a "Context" Object instead of calling ''{0}()''.
SPRING=Spring Framework
SPRING.ATCFG=Follow configuration class conventions
SPRING.ATCFG.msg.1=Configuration class with final modifier.
SPRING.ATCFG.msg.2=Configuration class is a local class.
SPRING.ATCFG.msg.3=Configuration class have invalid or missing constructor.
SPRING.DCSRFJAVA=Do not disable CSRF protection
SPRING.DCSRFJAVA.msg.1=CSRF protection is disabled.
SPRING.JDBCTEMPLATE=Avoid using native JDBC
SPRING.JDBCTEMPLATE.CHECK_SIMPLE_JDBC_TEMPLATE-label=Avoid using SimpleJdbcTemplate (From Spring Framework 3.0.1 is deprecated)
SPRING.JDBCTEMPLATE.msg.1=Avoid using native jdbc to open connection.
SPRING.JDBCTEMPLATE.msg.2=Avoid using native jdbc to prepare statement.
SPRING.JDBCTEMPLATE.msg.3=Avoid using native jdbc to execute statement.
SPRING.JDBCTEMPLATE.msg.4=Avoid using native jdbc to close connection.
SPRING.JDBCTEMPLATE.msg.5=Avoid using deprecated SimpleJdbcTemplate class.
SPRING.REQMAP=Ensure that methods annotated with @RequestMapping specify the HTTP request method they call
SPRING.REQMAP.msg.1=The ''{0}'' method annotated with @RequestMapping does not explicitly specify the HTTP request method it calls
SPRING.REQMAP.msg.2=The ''{0}'' method annotated with @RequestMapping calls more than one HTTP request method.
STRUTS=Struts Framework
STRUTS.ACDA=Avoid accessing a database from Action Classes
STRUTS.ACDA.msg.1=Database accessed here.
STRUTS.ACJC=Avoid accessing a JSP page from Action Classes
STRUTS.ACJC.CHECK_OPEN_CONNECTION-label=Check 'URL.openConnection()' calls
STRUTS.ACJC.CHECK_REDIRECT-label=Check 'HttpServletResponse.sendRedirect()' calls
STRUTS.ACJC.msg.1=Opening connection to JSP page here.
STRUTS.ACJC.msg.2=Redirecting to JSP page here.
STRUTS.FIELDS=Provide an appropriate getter and setter method for each field in a form bean.
STRUTS.FIELDS.IGNORE_LIST-label=Ignore fields with names\:
STRUTS.FIELDS.msg.1=Form bean does not contain a getter method for field ''{0}''.
STRUTS.FIELDS.msg.2=Form bean does not contain a setter method for field ''{0}''.
STRUTS.FORM=Include only getter and setter methods in form beans
STRUTS.FORM.ALLOWED_LIST-label=Allow methods with the following names\:
STRUTS.FORM.msg.1=Method other than a "getter"/"setter" declared inside a form bean class\: ''{0}''.
STRUTS.IACM=Avoid calling methods of Action Classes
STRUTS.IACM.msg.1=Action Class method ''{0}'' is called.
STRUTS.INST=Do not declare instance variables in Struts Action classes
STRUTS.INST.IGNORE_LIST-label=Allow instance variables with the following names\:
STRUTS.INST.msg.1=Instance variable declared in an Action class.
STRUTS.PMAC=Avoid public methods in Action Classes
STRUTS.PMAC.msg.1=Action Class method ''{0}'' is "public".
TRS=Threads & Synchronization
TRS.AIL=Do not use Atomic variables when always accessed in synchronized manner.
TRS.AIL.msg.1=Atomic variable\: ''{0}'' always accessed in synchronized manner.
TRS.ANF=Do not use 'notify()'; use 'notifyAll()' instead so that all waiting threads will be notified.
TRS.ANF.msg.1='notify()' is called in the method\: 'notifyThread'
TRS.ATI=Avoid accidental use of "Thread.interrupted()".
TRS.ATI.msg.1=Thread ''{0}'' calls "interrupted" here.
TRS.AUTG=Do not use variables of the unsafe type 'java.lang.ThreadGroup'
TRS.AUTG.msg.1=Use of the unsafe type ''java.lang.ThreadGroup'' \: {0}.
TRS.CDF=Avoid invoking methods using "static" 'Calendar', 'DateFormat', or 'SimpleDateFormat'.
TRS.CDF.msg.1=Method ''{0}()'' is called by "static" field of ''{1}''.
TRS.CHM=Use ConcurrentHashMap instead of Hashtable and "synchronizedMap" wrapped HashMap when possible.
TRS.CHM.CHECK_HASHMAP-label=Check HashMap wrapped with "synchronizedMap"
TRS.CHM.CHECK_HASHTABLE-label=Check Hashtable
TRS.CHM.msg.1=Hashtable ''{0}'' may have improved performance as a ConcurrentHashMap.
TRS.CHM.msg.2="synchronizedMap" ''{0}'' may have improved performance as a ConcurrentHashMap.
TRS.CIET=Do not catch InterruptedException except in classes extending Thread.
TRS.CIET.ALLOW_LOGGING-label=Allow logging without rethrowing or resetting status.
TRS.CIET.ALLOW_RETHROW-label=Allow rethrowing an exception of any type.
TRS.CIET.LOGGER_LIST-label=Specify loggers with fully qualified name.
TRS.CIET.msg.1=Catching InterruptedException in class\: ''{0}'', which does not extend Thread.
TRS.CLQ=Use ConcurrentLinkedQueue instead of Vector and synchronizedList when possible
TRS.CLQ.msg.1=Use ConcurrentLinkedQueue instead of Vector.
TRS.CLQ.msg.2=Use ConcurrentLinkedQueue instead of synchronizedList.
TRS.CMA=Avoid compound synchronized collection accesses which violate atomicity.
TRS.CMA.CHECK_LEGACY-label=Check legacy synchronized "Hashtable" and "Vector"
TRS.CMA.msg.1=Method ''{0}'' performs compound action on "synchronized" collection ''{1}''.
TRS.CSFS=Do not cause deadlocks by calling a "synchronized" method from a "synchronized" method
TRS.CSFS.msg.1=Calling "synchronized" method from a "synchronized" method.
TRS.CSTART=Do not call the "start" method of threads from inside a constructor.
TRS.CSTART.CHECK_TYPES-label=Check the following constructors\:
TRS.CSTART.CHECK_TYPES.0-label=Check only classes extending Thread
TRS.CSTART.CHECK_TYPES.1-label=Check all classes
TRS.CSTART.msg.1="start" method called from inside constructor ''{0}''.
TRS.CTRE=Do not let "this" reference escape during construction.
TRS.CTRE.msg.1=Method invocation ''{0}'' publishes an inner class in constructor ''{1}''.
TRS.DCL=Avoid unsafe implementations of the "double-checked locking" pattern.
TRS.DCL.msg.1=The "double-checked locking" pattern is used; this pattern can cause unexpected problems when compiler optimizations are performed.
TRS.DOPQ=Do not use DiscardOldestPolicy with PriorityBlockingQueue
TRS.DOPQ.msg.1=''{0}'' discards highest priority task from priority queue.
TRS.GSD=Do not use "getState" except for debugging purposes.
TRS.GSD.msg.1=Thread ''{0}'' calls "getState" here.
TRS.IASF=Inspect accesses to "static" fields which may require synchronization
TRS.IASF.CHECK_LOCALS-label=Check non-static instance fields
TRS.IASF.msg.1=This code may not be thread-safe; setting and accessing the field ''{0}'' may require synchronization.
TRS.ILI=Make lazy initializations thread-safe
TRS.ILI.msg.1=Lazy initialization is not thread-safe\: {0}.
TRS.IRET=Implement Runnable instead of extending Thread.
TRS.IRET.msg.1=''{0}'' extends Thread.
TRS.IRUN=Do not call the 'run()' method directly on classes extending 'java.lang.Thread' or implementing 'java.lang.Runnable'.
TRS.IRUN.CHECK_RUNNABLE-label=Check classes implementing 'java.lang.Runnable'
TRS.IRUN.msg.1=''{0}'', which extends 'java.lang.Thread', calls method 'run()'.
TRS.IRUN.msg.2=''{0}'', which implements 'java.lang.Runnable' calls method 'run()'.
TRS.ISTART=Do not call the 'start()' method directly on Thread class instances 
TRS.ISTART.CHECK_ONLY_IN_LOOPS-label=Ignore method calls outside of loops
TRS.ISTART.msg.1=A call to the Thread.start() method.
TRS.LORD=Ensure that nested locks are ordered correctly
TRS.LORD.msg.1=Lock ''{0}'' should not be wrapped by lock ''{1}''.
TRS.MRAV=Access related Atomic variables in a synchronized block.
TRS.MRAV.msg.1=Atomic variables\: ''{0}'' are not accessed in a synchronized block.
TRS.MRUN=Give subclasses of Thread a 'run()' method so they can run as separate threads
TRS.MRUN.msg.1=Subclass of Thread needs a 'run()' method.
TRS.NAME=Ensure threads are named.
TRS.NAME.NO_CONSTANT_NAMES-label=Do not allow constant String literals for thread names.
TRS.NAME.msg.1=Thread ''{0}'' initialized without a name.
TRS.NAME.msg.2=Constructor ''{0}'' does not initialize thread name.
TRS.NAME.msg.3=''{0}'' initialized without a name.
TRS.NAME.msg.4=Thread initialized with constant name.
TRS.NAME.msg.5=Constructor initializes thread with constant name.
TRS.NSYN=Ensure 'wait()', 'notify()' and 'notifyAll()' are invoked on an object that is clearly synchronized in its enclosing mod scope.
TRS.NSYN.msg.1=''{0}()'' might throw ''IllegalMonitorStateException'' as it's not enclosed in corresponding "synchronized" block or method.
TRS.OSNS=Avoid overriding synchronized methods with non-synchronized methods.
TRS.OSNS.IGNORE_CALL_OVERRIDDEN-label=Ignore methods which call the method they override
TRS.OSNS.msg.1=Non-synchronized method ''{0}'' overrides a synchronized method.
TRS.RLF=Release Locks in a "finally" block.
TRS.RLF.msg.1=Lock ''{0}'' not released from "finally" block.
TRS.RUN=Use synchronization on methods that implement 'Runnable.run()'.
TRS.RUN.IGNORE_CONCURRENCY_TAG-label=Ignore methods with "@concurrency" tag values of "concurrent" or "sequential"
TRS.RUN.msg.1='Runnable.run()' method should be synchronized if it cannot be safely executed concurrently.
TRS.SCS=Do not synchronize on constant Strings.
TRS.SCS.msg.1=Synchronizing on a constant String can lead to deadlocks.
TRS.SGC=Do not synchronize on the class object returned by the 'getClass' method
TRS.SGC.msg.1=This 'synchronized' block synchronizes on the class object returned by the 'getClass()' method.
TRS.SNSM=Do not mix "static" and non-"static" "synchronized" methods.
TRS.SNSM.msg.1=Class ''{0}'' contains ''{1}'' static and ''{2}'' non-static synchronized methods which use different lock objects.
TRS.SOBC=Do not synchronize on a collection view if the backing collection is accessible
TRS.SOBC.msg.1=Do not synchronize on the collection view ''{0}''
TRS.SOL=Do not perform synchronization using the "synchronized" keyword on implementations of "java.util.concurrent.locks.Lock"
TRS.SOL.msg.1=Use the 'lock()' and 'unlock()' methods instead of the "synchronized" keyword with "Lock" objects.
TRS.SOPF=Do not synchronize on "public" fields since doing so may cause deadlocks
TRS.SOPF.CHECK_ACCESSIBILITY-label=Check fields with the following accessibilities\:
TRS.SOPF.CHECK_ACCESSIBILITY.0-label=Check "public" fields
TRS.SOPF.CHECK_ACCESSIBILITY.1-label=Check non-"private" fields
TRS.SOPF.msg.1=Synchronization on the "{0}" field "{1}".
TRS.SSCI=Manually synchronize on 'synchronized' collections when iterating over them.
TRS.SSCI.CHECK_LEGACY-label=Check Hashtable and Vector
TRS.SSCI.msg.1=Iteration over ''{0}'' should be synchronized on ''{1}''.
TRS.SSDF=Synchronize access to "static" SimpleDataFormats
TRS.SSDF.msg.1=SimpleDateFormat ''{0}'' may be accessed in an unsynchronized manner.
TRS.SSUG=Make the get method for a field synchronized if the set method is synchronized
TRS.SSUG.msg.1=There is a synchronized set method for the field ''{0}'', so this get method should also be synchronized.
TRS.STR=Do not perform synchronization nor call semaphore methods on an Object's 'this' reference
TRS.STR.CHECK_METHODS-label=Check 'wait()', 'notify()', and 'notifyAll()' calls on 'this'
TRS.STR.CHECK_SYNCHRONIZE-label=Check synchronize on 'this'
TRS.STR.msg.1=The semaphore method ''{0}'' is invoked on the ''this'' reference; this may break multithread correctness.
TRS.STR.msg.2=This 'synchronized' block performs synchronization on the 'this' reference; this may break multithread correctness.
TRS.THRD=Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'.
TRS.THRD.msg.1=Unsafe method ''{0}'' was called.
TRS.THRD.msg.2=''{0}'' should not be used because it only exists for use with the deadlock-prone ''suspend()'' method.
TRS.THRD.msg.3=Deadlock-prone method ''{0}'' was called.
TRS.THRD.msg.4=Deprecated method ''{0}'' was called
TRS.TSHL=Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks.
TRS.TSHL.msg.1='Thread.sleep()' called from a "synchronized" block.  It may be better to use 'wait()' instead.
TRS.TSHL.msg.2='Thread.sleep()' called from a "synchronized" method.  It may be better to use 'wait()' instead.
TRS.UACS=Avoid unsynchronized accesses of "Collections.synchronized" wrapped Collections.
TRS.UACS.msg.1=Collection ''{0}'' accessed here, should access through wrapped Collection.
TRS.UCM=Use unsynchronized Collections/Maps only when safe.
TRS.UCM.IGNORE_IMMUTABLE-label=Ignore immutable collections.
TRS.UCM.IGNORE_NON_STATIC-label=Ignore non-static fields.
TRS.UCM.msg.1=Field ''{0}'' initialized to unsynchronized value.
TRS.USL=Use the same locking object to access variables.
TRS.USL.msg.1=''{0}'' usually locked by\: ''{1}'' but is locked by\: ''{2}''.
TRS.USL.msg.2=''{0}'' usually locked by\: ''{1}'' but is accessed unlocked''.
TRS.UT=Do not start a thread without specifying a 'run()' method
TRS.UT.msg.1=This method call may start a thread which does not specify a 'run()' method.
TRS.UWIL=Call 'wait()' and 'await()' only inside a loop that tests the liveness condition
TRS.UWIL.msg.1=Called ''{0}'' without an enclosing loop to test the liveness condition.
TRS.UWNA=Use 'wait()' and 'notifyAll()' instead of polling loops.
TRS.UWNA.msg.1=Found 'sleep()' in a loop.  You may want to use 'wait()' and 'notifyAll()' instead
TRS.WOC=Use the correct method calls on "java.util.concurrent.locks.Condition" objects
TRS.WOC.msg.1=You may have intended to use the ''{0}()'' method instead of ''{1}()'' on this "Condition" object.
TRS.WOS=Do not make the "writeObject()" method synchronized if no other method is synchronized
TRS.WOS.msg.1=This "writeObject()" method is the only synchronized method in this class.
UC=Unused Code
UC.AAI=Avoid unnecessary modifiers in an "interface"
UC.AAI.CHECK_DECL-label=Check for "abstract" in interface declaration
UC.AAI.msg.1=Unnecessary {0} in {1} declaration\: {2}.
UC.ACC=Remove commented out Java code.
UC.ACC.IGNORE_TODO-label=Ignore comments prefaced by "TODO"
UC.ACC.msg.1=Comment contains Java code\: {0}
UC.AEEO=Ensure that classes do not explicitly extend 'java.lang.Object'
UC.AEEO.ENFORCE_OR_AVOID-label=Avoid or enforce explicitly extending 'Object'?
UC.AEEO.ENFORCE_OR_AVOID.0-label=Avoid
UC.AEEO.ENFORCE_OR_AVOID.1-label=Enforce
UC.AEEO.msg.1=Class ''{0}'' is explicitly extending 'java.lang.Object'.
UC.AEEO.msg.2=Class ''{0}'' does not explicitly extend 'java.lang.Object'.
UC.AESTAT=Avoid empty static and non-static initializers.
UC.AESTAT.CHECK_NON_STATIC-label=Check non-static initializers
UC.AESTAT.CHECK_STATIC-label=Check static initializers
UC.AESTAT.msg.1=Avoid empty static initializer.
UC.AESTAT.msg.2=Avoid empty non-static initializer.
UC.AMAMI=Do not override "abstract" methods of a parent class with "abstract" methods.
UC.AMAMI.msg.1=Avoid overriding "abstract" method of parent class with "abstract" method
UC.ARTD=Avoid redundant throw clauses
UC.ARTD.msg.1=Exception ''{0}'' is redundant in the body of method ''{1}''
UC.AURCO=Avoid collection objects that are never read
UC.AURCO.msg.1=''{0}'' field ''{1}'' is never read.
UC.AURCO.msg.2=''{0}'' variable ''{1}'' is never read.
UC.AURV=Avoid local variables that are never read
UC.AURV.UC.AUV-label=Check for variables which are never used.
UC.AURV.UC.AVNR-label=Check for variables which are assigned but never read.
UC.AURV.msg.1=Variable ''{0}'' is never used.
UC.AURV.msg.2=Variable ''{0}'' is assigned but never read.
UC.DIEB=Avoid duplicate code in 'if' branches.
UC.DIEB.CHECK_EMPTY-label=Check empty branches
UC.DIEB.CHECK_NESTED-label=Check nested branches
UC.DIEB.msg.1=Branch contains duplicated code from branch at line ''{0}''.
UC.EF=Avoid empty "finalize()" methods.
UC.EF.msg.1=Avoid empty 'finalize()' method
UC.FCSF=Avoid redundant 'finalize()' methods which only call the superclass' 'finalize()' method
UC.FCSF.msg.1=This 'finalize()' method does nothing except call the superclass' 'finalize()' method.
UC.PF=Avoid unused "private" fields
UC.PF.CHECK_INIT_NULL-label=Check for fields which are never set to a non-null value.
UC.PF.IGNORE_FINAL-label=Ignore "final" fields
UC.PF.msg.1=Unused "private" field\: {0}.
UC.PF.msg.2="Private" field is never set to a non-null value\: {0}.
UC.PIMPORT=Do not import classes from the package that contains the current class
UC.PIMPORT.msg.1=Imported class ''{0}'' is from the package that contains the current class.
UC.PIMPORT.msg.2=Imported package is the same as the package that contains the current class.
UC.PM=Avoid unused "private" methods
UC.PM.IGNORED_ANNOTATIONS-label=Ignore methods preceded by annotations with qualified names\:
UC.PM.IGNORE_JCONTRACT-label=Ignore methods which are used within a Jcontract tag
UC.PM.IGNORE_LIST-label=Ignore methods with names (in regular expression)\:
UC.PM.msg.1=Unused "private" method\: {0}.
UC.RSKE=Avoid redundant 'static' keywords in enum type declarations
UC.RSKE.msg.1=This 'static' keyword is unnecessary.
UC.SNE=Avoid empty "synchronized" statements.
UC.SNE.msg.1=Avoid empty synchronized statement.
UC.SO=Avoid methods that only call the overridden implementation (superclass implementation)
UC.SO.msg.1=Method ''{0}'' only calls the overridden implementation.
UC.SO.msg.2=The implementation of method ''{0}'' is identical to the overridden implementation.
UC.UCATCH=Use a caught exception in the "catch" block
UC.UCATCH.IGNORE_VARIABLES-label=Ignore exceptions with names matching the following regular expression(s)\:
UC.UCATCH.REGULAR_EXPRESSION-label=Comment to suppress the error(in regular expression)\:
UC.UCATCH.msg.1=Caught exception ''{0}'' is not used in "catch" block.
UC.UCIF=Avoid unnecessary 'if' statements.
UC.UCIF.msg.1=Unconditional "if" statement.
UC.UCIF.msg.2=Unconditionally true "if" statement.
UC.UCIF.msg.3=Unconditionally false "if" statement.
UC.UES=Avoid unnecessary "else" statements.
UC.UES.IGNORE_ELSE_IF-label=Ignore "else if" statements
UC.UES.msg.1=This "else" statement is unnecessary.
UC.UIMPORT=Avoid unused "import" statements
UC.UIMPORT.COUNT_JAVADOC-label=Ignore "import" statements if the "import" statement is used in the Javadoc.
UC.UIMPORT.UC.UIMPORT2-label=Ignore unused "import" statements if the fully-qualified type name is used.
UC.UIMPORT.msg.1=Unused import statement ''{0}''.
UC.UP=Avoid unused parameters
UC.UP.CHECK_EMPTY-label=Check "empty" methods.
UC.UP.CHECK_PACKAGE-label=Check package-private methods.
UC.UP.CHECK_PRIVATE-label=Check "private" methods.
UC.UP.CHECK_PROTECTED-label=Check "protected" methods.
UC.UP.CHECK_PUBLIC-label=Check "public" methods.
UC.UP.CHECK_READ-label=Check that the parameter is read for parameters with primitive types.
UC.UP.msg.1=Unused parameter\: {0}.
UC.UP.msg.2=Unused parameter\: {1}.
UC.UP.msg.3=Unused parameter\: {2}.
UC.UPC=Avoid unused "private" classes or interfaces
UC.UPC.msg.1=Unused "private" {0}\: {1}.
VVSG=Voluntary Voting System Guidelines 2.0
VVSG.11_1_B=11.1-B\: Voter information in log files
VVSG.11_1_B.CONSEN=Do not log confidential or sensitive information
VVSG.11_1_B.CONSEN.LOGGER_NAMES-label=Acceptable Loggers (Specify fully qualified names)
VVSG.11_1_B.CONSEN.LOG_METHOD_EXPRESSIONS-label=Logging method name in regular expression
VVSG.11_1_B.CONSEN.SUSPICIOUS_WORDS-label=Regular expressions representing sensive data\:
VVSG.11_1_B.CONSEN.msg.1=''{0}'' should not be used by a logger, it can expose confidential info.
VVSG.11_3_2_C=11.3.2-C\: Secure storage of authentication data
VVSG.11_3_2_C.MDSALT=Use hash functions with a salt
VVSG.11_3_2_C.MDSALT.msg.1=A salt is not added to the digest
VVSG.11_5_A=11.5-A\: Session time limits
VVSG.11_5_A.RUIM=Ensure proper session expiration
VVSG.11_5_A.RUIM.msg.1=The session expiration time used in this metod call is obtained form a servlet request
VVSG.11_5_A.RUIM.msg.2=The negative timeout value used in this metod call prevents session expiration
VVSG.13_3_C=13.3-C\: Cryptographic strength
VVSG.13_3_C.AISSAJAVA=Avoid using insecure cryptographic algorithms for data encryption with Spring
VVSG.13_3_C.AISSAJAVA.BANNED_ALGO_ENCODERS-label=Insecure classes that should not be used for encryption
VVSG.13_3_C.AISSAJAVA.BANNED_ALGO_ENCODERS.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_ENCODERS_COLUMN1-label=Fully Qualified Name of Insecure Class
VVSG.13_3_C.AISSAJAVA.BANNED_ALGO_NAMES-label=Insecure algorithms in the MessageDigestPasswordEncoder class
VVSG.13_3_C.AISSAJAVA.BANNED_ALGO_NAMES.SECURITY_WSC_AISSAJAVA_BANNED_ALGO_NAMES_COLUMN1-label=Name of Insecure Algorithm
VVSG.13_3_C.AISSAJAVA.msg.1=The cryptographic class is insecure.
VVSG.13_3_C.AISSAJAVA.msg.2=The cryptographic algorithm used in the constructor of MessageDigestPasswordEncoder is insecure.
VVSG.13_3_C.CKTS=Avoid using cryptographic keys which are too short.
VVSG.13_3_C.CKTS.MIN_LENGTH_TABLE-label=Minimum Key Size for Each Algorithm
VVSG.13_3_C.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN1-label=Algorithm Name
VVSG.13_3_C.CKTS.MIN_LENGTH_TABLE.SECURITY__WSC__CKTS__MIN_LENGTH_TABLE__COLUMN2-label=Minimum Key Size (in Bits)
VVSG.13_3_C.CKTS.msg.1=Key size ({0} bits) is below the recommended minimum key size ({1} bits) for the "{2}" algorithm.
VVSG.14_2_G=14.2-G\: Unused or dead code
VVSG.14_2_G.AAI=Avoid unnecessary modifiers in an "interface"
VVSG.14_2_G.AAI.CHECK_DECL-label=Check for "abstract" in interface declaration
VVSG.14_2_G.AAI.msg.1=Unnecessary {0} in {1} declaration\: {2}.
VVSG.14_2_G.ACC=Remove commented out Java code.
VVSG.14_2_G.ACC.IGNORE_TODO-label=Ignore comments prefaced by "TODO"
VVSG.14_2_G.ACC.msg.1=Comment contains Java code\: {0}
VVSG.14_2_G.AEEO=Ensure that classes do not explicitly extend 'java.lang.Object'
VVSG.14_2_G.AEEO.ENFORCE_OR_AVOID-label=Avoid or enforce explicitly extending 'Object'?
VVSG.14_2_G.AEEO.ENFORCE_OR_AVOID.0-label=Avoid
VVSG.14_2_G.AEEO.ENFORCE_OR_AVOID.1-label=Enforce
VVSG.14_2_G.AEEO.msg.1=Class ''{0}'' is explicitly extending 'java.lang.Object'.
VVSG.14_2_G.AEEO.msg.2=Class ''{0}'' does not explicitly extend 'java.lang.Object'.
VVSG.14_2_G.AESTAT=Avoid empty static and non-static initializers.
VVSG.14_2_G.AESTAT.CHECK_NON_STATIC-label=Check non-static initializers
VVSG.14_2_G.AESTAT.CHECK_STATIC-label=Check static initializers
VVSG.14_2_G.AESTAT.msg.1=Avoid empty static initializer.
VVSG.14_2_G.AESTAT.msg.2=Avoid empty non-static initializer.
VVSG.14_2_G.AMAMI=Do not override "abstract" methods of a parent class with "abstract" methods.
VVSG.14_2_G.AMAMI.msg.1=Avoid overriding "abstract" method of parent class with "abstract" method
VVSG.14_2_G.ARTD=Avoid redundant throw clauses
VVSG.14_2_G.ARTD.msg.1=Exception ''{0}'' is redundant in the body of method ''{1}''
VVSG.14_2_G.AURCO=Avoid collection objects that are never read
VVSG.14_2_G.AURCO.msg.1=''{0}'' field ''{1}'' is never read.
VVSG.14_2_G.AURCO.msg.2=''{0}'' variable ''{1}'' is never read.
VVSG.14_2_G.AURV=Avoid local variables that are never read
VVSG.14_2_G.AURV.UC.AUV-label=Check for variables which are never used.
VVSG.14_2_G.AURV.UC.AVNR-label=Check for variables which are assigned but never read.
VVSG.14_2_G.AURV.msg.1=Variable ''{0}'' is never used.
VVSG.14_2_G.AURV.msg.2=Variable ''{0}'' is assigned but never read.
VVSG.14_2_G.DIEB=Avoid duplicate code in 'if' branches.
VVSG.14_2_G.DIEB.CHECK_EMPTY-label=Check empty branches
VVSG.14_2_G.DIEB.CHECK_NESTED-label=Check nested branches
VVSG.14_2_G.DIEB.msg.1=Branch contains duplicated code from branch at line ''{0}''.
VVSG.14_2_G.EF=Avoid empty "finalize()" methods.
VVSG.14_2_G.EF.msg.1=Avoid empty 'finalize()' method
VVSG.14_2_G.FCSF=Avoid redundant 'finalize()' methods which only call the superclass' 'finalize()' method
VVSG.14_2_G.FCSF.msg.1=This 'finalize()' method does nothing except call the superclass' 'finalize()' method.
VVSG.14_2_G.PF=Avoid unused "private" fields
VVSG.14_2_G.PF.CHECK_INIT_NULL-label=Check for fields which are never set to a non-null value.
VVSG.14_2_G.PF.IGNORE_FINAL-label=Ignore "final" fields
VVSG.14_2_G.PF.msg.1=Unused "private" field\: {0}.
VVSG.14_2_G.PF.msg.2="Private" field is never set to a non-null value\: {0}.
VVSG.14_2_G.PIMPORT=Do not import classes from the package that contains the current class
VVSG.14_2_G.PIMPORT.msg.1=Imported class ''{0}'' is from the package that contains the current class.
VVSG.14_2_G.PIMPORT.msg.2=Imported package is the same as the package that contains the current class.
VVSG.14_2_G.PM=Avoid unused "private" methods
VVSG.14_2_G.PM.IGNORED_ANNOTATIONS-label=Ignore methods preceded by annotations with qualified names\:
VVSG.14_2_G.PM.IGNORE_JCONTRACT-label=Ignore methods which are used within a Jcontract tag
VVSG.14_2_G.PM.IGNORE_LIST-label=Ignore methods with names (in regular expression)\:
VVSG.14_2_G.PM.msg.1=Unused "private" method\: {0}.
VVSG.14_2_G.RSKE=Avoid redundant 'static' keywords in enum type declarations
VVSG.14_2_G.RSKE.msg.1=This 'static' keyword is unnecessary.
VVSG.14_2_G.SNE=Avoid empty "synchronized" statements.
VVSG.14_2_G.SNE.msg.1=Avoid empty synchronized statement.
VVSG.14_2_G.UCATCH=Use a caught exception in the "catch" block
VVSG.14_2_G.UCATCH.IGNORE_VARIABLES-label=Ignore exceptions with names matching the following regular expression(s)\:
VVSG.14_2_G.UCATCH.REGULAR_EXPRESSION-label=Comment to suppress the error(in regular expression)\:
VVSG.14_2_G.UCATCH.msg.1=Caught exception ''{0}'' is not used in "catch" block.
VVSG.14_2_G.UCIF=Avoid unnecessary 'if' statements.
VVSG.14_2_G.UCIF.msg.1=Unconditional "if" statement.
VVSG.14_2_G.UCIF.msg.2=Unconditionally true "if" statement.
VVSG.14_2_G.UCIF.msg.3=Unconditionally false "if" statement.
VVSG.14_2_G.UES=Avoid unnecessary "else" statements.
VVSG.14_2_G.UES.IGNORE_ELSE_IF-label=Ignore "else if" statements
VVSG.14_2_G.UES.msg.1=This "else" statement is unnecessary.
VVSG.14_2_G.UIF=Avoid unreachable "else if" and "else" cases
VVSG.14_2_G.UIF.IGNORE_CONSTANTS-label=Ignore "static final boolean" constants and "boolean" literals
VVSG.14_2_G.UIF.msg.1=The "else" statement is unreachable because of previous branches.
VVSG.14_2_G.UIF.msg.2=The "else" condition always evaluates to "false" because of previous branches.
VVSG.14_2_G.UP=Avoid unused parameters
VVSG.14_2_G.UP.CHECK_EMPTY-label=Check "empty" methods.
VVSG.14_2_G.UP.CHECK_PACKAGE-label=Check package-private methods.
VVSG.14_2_G.UP.CHECK_PRIVATE-label=Check "private" methods.
VVSG.14_2_G.UP.CHECK_PROTECTED-label=Check "protected" methods.
VVSG.14_2_G.UP.CHECK_PUBLIC-label=Check "public" methods.
VVSG.14_2_G.UP.CHECK_READ-label=Check that the parameter is read for parameters with primitive types.
VVSG.14_2_G.UP.msg.1=Unused parameter\: {0}.
VVSG.14_2_G.UP.msg.2=Unused parameter\: {1}.
VVSG.14_2_G.UP.msg.3=Unused parameter\: {2}.
VVSG.14_2_G.UPC=Avoid unused "private" classes or interfaces
VVSG.14_2_G.UPC.msg.1=Unused "private" {0}\: {1}.
VVSG.14_2_I=14.2-I\: Importing software libraries
VVSG.14_2_I.IMPTD=Avoid or enforce usage of '*' form of import statements
VVSG.14_2_I.IMPTD.CHECK_SCOPE-label=Rule option\:
VVSG.14_2_I.IMPTD.CHECK_SCOPE.0-label=Do not use wild card when importing class.
VVSG.14_2_I.IMPTD.CHECK_SCOPE.1-label=Only use wild card when importing class.
VVSG.14_2_I.IMPTD.CHECK_SCOPE.2-label=Use customized setting
VVSG.14_2_I.IMPTD.SINGLE_TYPE_THRESHOLD-label=Use single type import when number of used types of same package less than 
VVSG.14_2_I.IMPTD.SINGLE_TYPE_THRESHOLD.CODSTA__BP__IMPTD__SINGLE_TYPE_THRESHOLD__COLUMN1-label=
VVSG.14_2_I.IMPTD.SINGLE_TYPE_THRESHOLD.CODSTA__BP__IMPTD__SINGLE_TYPE_THRESHOLD__COLUMN2-label=
VVSG.14_2_I.IMPTD.WILD_CARD_THRESHOLD-label=Use wild card import when number of imported types of same package greater than
VVSG.14_2_I.IMPTD.WILD_CARD_THRESHOLD.CODSTA__BP__IMPTD__WILD_CARD_THRESHOLD__COLUMN1-label=
VVSG.14_2_I.IMPTD.WILD_CARD_THRESHOLD.CODSTA__BP__IMPTD__WILD_CARD_THRESHOLD__COLUMN2-label=
VVSG.14_2_I.IMPTD.msg.1="import" with star "*", Single-type imports should be used instead.
VVSG.14_2_I.IMPTD.msg.2=Single-type import is used, it should be replaced by wildcard "*" import.
VVSG.14_2_I.IMPTD.msg.3=Less than {1} actually used from this wildcard import\: {0}, use single type imports instead.
VVSG.14_2_I.IMPTD.msg.4=More than {1} used from the same package\: {0}, combine into a wildcard import instead.
VVSG.14_2_I.UIMPORT=Avoid unused "import" statements
VVSG.14_2_I.UIMPORT.COUNT_JAVADOC-label=Ignore "import" statements if the "import" statement is used in the Javadoc.
VVSG.14_2_I.UIMPORT.UC.UIMPORT2-label=Ignore unused "import" statements if the fully-qualified type name is used.
VVSG.14_2_I.UIMPORT.msg.1=Unused import statement ''{0}''.
VVSG.14_3_2_B=14.3.2-B\: Software verification for installation
VVSG.14_3_2_B.VJFS=Always verify JarFile signatures
VVSG.14_3_2_B.VJFS.msg.1=Consider using a JarFile constructor with verification enabled.
VVSG.2_3_1_C=2.3.1-C\: Intentional exceptions
VVSG.2_3_1_C.AEFC=Do not abuse exceptions as flow control statements.
VVSG.2_3_1_C.AEFC.msg.1=Avoid using throw clause as flow control statement.
VVSG.2_3_D=2.3-D\: Hard-coded passwords and keys
VVSG.2_3_D.HCCK=Avoid using hard-coded cryptographic keys
VVSG.2_3_D.HCCK.MIN_LENGTH-label=Check keys whose length is greater than 
VVSG.2_3_D.HCCK.msg.1=Hard-coded cryptographic key here.
VVSG.2_3_D.HCCS=Avoid passing hardcoded usernames/passwords/URLs to database connection methods.
VVSG.2_3_D.HCCS.CONNECT_METHS-description=Additional Database Connection Methods (in form of &lt;qualified name of declaring type&gt;\#&lt;method name&gt;)
VVSG.2_3_D.HCCS.CONNECT_METHS-label=Additional Database Connection Methods
VVSG.2_3_D.HCCS.msg.1=This call to ''{0}()'' may be dangerous because it passes in only hard-coded Strings.
VVSG.2_3_D.HCCS.msg.2=This call to ''{0}()'' may be dangerous because it uses a hard-coded password.
VVSG.2_4_A=2.4-A\: Modularity
VVSG.2_4_A.AMA=Avoid constructors and overriding methods which are more accessible than those of their super classes
VVSG.2_4_A.AMA.CHECK_HIDDEN-label=static
VVSG.2_4_A.AMA.PROTECTED_CONSTRUCTOR-label=protected
VVSG.2_4_A.AMA.PROTECTED_OVERRIDING-label=protected
VVSG.2_4_A.AMA.PUBLIC_CONSTRUCTOR-label=public
VVSG.2_4_A.AMA.PUBLIC_OVERRIDING-label=public
VVSG.2_4_A.AMA.group.0-label=Check overriding methods with access specifier
VVSG.2_4_A.AMA.group.1-label=Check constructors with access specifier
VVSG.2_4_A.AMA.msg.1=The constructor ''{0}'' is more accessible than the constructor in its superclass.
VVSG.2_4_A.AMA.msg.2=The overriding method ''{0}'' is more accessible than the method in its superclass.
VVSG.2_4_A.CACM=Keep all access control methods centralized to enforce consistency
VVSG.2_4_A.CACM.DANGEROUS_METHOD_LIST-description=Access control method names (in regular expressions) [qualified name of declaring type\#method name]
VVSG.2_4_A.CACM.DANGEROUS_METHOD_LIST-label=Access control method names (in regular expressions)
VVSG.2_4_A.CACM.ENCLOSING_METHOD_LIST-description=Centralized access control method names (in regular expressions) [qualified name of declaring type\#method name]
VVSG.2_4_A.CACM.ENCLOSING_METHOD_LIST-label=Centralized access control method names (in regular expressions)
VVSG.2_4_A.CACM.msg.1=''{0}()'' is not allowed to be invoked within ''{1}()'', it should only be invoked inside centralized access control method declarations.
VVSG.2_4_A.CACM.msg.2=''{0}()'' is not allowed to be invoked unless enclosed by centralized access control methods.
VVSG.2_4_A.DPAC=Declare "package-private" types as inaccessible as possible
VVSG.2_4_A.DPAC.ALLOW_PRIVATE_INNER-label=Allow inner types to be declared "private"
VVSG.2_4_A.DPAC.IGNORE_CLASSES-label=Ignore the classes that correspond to these qualified names
VVSG.2_4_A.DPAC.IGNORE_PROTECTED_PP-label=Ignore "protected" types which can be made package-private
VVSG.2_4_A.DPAC.msg.1=Class ''{0}'' should be declared {1}.
VVSG.2_4_A.DPAC.msg.2=Interface ''{0}'' should be declared {1}.
VVSG.2_4_A.DPAC.msg.3=Enum ''{0}'' should be declared {1}.
VVSG.2_4_A.DPAC.msg.4=Annotation ''{0}'' should be declared {1}.
VVSG.2_4_A.DPAF=Declare package-private fields as inaccessible as possible
VVSG.2_4_A.DPAF.IGNORE_ABSTRACT-label=Ignore fields declared in "abstract" classes
VVSG.2_4_A.DPAF.IGNORE_FINAL-label=Ignore "final" fields
VVSG.2_4_A.DPAF.msg.1=Field ''{0}'' should be declared {1}.
VVSG.2_4_A.DPAM=Declare package-private methods as inaccessible as possible
VVSG.2_4_A.DPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
VVSG.2_4_A.DPAM.CHECK_LOCAL-label=Check methods in local classes
VVSG.2_4_A.DPAM.msg.1=Method ''{0}()'' should be declared {1}.
VVSG.2_4_A.DPAM.msg.2=Constructor ''{0}()'' should be declared {1}.
VVSG.2_4_A.DPPC=Declare "public/protected" types as inaccessible as possible
VVSG.2_4_A.DPPC.ALLOW_PRIVATE_INNER-label=Allow inner types to be declared "private"
VVSG.2_4_A.DPPC.IGNORE_CLASSES-label=Ignore the classes that correspond to these qualified names
VVSG.2_4_A.DPPC.IGNORE_PROTECTED_PP-label=Ignore "protected" types which can be made package-private
VVSG.2_4_A.DPPC.msg.1=Class ''{0}'' should be declared {1}.
VVSG.2_4_A.DPPC.msg.2=Interface ''{0}'' should be declared {1}.
VVSG.2_4_A.DPPC.msg.3=Enum ''{0}'' should be declared {1}.
VVSG.2_4_A.DPPC.msg.4=Annotation ''{0}'' should be declared {1}.
VVSG.2_4_A.DPPF=Declare "public/protected" fields as inaccessible as possible
VVSG.2_4_A.DPPF.IGNORE_ABSTRACT-label=Ignore fields declared in "abstract" classes
VVSG.2_4_A.DPPF.IGNORE_FINAL-label=Ignore "final" fields
VVSG.2_4_A.DPPF.IGNORE_PROTECTED_PP-label=Ignore "protected" fields which can be made package-private
VVSG.2_4_A.DPPF.IGNORE_TYPE_TABLE-label=Ignore the following classes\: (specify with Glob expressions)
VVSG.2_4_A.DPPF.IGNORE_TYPE_TABLE.GLOBAL__DPPF__IGNORE_TYPE_TABLE__COLUMN1-label=Superclass
VVSG.2_4_A.DPPF.IGNORE_TYPE_TABLE.GLOBAL__DPPF__IGNORE_TYPE_TABLE__COLUMN2-label=Class
VVSG.2_4_A.DPPF.msg.1=Field ''{0}'' should be declared {1}.
VVSG.2_4_A.DPPM=Declare "public/protected" methods as inaccessible as possible
VVSG.2_4_A.DPPM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
VVSG.2_4_A.DPPM.CHECK_LOCAL-label=Check methods in local classes
VVSG.2_4_A.DPPM.IGNORE_OVERLOADED-label=Ignore "overloaded" methods
VVSG.2_4_A.DPPM.IGNORE_PROTECTED_PP-label=Ignore "protected" methods which can be made package-private
VVSG.2_4_A.DPPM.msg.1=Method ''{0}()'' should be declared {1}.
VVSG.2_4_A.DPPM.msg.2=Constructor ''{0}()'' should be declared {1}.
VVSG.2_4_A.SPAM=Declare a package-private method "final" if it is not overridden
VVSG.2_4_A.SPAM.CHECK_ABSTRACT-label=Check methods in abstract classes
VVSG.2_4_A.SPAM.CHECK_ANONYMOUS-label=Check methods in anonymous classes
VVSG.2_4_A.SPAM.CHECK_LOCAL-label=Check methods in local classes
VVSG.2_4_A.SPAM.CHECK_STATIC_METHOD-label=Check static methods
VVSG.2_4_A.SPAM.CHECK_UNUSED-label=Check unused methods
VVSG.2_4_A.SPAM.msg.1=Method ''{0}()'' should be declared "final".
VVSG.2_5_2_A=2.5.2-A\: Input validation and error defence
VVSG.2_5_2_A.AEAF=Do not extend from the Struts classes 'ActionForm' and 'DynaActionForm'.
VVSG.2_5_2_A.AEAF.msg.1=Consider extending 'DynaValidatorForm' or 'DynaValidatorActionForm'
VVSG.2_5_2_A.AEAF.msg.2=Consider extending 'ValidatorForm' or 'ValidatorActionForm'
VVSG.2_5_2_A.AUXD=Avoid parsing untrusted data with XMLDecoder
VVSG.2_5_2_A.AUXD.msg.1=The XMLDecoder class is used.
VVSG.2_5_2_A.CRRV=Check the return value of methods which read or skip input
VVSG.2_5_2_A.CRRV.CHECKED_METHOD_LIST-description=Methods to be checked\: (in form of &lt;fully qualified type name&gt;\#&lt;method&gt;(&lt;parameter1 type&gt;,&lt;parameter2 type&gt;))
VVSG.2_5_2_A.CRRV.CHECKED_METHOD_LIST-label=Methods to be checked\:
VVSG.2_5_2_A.CRRV.msg.1=The return value of this call to ''{0}()'' is not checked.
VVSG.2_5_2_A.CSVFV=Always call 'super.validate()' from validation methods in 'ActionForm' classes.
VVSG.2_5_2_A.CSVFV.msg.1=This validation method does not call 'super.validate()'.
VVSG.2_5_2_A.DCEMSL=Avoid untrusted input when logging messages with Seam Logging API
VVSG.2_5_2_A.DCEMSL.CLASS_FIELDS_ARE_SAFE-label=Consider class fields to be secure
VVSG.2_5_2_A.DCEMSL.msg.1=The ''{0}'' method called on the object of the Log class takes a dangerous argument.
VVSG.2_5_2_A.DXXE=Disable XML external entity injection.
VVSG.2_5_2_A.DXXE.msg.1=XXE injection has not been disabled.
VVSG.2_5_2_A.DXXE.msg.2=XXE injection has not been disabled. Ensure your parser version allows you to configure the required options.
VVSG.2_5_2_A.EDPM=Encapsulate constructor arguments with a validation function
VVSG.2_5_2_A.EDPM.DANGEROUS_TYPES_LIST-label=User-defined types to be inspected (in regular expressions)<BR/>[qualified name of declaring type]
VVSG.2_5_2_A.EDPM.ENCAPSULATE_METHOD_LIST-label=Validation method names (in regular expressions)<BR/>[qualified name of declaring type and method name]
VVSG.2_5_2_A.EDPM.ENCAPSULATE_METHOD_LIST.SECURITY__IBA__EDPM__ENCAPSULATE_METHOD_LIST__COLUMN1-label=Additional dangerous types
VVSG.2_5_2_A.EDPM.ENCAPSULATE_METHOD_LIST.SECURITY__IBA__EDPM__ENCAPSULATE_METHOD_LIST__COLUMN2-label=Validation Methods
VVSG.2_5_2_A.EDPM.msg.1=The constructor for "{0}" returns dangerous data and its arguments should be encapsulated by a validation method.
VVSG.2_5_2_A.NATIW=Use wrapper methods to secure native methods
VVSG.2_5_2_A.NATIW.msg.1={0} should only be accessed using a wrapper method.
VVSG.2_5_2_A.SC=Disable LDAP deserialization
VVSG.2_5_2_A.SC.msg.1=The SearchControls object allows deserialization
VVSG.2_5_2_A.VRD=Encapsulate all redirect and forward URLs with a validation function
VVSG.2_5_2_A.VRD.VALIDATE_METHODS-description=Validation methods (in regular expressions) [qualified name of declaring type\#method name]
VVSG.2_5_2_A.VRD.VALIDATE_METHODS-label=Validation methods (in regular expressions)
VVSG.2_5_2_A.VRD.msg.1=No validation check in redirect URL.
VVSG.2_5_2_A.VRD.msg.2=No validation check in forward URL.
VVSG.2_5_2_A.XPIJ=Avoid XPath injection when evaluating XPath queries
VVSG.2_5_2_A.XPIJ.CHECK_VAR_RESOLVER-label=Check if 'XPathVariableResolver' is not set in XPath objects
VVSG.2_5_2_A.XPIJ.msg.1=Avoid using variable ''{0}'' in XPath query.
VVSG.2_5_2_A.XPIJ.msg.2='XPathVariableResolver' is not set in XPath variable ''{0}''.
VVSG.2_5_3_A=2.5.3-A\: Escaping and encoding output
VVSG.2_5_3_A.ACPST=Do not call the 'printStackTrace()' method of "Throwable" objects.
VVSG.2_5_3_A.ACPST.IGNORE_OVERLOADED-label=Ignore overloaded methods
VVSG.2_5_3_A.ACPST.IGNORE_OVERRIDDEN-label=Ignore overridden methods
VVSG.2_5_3_A.ACPST.msg.1=The 'printStackTrace()' method of a "Throwable" object is called here.
VVSG.2_5_3_A.EWSSEC=Avoid debug information from Spring Security framework to logs
VVSG.2_5_3_A.EWSSEC.msg.1=Debug features is activated in @EnableWebSecurity annotation
VVSG.2_5_3_A.PEO=Do not pass exception messages into output in order to prevent the application from leaking sensitive information
VVSG.2_5_3_A.PEO.EXCEPTIONS-label=Exceptions (Specify types and method names in regular expressions)
VVSG.2_5_3_A.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN1-label=Type
VVSG.2_5_3_A.PEO.EXCEPTIONS.SECURITY__ESD__PEO__EXCEPTIONS__COLUMN2-label=Method
VVSG.2_5_3_A.PEO.PRINT_METHOD_EXPRESSION-label=Print methods (Specify names in regular expressions)
VVSG.2_5_3_A.PEO.msg.1=Print method ''{0}()'' is not allowed in a "catch" block.
VVSG.2_5_3_A.SIO=Avoid calling print methods of 'System.err' or 'System.out'
VVSG.2_5_3_A.SIO.METHOD_SKIP_LIST-label=Exclude methods
VVSG.2_5_3_A.SIO.SCANNED_CLASS_TABLE-label=Include classes
VVSG.2_5_3_A.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN1-label=Base class/ interface
VVSG.2_5_3_A.SIO.SCANNED_CLASS_TABLE.SECURITY__ESD__SIO__SCANNED_CLASS_TABLE__COLUMN2-label=Class/interface name (regular expression)
VVSG.2_5_3_A.SIO.msg.1=Make sure ''{0}'' is not a leftover debug statement.
VVSG.2_5_3_B=2.5.3-B\: Sanitize output
VVSG.2_5_3_B.STREP=Use library methods for string replacements of special characters in HTML and XML
VVSG.2_5_3_B.STREP.REPLACEMENTS-label=Report the replace() method called with the following string parameters\:
VVSG.2_5_3_B.STREP.REPLACEMENTS.SECURITY__WSC__STREP__TABLE_HEADER__COLUMN1-label=Old string
VVSG.2_5_3_B.STREP.REPLACEMENTS.SECURITY__WSC__STREP__TABLE_HEADER__COLUMN2-label=New string
VVSG.2_5_3_B.STREP.msg.1=String replacements of special characters found.
VVSG.2_5_4_B=2.5.4-B\: Array overflows
VVSG.2_5_4_B.CAI=Always check parameters before use in array access
VVSG.2_5_4_B.CAI.IGNORE_PRIVATE-label=Ignore private methods
VVSG.2_5_4_B.CAI.msg.1=Array ''{0}'' accessed with ''{1}''.
VVSG.2_5_4_E=2.5.4-E\: Garbage input parameters
VVSG.2_5_4_E.OOR=Avoid out of range comparisons
VVSG.2_5_4_E.OOR.CHECK_BYTE-label=Check 'byte' comparisons
VVSG.2_5_4_E.OOR.CHECK_CHAR-label=Check 'char' comparisons
VVSG.2_5_4_E.OOR.CHECK_INT-label=Check 'int' comparisons
VVSG.2_5_4_E.OOR.CHECK_SHORT-label=Check 'short' comparisons
VVSG.2_5_4_E.OOR.msg.1="{2}" variable ''{0}'' is compared to {1}, which is not within "{2}" upper and lower bounds.
VVSG.2_5_4_E.OOR.msg.2="{2}" variable ''{0}'' cannot be less than "{2}" lower bound\: {1}.
VVSG.2_5_4_E.OOR.msg.3="{2}" variable ''{0}'' cannot be greater than "{2}" upper bound\: {1}.
VVSG.2_5_4_E.OOR.msg.4="{1}" value is compared to {0}, which is not within "{1}" upper and lower bounds.
VVSG.2_5_4_F=2.5.4-F\: Numeric overflows
VVSG.2_5_4_F.BSA=Do not use an integer outside the range of [0, 31] as the amount of a shift
VVSG.2_5_4_F.BSA.msg.1=The shift amount ''{0}'' is outside the range [0, 31].
VVSG.2_5_4_F.CLP=Do not cast primitive data types to lower precision
VVSG.2_5_4_F.CLP.msg.1="{0}" type cast to lower precision "{1}" type.
VVSG.2_5_4_F.ICO=Avoid calculations which result in overflow or NaN
VVSG.2_5_4_F.ICO.msg.1=This calculation will not produce an accurate result because it will result in overflow.
VVSG.2_5_4_F.ICO.msg.2=This calculation will throw 'java.lang.ArithmeticException'.
VVSG.2_5_4_F.IOF=Use unsigned right shift instead of division when overflow is possible.
VVSG.2_5_4_F.IOF.msg.1=This integer computation may cause overflow.
VVSG.2_5_4_O=2.5.4-O\: Parameterized queries
VVSG.2_5_4_O.UPS=Use 'prepareCall' or 'prepareStatement' instead of 'createStatement'
VVSG.2_5_4_O.UPS.msg.1=Consider using 'prepareCall()' or 'prepareStatement()' to prevent SQL injection vulnerabilities
VVSG.2_5_B=2.5-B\: Unsafe concurrency
VVSG.2_5_B.AUTG=Do not use variables of the unsafe type 'java.lang.ThreadGroup'
VVSG.2_5_B.AUTG.msg.1=Use of the unsafe type ''java.lang.ThreadGroup'' \: {0}.
VVSG.2_5_B.CSFS=Do not cause deadlocks by calling a "synchronized" method from a "synchronized" method
VVSG.2_5_B.CSFS.msg.1=Calling "synchronized" method from a "synchronized" method.
VVSG.2_5_B.DCL=Avoid unsafe implementations of the "double-checked locking" pattern.
VVSG.2_5_B.DCL.msg.1=The "double-checked locking" pattern is used; this pattern can cause unexpected problems when compiler optimizations are performed.
VVSG.2_5_B.LORD=Ensure that nested locks are ordered correctly
VVSG.2_5_B.LORD.msg.1=Lock ''{0}'' should not be wrapped by lock ''{1}''.
VVSG.2_5_B.RLF=Release Locks in a "finally" block.
VVSG.2_5_B.RLF.msg.1=Lock ''{0}'' not released from "finally" block.
VVSG.2_5_B.SOPF=Do not synchronize on "public" fields since doing so may cause deadlocks
VVSG.2_5_B.SOPF.CHECK_ACCESSIBILITY-label=Check fields with the following accessibilities\:
VVSG.2_5_B.SOPF.CHECK_ACCESSIBILITY.0-label=Check "public" fields
VVSG.2_5_B.SOPF.CHECK_ACCESSIBILITY.1-label=Check non-"private" fields
VVSG.2_5_B.SOPF.msg.1=Synchronization on the "{0}" field "{1}".
VVSG.2_5_B.THRD=Avoid calling unsafe deprecated methods of 'Thread' and 'Runtime'.
VVSG.2_5_B.THRD.msg.1=Unsafe method ''{0}'' was called.
VVSG.2_5_B.THRD.msg.2=''{0}'' should not be used because it only exists for use with the deadlock-prone ''suspend()'' method.
VVSG.2_5_B.THRD.msg.3=Deadlock-prone method ''{0}'' was called.
VVSG.2_5_B.THRD.msg.4=Deprecated method ''{0}'' was called
VVSG.2_5_B.TSHL=Do not call 'Thread.sleep()' while holding a lock since doing so can cause poor performance and deadlocks.
VVSG.2_5_B.TSHL.msg.1='Thread.sleep()' called from a "synchronized" block.  It may be better to use 'wait()' instead.
VVSG.2_5_B.TSHL.msg.2='Thread.sleep()' called from a "synchronized" method.  It may be better to use 'wait()' instead.
VVSG.3_1_1_C=3.1.1-C\: System description
VVSG.3_1_1_C.PJDC=Provide Javadoc comments and descriptions for types
VVSG.3_1_1_C.PJDC.CHECK_MISSING_JAVADOC-label=Check if javadoc comment is missing
VVSG.3_1_1_C.PJDC.CHECK_PACKAGE-label=Check "package-private" types
VVSG.3_1_1_C.PJDC.CHECK_PRIVATE-label=Check "private" types
VVSG.3_1_1_C.PJDC.CHECK_PROTECTED-label=Check "protected" types
VVSG.3_1_1_C.PJDC.CHECK_PUBLIC-label=Check "public" types
VVSG.3_1_1_C.PJDC.IGNORE_LIST-label=Ignore types with fully qualified names (in regular expression)\:
VVSG.3_1_1_C.PJDC.IGNORE_LOCAL_CLASS-label=Ignore local classes (classes declared inside method body)
VVSG.3_1_1_C.PJDC.IGNORE_MEMBER_CLASS-label=Ignore member types (inner types)
VVSG.3_1_1_C.PJDC.JAVADOC.MCJCH-label=Check if javadoc description is missing
VVSG.3_1_1_C.PJDC.group.0-label=Scope of checking
VVSG.3_1_1_C.PJDC.group.1-label=Accessibility
VVSG.3_1_1_C.PJDC.group.2-label=Special case
VVSG.3_1_1_C.PJDC.msg.1=Missing Javadoc comment for ''{0}''.
VVSG.3_1_1_C.PJDC.msg.2=Missing description for ''{0}''.
VVSG.3_1_1_C.PJDF=Provide Javadoc comments and descriptions for fields
VVSG.3_1_1_C.PJDF.CHECK_MISSING_JAVADOC-label=Check if javadoc comment is missing
VVSG.3_1_1_C.PJDF.CHECK_PACKAGE-label=Check "package-private" fields
VVSG.3_1_1_C.PJDF.CHECK_PRIVATE-label=Check "private" fields
VVSG.3_1_1_C.PJDF.CHECK_PROTECTED-label=Check "protected" fields
VVSG.3_1_1_C.PJDF.CHECK_PUBLIC-label=Check "public" fields
VVSG.3_1_1_C.PJDF.IGNORE_LIST-label=Ignore fields with names (in regular expression)\:
VVSG.3_1_1_C.PJDF.JAVADOC.MFJCH-label=Check javadoc description is missing
VVSG.3_1_1_C.PJDF.group.0-label=Accessibility
VVSG.3_1_1_C.PJDF.group.1-label=Special case
VVSG.3_1_1_C.PJDF.group.2-label=Scope of checking
VVSG.3_1_1_C.PJDF.msg.1=Missing Javadoc comment for ''{0}''.
VVSG.3_1_1_C.PJDF.msg.2=Missing description for ''{0}''.
VVSG.3_1_1_C.PJDM=Provide Javadoc comments and descriptions for methods
VVSG.3_1_1_C.PJDM.CHECK_MISSING_JAVADOC-label=Check if javadoc comment is missing
VVSG.3_1_1_C.PJDM.CHECK_PACKAGE-label=Check "package-private" methods/annotation member types
VVSG.3_1_1_C.PJDM.CHECK_PRIVATE-label=Check "private" methods/annotation member types
VVSG.3_1_1_C.PJDM.CHECK_PROTECTED-label=Check "protected" methods/annotation member types
VVSG.3_1_1_C.PJDM.CHECK_PUBLIC-label=Check "public" methods/annotation member types
VVSG.3_1_1_C.PJDM.IGNORE_ABSTRACT_METHOD-label=Ignore "abstract" methods
VVSG.3_1_1_C.PJDM.IGNORE_INTERFACE_METHOD-label=Ignore method declarations within interfaces
VVSG.3_1_1_C.PJDM.IGNORE_LIST-label=Ignore methods/annotation member types with names (in regular expression)\:
VVSG.3_1_1_C.PJDM.IGNORE_LOCAL_AND_ANONYMOUS_METHOD-label=Ignore method declarations within local classes and anonymous classes
VVSG.3_1_1_C.PJDM.IGNORE_NOT_FROM_SOURCE-label=Ignore overriding methods where the source code for the overridden method is not available
VVSG.3_1_1_C.PJDM.IGNORE_OVERRIDING_METHOD-label=Ignore overriding methods
VVSG.3_1_1_C.PJDM.IGNORE_PRIVATE_MEMBER_METHOD-label=Ignore method declarations within private member classes
VVSG.3_1_1_C.PJDM.IGNORE_SETTER_GETTER-label=Ignore setter and getter methods
VVSG.3_1_1_C.PJDM.JAVADOC.MMJCH-label=Check if javadoc description is missing
VVSG.3_1_1_C.PJDM.group.0-label=Accessibility
VVSG.3_1_1_C.PJDM.group.1-label=Special case
VVSG.3_1_1_C.PJDM.group.2-label=Scope of checking
VVSG.3_1_1_C.PJDM.msg.1=Missing Javadoc comment for method ''{0}()''.
VVSG.3_1_1_C.PJDM.msg.2=Missing description for method ''{0}()''.
VVSG.5_2_B=5.2-B\: Presenting content in all languages
VVSG.5_2_B.CTLC=Do not call 'Character.toLowerCase(char)' or 'Character.toUpperCase(char)' in an internationalized environment.
VVSG.5_2_B.CTLC.msg.1=Called 'Character.toLowerCase(char)'
VVSG.5_2_B.CTLC.msg.2=Called 'Character.toUpperCase(char)'
VVSG.5_2_B.ITT=Isolate translatable text in resource bundles in an Internationalized environment
VVSG.5_2_B.ITT.CHECK_ONLY_ALPHA-label=Check only Strings that contain ASCII alphabetic characters [a-z][A-Z]
VVSG.5_2_B.ITT.IGNORED-label=Ignore String literals which match this regular expression\:
VVSG.5_2_B.ITT.IGNORE_DETAIL_MESSAGES-label=Ignore String literals passed to the constructors of Exceptions
VVSG.5_2_B.ITT.IGNORE_TABLE-label=Ignore Strings passed to the following methods
VVSG.5_2_B.ITT.IGNORE_TABLE.INTER__ITT__IGNORE_TABLE__COLUMN1-label=Type (in regular expression)
VVSG.5_2_B.ITT.IGNORE_TABLE.INTER__ITT__IGNORE_TABLE__COLUMN2-label=Method (in regular expression)
VVSG.5_2_B.ITT.msg.1=Non internationalized string\: {0}.
XML=XML Development
